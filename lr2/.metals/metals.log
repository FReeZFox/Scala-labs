2024.11.10 20:40:35 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2' for client Visual Studio Code 1.95.2.
2024.11.10 20:40:36 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:40:42 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:43 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:43 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:43 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:44 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/build.sbt
2024.11.10 20:40:43 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:44 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:44 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:44 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:44 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:44 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:46 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:46 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:46 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:46 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:46 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/build.sbt
2024.11.10 20:40:46 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:46 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:47 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:47 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:47 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/build.sbt
2024.11.10 20:40:48 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:48 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/build.sbt
2024.11.10 20:40:49 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:49 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:50 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:50 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/build.sbt
2024.11.10 20:40:51 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt
2024.11.10 20:40:51 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:51 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:40:51 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/build.sbt
2024.11.10 20:41:03 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:03 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:05 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:06 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 20:41:06 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:06 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:17 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:17 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:18 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:18 INFO  running 'C:\Users\danch\AppData\Local\Coursier\cache\arc\https\github.com\adoptium\temurin17-binaries\releases\download\jdk-17%252B35\OpenJDK17-jdk_x64_windows_hotspot_17_35.zip\jdk-17+35\bin\java.exe -Djline.terminal=jline.UnsupportedTerminal -Dsbt.log.noformat=true -Dfile.encoding=UTF-8 -jar C:\Users\danch\AppData\Local\Temp\metals10042756043599253236\sbt-launch.jar -Dbloop.export-jar-classifiers=sources bloopInstall'
2024.11.10 20:41:20 INFO  [info] welcome to sbt 1.10.5 (Eclipse Adoptium Java 17)
2024.11.10 20:41:22 INFO  [info] loading settings for project lr2-build-build from metals.sbt ...
2024.11.10 20:41:22 INFO  [info] loading project definition from D:\РџРѕР»РёС‚РµС…\5 СЃРµРјРµСЃС‚СЂ\Р¤РёР›Рџ (Р¤СѓРЅРєС†РёРѕРЅР°Р»СЊРЅРѕРµ Рё Р»РѕРіРёС‡РµСЃРєРѕРµ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёРµ)\LR2\lr2\project\project
2024.11.10 20:41:25 INFO  [info] loading settings for project lr2-build from metals.sbt ...
2024.11.10 20:41:25 INFO  [info] loading project definition from D:\РџРѕР»РёС‚РµС…\5 СЃРµРјРµСЃС‚СЂ\Р¤РёР›Рџ (Р¤СѓРЅРєС†РёРѕРЅР°Р»СЊРЅРѕРµ Рё Р»РѕРіРёС‡РµСЃРєРѕРµ РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёРµ)\LR2\lr2\project
2024.11.10 20:41:26 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:41:27 INFO  [success] Generated .bloop\lr2-build.json
2024.11.10 20:41:27 INFO  [success] Total time: 2 s, completed 10 РЅРѕСЏР±. 2024 Рі., 20:41:27
2024.11.10 20:41:29 INFO  [info] loading settings for project lr2 from build.sbt ...
2024.11.10 20:41:29 INFO  [info] set current project to hello-world (in build file:/D:/РџРѕР»РёС‚РµС…/5%20СЃРµРјРµСЃС‚СЂ/Р¤РёР›Рџ%20(Р¤СѓРЅРєС†РёРѕРЅР°Р»СЊРЅРѕРµ%20Рё%20Р»РѕРіРёС‡РµСЃРєРѕРµ%20РїСЂРѕРіСЂР°РјРјРёСЂРѕРІР°РЅРёРµ)/LR2/lr2/)
2024.11.10 20:41:29 INFO  [success] Generated .bloop\lr2.json
2024.11.10 20:41:29 INFO  [success] Generated .bloop\lr2-test.json
2024.11.10 20:41:29 INFO  [success] Total time: 1 s, completed 10 РЅРѕСЏР±. 2024 Рі., 20:41:29
2024.11.10 20:41:30 INFO  time: ran 'sbt bloopInstall' in 11s
2024.11.10 20:41:30 INFO  Attempting to connect to the build server...
2024.11.10 20:41:30 INFO  Found a Bloop server running
2024.11.10 20:41:30 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:41:30 INFO  Attempting to connect to the build server...
2024.11.10 20:41:30 INFO  Found a Bloop server running
2024.11.10 20:41:30 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:41:30 INFO  time: Connected to build server in 0.91s
2024.11.10 20:41:30 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:41:31 INFO  running doctor check
2024.11.10 20:41:31 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.10 20:41:36 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:41:41 INFO  time: indexed workspace in 10s
2024.11.10 20:41:44 INFO  compiling lr2 (1 scala source)
2024.11.10 20:41:47 INFO  time: compiled lr2 in 2.87s
нояб. 10, 2024 8:42:05 PM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2024.11.10 20:42:09 INFO  Shutting down server
2024.11.10 20:42:09 INFO  shutting down Metals
2024.11.10 20:42:09 INFO  Shut down connection with build server.
2024.11.10 20:42:09 INFO  Shut down connection with build server.
2024.11.10 20:42:09 INFO  Exiting server
2024.11.10 20:42:18 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2' for client Visual Studio Code 1.95.2.
2024.11.10 20:42:19 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:19 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:42:21 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:42:21 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
нояб. 10, 2024 8:42:21 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 9
2024.11.10 20:42:21 INFO  Attempting to connect to the build server...
2024.11.10 20:42:21 INFO  Found a Bloop server running
2024.11.10 20:42:21 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:21 INFO  Attempting to connect to the build server...
2024.11.10 20:42:21 INFO  Found a Bloop server running
2024.11.10 20:42:22 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:22 INFO  time: Connected to build server in 1.16s
2024.11.10 20:42:22 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:42:22 INFO  running doctor check
2024.11.10 20:42:22 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.10 20:42:28 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:29 INFO  Shutting down server
2024.11.10 20:42:29 INFO  shutting down Metals
2024.11.10 20:42:29 INFO  Shut down connection with build server.
2024.11.10 20:42:29 INFO  Shut down connection with build server.
2024.11.10 20:42:29 INFO  Exiting server
2024.11.10 20:42:34 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1' for client Visual Studio Code 1.95.2.
2024.11.10 20:42:39 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:39 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:42:40 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:42:40 INFO  Attempting to connect to the build server...
2024.11.10 20:42:40 INFO  Found a Bloop server running
2024.11.10 20:42:40 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:40 INFO  Attempting to connect to the build server...
2024.11.10 20:42:40 INFO  Found a Bloop server running
2024.11.10 20:42:40 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:41 INFO  Attempting to connect to the build server...
2024.11.10 20:42:41 INFO  Found a Bloop server running
2024.11.10 20:42:40 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:41 INFO  time: Connected to build server in 0.62s
2024.11.10 20:42:41 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:42:41 INFO  time: Imported build in 0.12s
2024.11.10 20:42:41 INFO  running doctor check
2024.11.10 20:42:41 INFO  java targets: 
2024.11.10 20:42:41 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:41 INFO  time: Connected to build server in 1.35s
2024.11.10 20:42:41 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:42:41 INFO  running doctor check
2024.11.10 20:42:41 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.10 20:42:43 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:43 INFO  time: indexed workspace in 2.29s
2024.11.10 20:42:43 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 20:42:43 INFO  Shut down connection with build server.
2024.11.10 20:42:43 INFO  Shut down connection with build server.
2024.11.10 20:42:44 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:44 INFO  Shut down connection with build server.
2024.11.10 20:42:44 INFO  logging to files D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals.log
2024.11.10 20:42:44 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:44 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:44 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:42:44 INFO  Attempting to connect to the build server...
2024.11.10 20:42:44 INFO  Found a Bloop server running
2024.11.10 20:42:44 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:44 INFO  Attempting to connect to the build server...
2024.11.10 20:42:44 INFO  Found a Bloop server running
2024.11.10 20:42:45 INFO  time: indexed workspace in 3.52s
2024.11.10 20:42:45 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:45 INFO  time: Connected to build server in 1.1s
2024.11.10 20:42:45 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:42:45 INFO  running doctor check
2024.11.10 20:42:45 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.10 20:42:46 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:46 INFO  time: indexed workspace in 2.02s
нояб. 10, 2024 8:42:54 PM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2024.11.10 20:42:54 INFO  logging to files D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals.log,D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals.log
2024.11.10 20:42:54 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:54 INFO  Attempting to connect to the build server...
2024.11.10 20:42:54 INFO  Found a Bloop server running
2024.11.10 20:42:55 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:55 INFO  Attempting to connect to the build server...
2024.11.10 20:42:55 INFO  Found a Bloop server running
2024.11.10 20:42:55 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:42:55 INFO  time: Connected to build server in 0.82s
2024.11.10 20:42:55 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:42:55 INFO  running doctor check
2024.11.10 20:42:55 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.10 20:42:56 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:42:56 INFO  time: indexed workspace in 1.85s
2024.11.10 20:42:57 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 20:43:01 INFO  logging to files D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals.log,D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals.log
2024.11.10 20:43:01 INFO  Shutting down server
2024.11.10 20:43:01 INFO  shutting down Metals
2024.11.10 20:43:01 INFO  Shut down connection with build server.
2024.11.10 20:43:01 INFO  Shut down connection with build server.
2024.11.10 20:43:01 INFO  Shut down connection with build server.
2024.11.10 20:43:01 INFO  Shut down connection with build server.
2024.11.10 20:43:01 INFO  Exiting server
2024.11.10 20:43:06 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2' for client Visual Studio Code 1.95.2.
2024.11.10 20:43:11 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.10 20:43:11 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:43:11 INFO  Successfully validated 6 migrations (execution time 00:00.030s)
2024.11.10 20:43:11 INFO  Current version of schema "PUBLIC": 6
2024.11.10 20:43:11 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:43:11 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
нояб. 10, 2024 8:43:11 PM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2024.11.10 20:43:12 INFO  Attempting to connect to the build server...
2024.11.10 20:43:12 INFO  Found a Bloop server running
2024.11.10 20:43:12 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.10 20:43:12 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:43:12 INFO  Successfully validated 6 migrations (execution time 00:00.006s)
2024.11.10 20:43:12 INFO  Current version of schema "PUBLIC": 6
2024.11.10 20:43:12 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:43:12 INFO  Attempting to connect to the build server...
2024.11.10 20:43:12 INFO  Found a Bloop server running
2024.11.10 20:43:12 INFO  logging to files D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals.log,D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals.log,C:\Users\danch\Documents\ФиЛП\.metals\metals.log
2024.11.10 20:43:12 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:43:12 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.10 20:43:12 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:43:12 INFO  Successfully validated 6 migrations (execution time 00:00.008s)
2024.11.10 20:43:12 INFO  Current version of schema "PUBLIC": 6
2024.11.10 20:43:12 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:43:12 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:43:12 INFO  Attempting to connect to the build server...
2024.11.10 20:43:12 INFO  Found a Bloop server running
2024.11.10 20:43:12 INFO  Attempting to connect to the build server...
2024.11.10 20:43:12 INFO  Found a Bloop server running
2024.11.10 20:43:12 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:43:12 INFO  Attempting to connect to the build server...
2024.11.10 20:43:12 INFO  Found a Bloop server running
2024.11.10 20:43:13 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:43:12 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:43:13 INFO  time: Connected to build server in 1.46s
2024.11.10 20:43:13 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:43:12 INFO  time: Connected to build server in 0.64s
2024.11.10 20:43:12 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:43:13 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:43:13 INFO  time: Connected to build server in 1.29s
2024.11.10 20:43:13 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:43:13 INFO  time: Imported build in 0.1s
2024.11.10 20:43:13 INFO  running doctor check
2024.11.10 20:43:13 INFO  java targets: main, main-test
2024.11.10 20:43:13 INFO  running doctor check
2024.11.10 20:43:13 INFO  running doctor check
2024.11.10 20:43:13 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.10 20:43:13 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.10 20:43:19 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.10 20:43:19 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.10 20:43:19 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.10 20:43:19 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:43:19 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:43:19 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:43:19 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.10 20:43:19 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.10 20:43:19 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.10 20:43:19 INFO  Current version of schema "PUBLIC": 1
2024.11.10 20:43:19 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:43:19 INFO  Current version of schema "PUBLIC": 1
2024.11.10 20:43:19 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:43:19 INFO  Current version of schema "PUBLIC": 1
2024.11.10 20:43:19 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:43:19 INFO  time: indexed workspace in 6.44s
2024.11.10 20:43:20 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 20:43:20 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.10 20:43:19 INFO  time: indexed workspace in 7.29s
2024.11.10 20:43:20 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.10 20:43:20 INFO  time: indexed workspace in 7.29s
2024.11.10 20:43:20 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 20:45:48 INFO  Disconnecting from Bloop session...
2024.11.10 20:45:48 INFO  Disconnecting from Bloop session...
2024.11.10 20:45:48 INFO  Disconnecting from Bloop session...
2024.11.10 20:45:48 INFO  Shut down connection with build server.
2024.11.10 20:45:48 INFO  Shut down connection with build server.
2024.11.10 20:45:48 INFO  Shut down connection with build server.
2024.11.10 20:45:48 INFO  Shut down connection with build server.
2024.11.10 20:45:48 INFO  Shut down connection with build server.
2024.11.10 20:45:48 INFO  Attempting to connect to the build server...
2024.11.10 20:45:48 INFO  Attempting to connect to the build server...
2024.11.10 20:45:48 INFO  No running Bloop server found, starting one.
2024.11.10 20:45:48 INFO  No running Bloop server found, starting one.
2024.11.10 20:45:48 INFO  Attempting to connect to the build server...
2024.11.10 20:45:48 INFO  No running Bloop server found, starting one.
2024.11.10 20:45:49 INFO  Starting compilation server
2024.11.10 20:45:49 INFO  Starting compilation server
2024.11.10 20:45:49 INFO  Starting compilation server
2024.11.10 20:45:51 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:45:51 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:45:51 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:45:51 INFO  Attempting to connect to the build server...
2024.11.10 20:45:51 INFO  Attempting to connect to the build server...
2024.11.10 20:45:51 INFO  time: Connected to build server in 3.02s
2024.11.10 20:45:51 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:45:51 INFO  Found a Bloop server running
2024.11.10 20:45:51 INFO  Found a Bloop server running
2024.11.10 20:45:51 INFO  time: Imported build in 0.12s
2024.11.10 20:45:51 INFO  running doctor check
2024.11.10 20:45:51 INFO  java targets: main, main-test
2024.11.10 20:45:51 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:45:51 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:45:52 INFO  time: Connected to build server in 4s
2024.11.10 20:45:52 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:45:52 INFO  time: Connected to build server in 4.01s
2024.11.10 20:45:52 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:45:51 INFO  running doctor check
2024.11.10 20:45:52 INFO  running doctor check
2024.11.10 20:45:51 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.10 20:45:52 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.10 20:45:53 INFO  time: indexed workspace in 1.36s
2024.11.10 20:45:53 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.10 20:45:53 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 20:45:53 INFO  time: indexed workspace in 1.79s
2024.11.10 20:45:53 INFO  time: indexed workspace in 1.79s
2024.11.10 20:45:53 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.10 20:45:53 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
нояб. 10, 2024 8:46:37 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 101
2024.11.10 20:46:45 INFO  compiling lr2 (1 scala source)
2024.11.10 20:46:49 INFO  time: compiled lr2 in 3.51s
нояб. 10, 2024 8:46:51 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 200
нояб. 10, 2024 8:46:51 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 205
нояб. 10, 2024 8:46:51 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 206
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 208
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 209
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 212
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 213
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 217
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 222
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 224
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 225
нояб. 10, 2024 8:46:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 43,
      "uri": "file:///d%3A/%D0%9F%D0%BE%D0%BB%D0%B8%D1%82%D0%B5%D1%85/5%20%D1%81%D0%B5%D0%BC%D0%B5%D1%81%D1%82%D1%80/%D0%A4%D0%B8%D0%9B%D0%9F%20%28%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5%20%D0%B8%20%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B5%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29/LR2/lr2/src/main/scala/Main.scala"
    },
    "contentChanges": [
      {
        "text": "\r\n@main def main(): Unit \u003d {\r\n  println(\"Hello, World!\")\r\n}"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..59]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:105)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:45)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:45)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:80)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:320)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:276)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:275)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:275)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:240)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:153)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:864)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:225)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

нояб. 10, 2024 8:46:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didChange",
  "params": {
    "textDocument": {
      "version": 44,
      "uri": "file:///d%3A/%D0%9F%D0%BE%D0%BB%D0%B8%D1%82%D0%B5%D1%85/5%20%D1%81%D0%B5%D0%BC%D0%B5%D1%81%D1%82%D1%80/%D0%A4%D0%B8%D0%9B%D0%9F%20%28%D0%A4%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5%20%D0%B8%20%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B5%20%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5%29/LR2/lr2/src/main/scala/Main.scala"
    },
    "contentChanges": [
      {
        "text": "@main def main(): Unit \u003d {\r\n  println(\"Hello, World!\")\r\n}"
      }
    ]
  }
}
java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..57]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:105)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:45)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:45)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:80)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:320)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:276)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:275)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:275)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:240)
	at scala.meta.internal.metals.Diagnostics.didChange(Diagnostics.scala:153)
	at scala.meta.internal.metals.MetalsLspService.didChange(MetalsLspService.scala:864)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChange(ProjectMetalsLspService.scala:225)
	at scala.meta.internal.metals.WorkspaceLspService.didChange(WorkspaceLspService.scala:407)
	at scala.meta.metals.lsp.DelegatingScalaService.didChange(DelegatingScalaService.scala:50)
	at jdk.internal.reflect.GeneratedMethodAccessor10.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)

2024.11.10 20:46:55 INFO  compiling lr2 (1 scala source)
2024.11.10 20:46:55 INFO  time: compiled lr2 in 0.41s
нояб. 10, 2024 8:47:02 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint fallbackResponseError
SEVERE: Internal error: java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..57]
java.util.concurrent.CompletionException: java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..57]
	at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(CompletableFuture.java:332)
	at java.base/java.util.concurrent.CompletableFuture.completeThrowable(CompletableFuture.java:347)
	at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:708)
	at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510)
	at java.base/java.util.concurrent.CompletableFuture.completeExceptionally(CompletableFuture.java:2162)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1(CancelTokens.scala:40)
	at scala.meta.internal.metals.CancelTokens$.$anonfun$future$1$adapted(CancelTokens.scala:38)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:484)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalArgumentException: -1 is not a valid offset, allowed [0..57]
	at scala.meta.internal.inputs.InternalInput.offsetToLine(InternalInput.scala:54)
	at scala.meta.internal.inputs.InternalInput.offsetToLine$(InternalInput.scala:48)
	at scala.meta.inputs.Input$VirtualFile.offsetToLine(Input.scala:105)
	at scala.meta.inputs.Position$Range.startLine$lzycompute(Position.scala:45)
	at scala.meta.inputs.Position$Range.startLine(Position.scala:45)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionMetaPosition.toLsp(ScalametaCommonEnrichments.scala:80)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.$anonfun$toRevised$8(TokenEditDistance.scala:310)
	at scala.Option.flatMap(Option.scala:283)
	at scala.meta.internal.parsing.TokenEditDistance$Diff.toRevised(TokenEditDistance.scala:241)
	at scala.meta.internal.metals.Diagnostics.toFreshDiagnostic(Diagnostics.scala:320)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2(Diagnostics.scala:276)
	at scala.meta.internal.metals.Diagnostics.$anonfun$publishDiagnostics$2$adapted(Diagnostics.scala:275)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:619)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:617)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:935)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:275)
	at scala.meta.internal.metals.Diagnostics.publishDiagnostics(Diagnostics.scala:240)
	at scala.meta.internal.metals.Diagnostics.onClose(Diagnostics.scala:137)
	at scala.meta.internal.metals.Diagnostics.onSyntaxError(Diagnostics.scala:124)
	at scala.meta.internal.metals.MetalsLspService.$anonfun$parseTreesAndPublishDiags$2(MetalsLspService.scala:625)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:687)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:467)
	... 3 more

2024.11.10 20:49:05 INFO  Shutting down server
2024.11.10 20:49:05 INFO  shutting down Metals
2024.11.10 20:49:05 INFO  Shut down connection with build server.
2024.11.10 20:49:05 INFO  Shut down connection with build server.
2024.11.10 20:49:05 INFO  Shut down connection with build server.
2024.11.10 20:49:05 INFO  Shut down connection with build server.
2024.11.10 20:49:05 INFO  Shut down connection with build server.
2024.11.10 20:49:05 INFO  Exiting server
2024.11.10 20:49:15 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП' for client Visual Studio Code 1.95.2.
2024.11.10 20:49:15 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.10 20:49:15 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:49:15 INFO  Successfully validated 6 migrations (execution time 00:00.035s)
2024.11.10 20:49:15 INFO  Current version of schema "PUBLIC": 6
2024.11.10 20:49:15 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:49:16 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.10 20:49:16 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:49:16 INFO  Successfully validated 6 migrations (execution time 00:00.005s)
2024.11.10 20:49:16 INFO  Current version of schema "PUBLIC": 6
2024.11.10 20:49:16 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:49:16 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:49:17 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:49:17 INFO  Attempting to connect to the build server...
2024.11.10 20:49:17 INFO  Attempting to connect to the build server...
2024.11.10 20:49:17 INFO  Found a Bloop server running
2024.11.10 20:49:17 INFO  Found a Bloop server running
2024.11.10 20:49:17 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.10 20:49:17 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:49:17 INFO  Successfully validated 6 migrations (execution time 00:00.005s)
2024.11.10 20:49:17 INFO  Current version of schema "PUBLIC": 6
2024.11.10 20:49:17 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:49:17 INFO  Attempting to connect to the build server...
2024.11.10 20:49:17 INFO  Found a Bloop server running
2024.11.10 20:49:17 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:49:17 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:49:17 INFO  Attempting to connect to the build server...
2024.11.10 20:49:17 INFO  Attempting to connect to the build server...
2024.11.10 20:49:17 INFO  Found a Bloop server running
2024.11.10 20:49:17 INFO  Found a Bloop server running
2024.11.10 20:49:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:49:18 INFO  time: Connected to build server in 0.72s
2024.11.10 20:49:18 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:49:18 INFO  time: Imported build in 0.11s
2024.11.10 20:49:18 INFO  running doctor check
2024.11.10 20:49:18 INFO  java targets: main, main-test
2024.11.10 20:49:18 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:49:18 INFO  time: Connected to build server in 1.57s
2024.11.10 20:49:18 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:49:18 INFO  time: Imported build in 0.15s
2024.11.10 20:49:19 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:49:19 INFO  time: Connected to build server in 1.77s
2024.11.10 20:49:19 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:49:18 INFO  running doctor check
2024.11.10 20:49:18 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.10 20:49:19 INFO  running doctor check
2024.11.10 20:49:19 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.10 20:49:25 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.10 20:49:25 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.10 20:49:25 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.10 20:49:25 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:49:25 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:49:25 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.10 20:49:25 INFO  Successfully validated 1 migration (execution time 00:00.004s)
2024.11.10 20:49:25 INFO  Successfully validated 1 migration (execution time 00:00.004s)
2024.11.10 20:49:25 INFO  Successfully validated 1 migration (execution time 00:00.004s)
2024.11.10 20:49:25 INFO  Current version of schema "PUBLIC": 1
2024.11.10 20:49:25 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:49:25 INFO  Current version of schema "PUBLIC": 1
2024.11.10 20:49:25 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:49:25 INFO  Current version of schema "PUBLIC": 1
2024.11.10 20:49:25 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.10 20:49:27 INFO  time: indexed workspace in 8.95s
2024.11.10 20:49:27 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.10 20:49:27 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
нояб. 10, 2024 8:49:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 20
2024.11.10 20:49:33 INFO  time: indexed workspace in 14s
2024.11.10 20:49:33 INFO  time: indexed workspace in 14s
2024.11.10 20:49:33 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.10 20:49:34 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
нояб. 10, 2024 8:50:46 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 48
2024.11.10 20:51:57 INFO  skipping build import with status 'Installed'
2024.11.10 20:51:57 INFO  Disconnecting from Bloop session...
2024.11.10 20:51:57 INFO  Shut down connection with build server.
2024.11.10 20:51:57 INFO  Shut down connection with build server.
2024.11.10 20:51:57 INFO  Attempting to connect to the build server...
2024.11.10 20:51:57 INFO  Found a Bloop server running
2024.11.10 20:51:57 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:51:57 INFO  Attempting to connect to the build server...
2024.11.10 20:51:57 INFO  Found a Bloop server running
2024.11.10 20:51:57 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\build.sbt. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.10 20:51:57 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.10 20:51:57 INFO  time: Connected to build server in 0.93s
2024.11.10 20:51:57 INFO  Connected to Build server: Bloop v2.0.3
2024.11.10 20:51:58 INFO  running doctor check
2024.11.10 20:51:58 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.10 20:52:00 INFO  time: indexed workspace in 2.27s
2024.11.10 20:52:10 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/Main.scala
2024.11.10 20:58:49 INFO  compiling lr2 (1 scala source)
2024.11.10 20:58:49 INFO  time: compiled lr2 in 0.99s
нояб. 10, 2024 9:02:59 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 337
нояб. 10, 2024 9:02:59 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 344
нояб. 10, 2024 9:03:02 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 387
нояб. 10, 2024 9:03:02 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 391
нояб. 10, 2024 9:03:02 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 395
нояб. 10, 2024 9:03:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 403
нояб. 10, 2024 9:03:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 409
нояб. 10, 2024 9:03:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 411
нояб. 10, 2024 9:03:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 412
нояб. 10, 2024 9:03:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 415
нояб. 10, 2024 9:03:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 416
нояб. 10, 2024 9:03:03 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 419
нояб. 10, 2024 9:03:15 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 489
нояб. 10, 2024 9:03:15 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 498
нояб. 10, 2024 9:03:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 517
нояб. 10, 2024 9:03:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 531
нояб. 10, 2024 9:03:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 535
нояб. 10, 2024 9:03:17 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 557
нояб. 10, 2024 9:03:17 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 566
нояб. 10, 2024 9:03:24 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 623
нояб. 10, 2024 9:03:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 633
нояб. 10, 2024 9:03:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 646
нояб. 10, 2024 9:03:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 647
нояб. 10, 2024 9:03:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 654
нояб. 10, 2024 9:03:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 655
нояб. 10, 2024 9:03:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 662
2024.11.10 21:03:28 INFO  compiling lr2 (1 scala source)
2024.11.10 21:03:28 INFO  time: compiled lr2 in 0.73s
2024.11.10 21:03:44 INFO  compiling lr2 (1 scala source)
2024.11.10 21:03:44 INFO  time: compiled lr2 in 0.22s
2024.11.10 21:03:53 INFO  compiling lr2 (1 scala source)
2024.11.10 21:03:53 INFO  time: compiled lr2 in 0.2s
2024.11.10 21:04:07 INFO  compiling lr2 (1 scala source)
2024.11.10 21:04:07 INFO  time: compiled lr2 in 0.25s
нояб. 10, 2024 9:07:56 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 948
2024.11.10 21:08:02 INFO  compiling lr2 (1 scala source)
2024.11.10 21:08:02 INFO  time: compiled lr2 in 0.26s
2024.11.10 21:08:06 INFO  compiling lr2 (1 scala source)
2024.11.10 21:08:06 INFO  time: compiled lr2 in 0.57s
2024.11.10 21:08:17 WARN  Could not load snapshot text for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 21:08:17 WARN  Could not load snapshot text for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 21:08:17 WARN  Could not load snapshot text for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 21:08:17 INFO  compiling lr2 (1 scala source)
2024.11.10 21:08:17 WARN  Could not load snapshot text for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\Main.scala
2024.11.10 21:08:17 INFO  time: compiled lr2 in 0.41s
2024.11.10 21:09:05 INFO  compiling lr2 (1 scala source)
2024.11.10 21:09:05 INFO  time: compiled lr2 in 0.36s
2024.11.10 21:09:37 INFO  compiling lr2 (1 scala source)
2024.11.10 21:09:37 INFO  time: compiled lr2 in 0.35s
2024.11.10 21:09:55 INFO  compiling lr2 (1 scala source)
2024.11.10 21:09:55 INFO  time: compiled lr2 in 0.34s
2024.11.10 21:10:49 INFO  compiling lr2 (1 scala source)
2024.11.10 21:10:49 INFO  time: compiled lr2 in 0.39s
2024.11.10 21:10:55 INFO  compiling lr2 (1 scala source)
2024.11.10 21:10:55 INFO  time: compiled lr2 in 0.29s
нояб. 10, 2024 9:11:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1393
2024.11.10 21:11:46 INFO  compiling lr2 (1 scala source)
2024.11.10 21:11:46 INFO  time: compiled lr2 in 0.32s
2024.11.10 21:11:51 INFO  compiling lr2 (1 scala source)
2024.11.10 21:11:51 INFO  time: compiled lr2 in 0.24s
2024.11.10 21:14:56 INFO  compiling lr2 (1 scala source)
2024.11.10 21:14:56 INFO  time: compiled lr2 in 0.29s
2024.11.10 21:14:57 INFO  compiling lr1 (1 scala source)
2024.11.10 21:14:57 INFO  time: compiled lr1 in 0.7s
2024.11.10 21:15:12 INFO  compiling lr1 (1 scala source)
2024.11.10 21:15:12 INFO  time: compiled lr1 in 0.75s
2024.11.10 21:15:31 INFO  compiling lr2 (1 scala source)
2024.11.10 21:15:31 INFO  time: compiled lr2 in 0.34s
Exception in thread "metals-watch-callback-thread" java.nio.file.FileSystemException: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2option.scala: Процесс не может получить доступ к файлу, так как этот файл занят другим процессом
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.newByteChannel(WindowsFileSystemProvider.java:236)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:380)
	at java.base/java.nio.file.Files.newByteChannel(Files.java:432)
	at java.base/java.nio.file.Files.readAllBytes(Files.java:3288)
	at scala.meta.internal.io.PlatformFileIO$.slurp(PlatformFileIO.scala:42)
	at scala.meta.internal.io.FileIO$.slurp(FileIO.scala:18)
	at scala.meta.internal.mtags.ScalametaCommonEnrichments$XtensionAbsolutePath.toInput(ScalametaCommonEnrichments.scala:442)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionAbsolutePathBuffers.toInputFromBuffers(MetalsEnrichments.scala:621)
	at scala.meta.internal.metals.Compilers.originInput$1(Compilers.scala:227)
	at scala.meta.internal.metals.Compilers.$anonfun$didChange$2(Compilers.scala:243)
	at scala.Option.getOrElse(Option.scala:201)
	at scala.meta.internal.metals.Compilers.$anonfun$didChange$1(Compilers.scala:242)
	at scala.Option.map(Option.scala:242)
	at scala.meta.internal.metals.Compilers.didChange(Compilers.scala:230)
	at scala.meta.internal.metals.MetalsLspService.onCreate(MetalsLspService.scala:383)
	at scala.meta.internal.metals.ProjectMetalsLspService.didChangeWatchedFiles(ProjectMetalsLspService.scala:417)
	at scala.meta.internal.metals.ProjectMetalsLspService.$anonfun$fileWatcher$3(ProjectMetalsLspService.scala:114)
	at scala.meta.internal.metals.ProjectMetalsLspService.$anonfun$fileWatcher$3$adapted(ProjectMetalsLspService.scala:113)
	at scala.meta.internal.metals.watcher.ProjectFileWatcher$$anon$1.loop(ProjectFileWatcher.scala:199)
	at scala.meta.internal.metals.watcher.ProjectFileWatcher$$anon$1.run(ProjectFileWatcher.scala:203)
2024.11.10 21:16:05 INFO  compiling lr2 (1 scala source)
2024.11.10 21:16:05 INFO  time: compiled lr2 in 74ms
2024.11.10 21:16:05 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task2option.scala
нояб. 10, 2024 9:16:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1615
2024.11.10 21:16:13 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task2option.scala
2024.11.10 21:16:17 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task2option.scala
2024.11.10 21:16:26 INFO  compiling lr2 (1 scala source)
2024.11.10 21:16:26 INFO  time: compiled lr2 in 0.2s
2024.11.10 21:16:42 INFO  compiling lr2 (2 scala sources)
2024.11.10 21:16:42 INFO  time: compiled lr2 in 0.14s
2024.11.10 21:16:57 INFO  compiling lr2 (2 scala sources)
2024.11.10 21:16:57 INFO  time: compiled lr2 in 0.12s
2024.11.10 21:17:00 INFO  compiling lr2 (2 scala sources)
2024.11.10 21:17:00 INFO  time: compiled lr2 in 0.12s
2024.11.10 21:17:16 INFO  compiling lr2 (2 scala sources)
2024.11.10 21:17:16 INFO  time: compiled lr2 in 0.11s
2024.11.10 21:17:39 INFO  compiling lr2 (2 scala sources)
2024.11.10 21:17:39 INFO  time: compiled lr2 in 0.34s
2024.11.10 21:18:00 INFO  compiling lr2 (1 scala source)
2024.11.10 21:18:00 INFO  time: compiled lr2 in 0.26s
2024.11.10 21:18:13 INFO  compiling lr2 (1 scala source)
2024.11.10 21:18:13 INFO  time: compiled lr2 in 0.17s
2024.11.10 21:18:39 INFO  compiling lr2 (1 scala source)
2024.11.10 21:18:39 INFO  time: compiled lr2 in 0.19s
2024.11.10 21:19:41 INFO  compiling lr2 (2 scala sources)
2024.11.10 21:19:41 INFO  time: compiled lr2 in 0.39s
2024.11.10 21:20:23 INFO  compiling lr2 (1 scala source)
2024.11.10 21:20:23 INFO  time: compiled lr2 in 0.27s
2024.11.10 21:21:43 INFO  compiling lr2 (2 scala sources)
2024.11.10 21:21:43 INFO  time: compiled lr2 in 0.35s
нояб. 10, 2024 9:27:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2454
2024.11.10 21:28:00 INFO  compiling lr2 (1 scala source)
2024.11.10 21:28:00 INFO  time: compiled lr2 in 0.27s
нояб. 10, 2024 9:28:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3005
нояб. 10, 2024 9:28:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3047
2024.11.10 21:28:21 INFO  compiling lr2 (1 scala source)
2024.11.10 21:28:21 INFO  time: compiled lr2 in 0.1s
2024.11.10 21:28:29 INFO  compiling lr2 (1 scala source)
2024.11.10 21:28:29 INFO  time: compiled lr2 in 0.23s
нояб. 10, 2024 9:28:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3250
нояб. 10, 2024 9:29:19 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3352
нояб. 10, 2024 9:29:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3455
2024.11.10 21:30:39 INFO  compiling lr2 (1 scala source)
2024.11.10 21:30:39 INFO  time: compiled lr2 in 0.18s
2024.11.10 21:30:43 INFO  compiling lr2 (1 scala source)
2024.11.10 21:30:43 INFO  time: compiled lr2 in 0.12s
нояб. 10, 2024 9:31:14 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3972
2024.11.10 21:31:19 INFO  compiling lr2 (1 scala source)
2024.11.10 21:31:19 INFO  time: compiled lr2 in 0.15s
нояб. 10, 2024 9:31:26 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4085
2024.11.10 21:33:31 INFO  compiling lr2 (1 scala source)
2024.11.10 21:33:31 INFO  time: compiled lr2 in 0.51s
нояб. 10, 2024 9:33:38 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4269
нояб. 10, 2024 9:33:38 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4276
2024.11.10 21:33:45 INFO  compiling lr2 (1 scala source)
2024.11.10 21:33:45 INFO  time: compiled lr2 in 0.15s
нояб. 10, 2024 9:33:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4386
нояб. 10, 2024 9:34:22 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4551
2024.11.10 21:34:33 INFO  compiling lr2 (1 scala source)
2024.11.10 21:34:33 INFO  time: compiled lr2 in 0.34s
2024.11.10 21:34:55 INFO  compiling lr2 (1 scala source)
2024.11.10 21:34:55 INFO  time: compiled lr2 in 0.24s
нояб. 10, 2024 9:36:37 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 4829
2024.11.10 21:36:47 INFO  compiling lr2 (1 scala source)
2024.11.10 21:36:47 INFO  time: compiled lr2 in 0.34s
2024.11.10 21:37:16 INFO  compiling lr2 (1 scala source)
2024.11.10 21:37:16 INFO  time: compiled lr2 in 60ms
2024.11.10 21:37:16 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task2b.scala
2024.11.10 21:37:21 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task2b.scala
2024.11.10 21:37:22 INFO  compiling lr2 (1 scala source)
2024.11.10 21:37:22 INFO  time: compiled lr2 in 0.1s
2024.11.10 21:37:32 INFO  compiling lr2 (1 scala source)
2024.11.10 21:37:32 INFO  time: compiled lr2 in 78ms
2024.11.10 21:37:39 INFO  compiling lr2 (1 scala source)
2024.11.10 21:37:39 INFO  time: compiled lr2 in 0.24s
нояб. 10, 2024 9:37:45 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 5120
2024.11.10 21:37:46 INFO  compiling lr2 (1 scala source)
2024.11.10 21:37:46 INFO  time: compiled lr2 in 0.19s
2024.11.10 21:37:53 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:37:53 INFO  time: compiled lr2 in 0.17s
2024.11.10 21:38:01 INFO  time: compiled lr2 in 13ms
2024.11.10 21:38:08 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:38:08 INFO  time: compiled lr2 in 0.16s
2024.11.10 21:38:23 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:38:23 INFO  time: compiled lr2 in 0.15s
2024.11.10 21:38:26 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:38:26 INFO  time: compiled lr2 in 0.13s
2024.11.10 21:39:23 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:39:23 INFO  time: compiled lr2 in 0.17s
2024.11.10 21:39:28 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:39:28 INFO  time: compiled lr2 in 0.14s
2024.11.10 21:39:34 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:39:34 INFO  time: compiled lr2 in 0.14s
2024.11.10 21:39:40 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:39:40 INFO  time: compiled lr2 in 0.14s
2024.11.10 21:39:49 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:39:49 INFO  time: compiled lr2 in 0.17s
2024.11.10 21:39:53 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:39:53 INFO  time: compiled lr2 in 0.14s
2024.11.10 21:40:02 INFO  compiling lr2 (3 scala sources)
2024.11.10 21:40:02 INFO  time: compiled lr2 in 0.36s
2024.11.10 21:40:52 INFO  compiling lr2 (1 scala source)
2024.11.10 21:40:52 INFO  time: compiled lr2 in 0.14s
2024.11.10 21:40:58 INFO  compiling lr2 (1 scala source)
2024.11.10 21:40:58 INFO  time: compiled lr2 in 0.3s
2024.11.10 21:42:48 INFO  compiling lr2 (1 scala source)
2024.11.10 21:42:48 INFO  time: compiled lr2 in 0.52s
2024.11.10 21:42:53 INFO  compiling lr2 (1 scala source)
2024.11.10 21:42:53 INFO  time: compiled lr2 in 0.37s
2024.11.10 21:43:03 INFO  compiling lr2 (1 scala source)
2024.11.10 21:43:03 INFO  time: compiled lr2 in 0.35s
2024.11.10 21:43:10 INFO  compiling lr2 (1 scala source)
2024.11.10 21:43:10 INFO  time: compiled lr2 in 0.25s
2024.11.10 21:43:30 INFO  compiling lr2 (1 scala source)
2024.11.10 21:43:30 INFO  time: compiled lr2 in 0.24s
2024.11.10 21:43:31 INFO  compiling lr2 (1 scala source)
2024.11.10 21:43:31 INFO  time: compiled lr2 in 0.27s
2024.11.10 21:44:11 INFO  compiling lr2 (1 scala source)
2024.11.10 21:44:11 INFO  time: compiled lr2 in 0.14s
2024.11.10 21:44:20 INFO  compiling lr2 (1 scala source)
2024.11.10 21:44:20 INFO  time: compiled lr2 in 0.34s
2024.11.10 21:47:27 INFO  compiling lr2 (1 scala source)
2024.11.10 21:47:27 INFO  time: compiled lr2 in 0.3s
2024.11.10 21:55:35 INFO  compiling lr2 (1 scala source)
2024.11.10 21:55:35 INFO  time: compiled lr2 in 0.28s
нояб. 10, 2024 9:58:12 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6862
нояб. 10, 2024 9:58:12 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6872
нояб. 10, 2024 9:58:12 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6876
нояб. 10, 2024 9:58:15 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 6910
нояб. 10, 2024 9:58:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7062
нояб. 10, 2024 9:58:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7065
нояб. 10, 2024 9:58:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7066
нояб. 10, 2024 9:58:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7069
нояб. 10, 2024 9:58:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7077
нояб. 10, 2024 9:58:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7231
нояб. 10, 2024 9:58:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7234
нояб. 10, 2024 9:58:52 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7236
нояб. 10, 2024 9:59:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7378
нояб. 10, 2024 9:59:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7383
нояб. 10, 2024 9:59:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7387
нояб. 10, 2024 9:59:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7388
нояб. 10, 2024 9:59:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7398
нояб. 10, 2024 9:59:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7408
нояб. 10, 2024 9:59:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7410
нояб. 10, 2024 9:59:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7445
нояб. 10, 2024 9:59:19 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7521
нояб. 10, 2024 9:59:19 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7522
нояб. 10, 2024 9:59:19 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7524
нояб. 10, 2024 9:59:20 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7534
нояб. 10, 2024 9:59:20 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7545
нояб. 10, 2024 9:59:21 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7572
нояб. 10, 2024 9:59:27 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7624
нояб. 10, 2024 9:59:27 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7639
нояб. 10, 2024 9:59:27 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7641
нояб. 10, 2024 9:59:27 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7649
нояб. 10, 2024 9:59:28 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7650
нояб. 10, 2024 9:59:28 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7653
нояб. 10, 2024 9:59:29 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 7681
2024.11.10 21:59:34 INFO  compiling lr2 (1 scala source)
2024.11.10 21:59:34 INFO  time: compiled lr2 in 0.17s
2024.11.10 22:00:18 INFO  compiling lr2 (1 scala source)
2024.11.10 22:00:18 INFO  time: compiled lr2 in 0.32s
2024.11.10 22:01:07 INFO  compiling lr2 (1 scala source)
2024.11.10 22:01:07 INFO  time: compiled lr2 in 0.3s
2024.11.10 22:02:20 INFO  compiling lr2 (1 scala source)
2024.11.10 22:02:20 INFO  time: compiled lr2 in 0.3s
2024.11.10 22:02:31 INFO  compiling lr2 (1 scala source)
2024.11.10 22:02:31 INFO  time: compiled lr2 in 0.24s
2024.11.10 22:02:36 INFO  compiling lr2 (1 scala source)
2024.11.10 22:02:36 INFO  time: compiled lr2 in 0.23s
2024.11.10 22:02:51 INFO  compiling lr2 (1 scala source)
2024.11.10 22:02:51 INFO  time: compiled lr2 in 0.22s
2024.11.10 22:03:08 INFO  compiling lr2 (1 scala source)
2024.11.10 22:03:08 INFO  time: compiled lr2 in 0.29s
нояб. 10, 2024 10:03:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8260
нояб. 10, 2024 10:03:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8267
2024.11.10 22:03:17 INFO  compiling lr2 (1 scala source)
2024.11.10 22:03:17 INFO  time: compiled lr2 in 0.23s
нояб. 10, 2024 10:04:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8459
нояб. 10, 2024 10:04:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8460
нояб. 10, 2024 10:04:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8463
2024.11.10 22:04:37 INFO  compiling lr2 (1 scala source)
2024.11.10 22:04:37 INFO  time: compiled lr2 in 0.28s
2024.11.10 22:06:36 INFO  compiling lr2 (1 scala source)
2024.11.10 22:06:36 INFO  time: compiled lr2 in 0.27s
нояб. 10, 2024 10:06:45 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8774
2024.11.10 22:06:51 INFO  compiling lr2 (1 scala source)
2024.11.10 22:06:51 INFO  time: compiled lr2 in 0.24s
нояб. 10, 2024 10:09:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8969
нояб. 10, 2024 10:09:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8973
нояб. 10, 2024 10:09:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8979
нояб. 10, 2024 10:09:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8981
нояб. 10, 2024 10:09:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8982
нояб. 10, 2024 10:09:04 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8990
нояб. 10, 2024 10:09:05 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 8993
2024.11.10 22:09:07 INFO  compiling lr2 (1 scala source)
2024.11.10 22:09:07 INFO  time: compiled lr2 in 0.3s
нояб. 10, 2024 10:09:30 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 9055
2024.11.10 22:09:34 INFO  compiling lr2 (1 scala source)
2024.11.10 22:09:34 INFO  time: compiled lr2 in 0.22s
2024.11.10 22:11:28 INFO  compiling lr2 (1 scala source)
2024.11.10 22:11:28 INFO  time: compiled lr2 in 0.25s
2024.11.10 22:11:36 INFO  compiling lr2 (1 scala source)
2024.11.10 22:11:36 INFO  time: compiled lr2 in 0.2s
2024.11.10 22:14:47 INFO  compiling lr2 (1 scala source)
2024.11.10 22:14:47 WARN  there was 1 deprecation warning; re-run with -deprecation for details
2024.11.10 22:14:47 INFO  time: compiled lr2 in 0.29s
2024.11.10 22:16:59 INFO  compiling lr2 (1 scala source)
2024.11.10 22:16:59 INFO  time: compiled lr2 in 0.17s
нояб. 10, 2024 10:17:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10008
нояб. 10, 2024 10:17:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10009
нояб. 10, 2024 10:17:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10013
нояб. 10, 2024 10:17:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10014
нояб. 10, 2024 10:17:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10017
нояб. 10, 2024 10:17:01 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10019
нояб. 10, 2024 10:17:02 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10023
нояб. 10, 2024 10:17:07 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10089
нояб. 10, 2024 10:17:08 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10099
2024.11.10 22:17:11 INFO  compiling lr2 (1 scala source)
2024.11.10 22:17:11 INFO  time: compiled lr2 in 0.11s
нояб. 10, 2024 10:18:29 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 10371
2024.11.10 22:18:36 INFO  compiling lr2 (1 scala source)
2024.11.10 22:18:36 WARN  there were 4 deprecation warnings; re-run with -deprecation for details
2024.11.10 22:18:36 INFO  time: compiled lr2 in 0.27s
2024.11.10 22:19:18 INFO  compiling lr2 (1 scala source)
2024.11.10 22:19:18 WARN  there were 6 deprecation warnings; re-run with -deprecation for details
2024.11.10 22:19:18 INFO  time: compiled lr2 in 0.27s
2024.11.10 22:19:21 INFO  compiling lr2 (1 scala source)
2024.11.10 22:19:21 WARN  there were 5 deprecation warnings; re-run with -deprecation for details
2024.11.10 22:19:21 INFO  time: compiled lr2 in 0.27s
2024.11.10 22:22:16 INFO  compiling lr2 (1 scala source)
2024.11.10 22:22:16 INFO  time: compiled lr2 in 0.32s
2024.11.10 22:22:32 INFO  compiling lr2 (1 scala source)
2024.11.10 22:22:32 INFO  time: compiled lr2 in 0.24s
2024.11.10 22:22:55 INFO  compiling lr2 (1 scala source)
2024.11.10 22:22:55 INFO  time: compiled lr2 in 0.2s
2024.11.10 22:23:39 INFO  compiling lr2 (1 scala source)
2024.11.10 22:23:39 INFO  time: compiled lr2 in 0.14s
2024.11.10 22:23:55 INFO  compiling lr2 (1 scala source)
2024.11.10 22:23:55 INFO  time: compiled lr2 in 0.22s
нояб. 10, 2024 10:24:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11204
нояб. 10, 2024 10:24:10 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11219
нояб. 10, 2024 10:24:11 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11244
2024.11.10 22:24:13 INFO  compiling lr2 (1 scala source)
2024.11.10 22:24:13 INFO  time: compiled lr2 in 0.25s
нояб. 10, 2024 10:24:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11399
нояб. 10, 2024 10:24:35 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11425
2024.11.10 22:24:44 INFO  compiling lr2 (1 scala source)
2024.11.10 22:24:44 INFO  time: compiled lr2 in 0.21s
нояб. 10, 2024 10:25:09 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 11657
2024.11.10 22:25:11 INFO  compiling lr2 (1 scala source)
2024.11.10 22:25:11 INFO  time: compiled lr2 in 0.23s
2024.11.10 22:25:21 INFO  compiling lr2 (1 scala source)
2024.11.10 22:25:21 INFO  time: compiled lr2 in 0.21s
2024.11.10 22:28:27 INFO  compiling lr2 (1 scala source)
2024.11.10 22:28:27 INFO  time: compiled lr2 in 0.14s
2024.11.10 22:28:38 INFO  compiling lr2 (1 scala source)
2024.11.10 22:28:38 INFO  time: compiled lr2 in 0.21s
2024.11.10 22:30:31 INFO  compiling lr2 (1 scala source)
2024.11.10 22:30:31 INFO  time: compiled lr2 in 0.28s
2024.11.10 22:31:02 INFO  compiling lr2 (1 scala source)
2024.11.10 22:31:02 INFO  time: compiled lr2 in 0.12s
2024.11.10 22:31:04 INFO  compiling lr2 (1 scala source)
2024.11.10 22:31:04 WARN  there was 1 deprecation warning; re-run with -deprecation for details
2024.11.10 22:31:04 INFO  time: compiled lr2 in 0.23s
2024.11.10 22:31:12 INFO  compiling lr2 (1 scala source)
2024.11.10 22:31:12 WARN  there were 3 deprecation warnings; re-run with -deprecation for details
2024.11.10 22:31:12 INFO  time: compiled lr2 in 0.24s
нояб. 10, 2024 10:32:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 12274
нояб. 10, 2024 10:32:25 PM scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\.reports\metals-full\2024-11-10\r_compiler-error_(lr2)_22-32-25-976.md
2024.11.10 22:32:27 INFO  compiling lr2 (1 scala source)
2024.11.10 22:32:27 WARN  there was 1 deprecation warning; re-run with -deprecation for details
2024.11.10 22:32:27 INFO  time: compiled lr2 in 0.23s
нояб. 10, 2024 10:32:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 12329
2024.11.10 22:32:36 INFO  compiling lr2 (1 scala source)
2024.11.10 22:32:36 INFO  time: compiled lr2 in 0.22s
нояб. 10, 2024 10:32:53 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 12400
2024.11.10 22:33:49 INFO  compiling lr2 (1 scala source)
2024.11.10 22:33:49 INFO  time: compiled lr2 in 0.25s
2024.11.10 22:39:42 INFO  compiling lr2 (1 scala source)
2024.11.10 22:39:42 INFO  time: compiled lr2 in 0.47s
нояб. 10, 2024 10:40:15 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 13113
2024.11.10 22:41:09 INFO  time: compiled lr2 in 1ms
2024.11.10 22:46:49 INFO  compiling lr2 (1 scala source)
2024.11.10 22:46:49 INFO  time: compiled lr2 in 60ms
2024.11.10 22:46:49 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task2c.scala
2024.11.10 22:47:00 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task2c.scala
2024.11.10 22:47:06 INFO  compiling lr2 (1 scala source)
2024.11.10 22:47:06 INFO  time: compiled lr2 in 0.17s
2024.11.10 22:47:11 INFO  compiling lr2 (1 scala source)
2024.11.10 22:47:11 INFO  time: compiled lr2 in 0.2s
2024.11.10 22:47:27 INFO  compiling lr2 (1 scala source)
2024.11.10 22:47:27 INFO  time: compiled lr2 in 0.15s
2024.11.10 22:47:29 INFO  compiling lr2 (1 scala source)
2024.11.10 22:47:29 INFO  time: compiled lr2 in 0.22s
2024.11.10 22:47:35 INFO  compiling lr2 (1 scala source)
2024.11.10 22:47:35 INFO  time: compiled lr2 in 0.26s
2024.11.10 22:48:23 INFO  Shutting down server
2024.11.10 22:48:23 INFO  shutting down Metals
2024.11.10 22:48:23 INFO  Shut down connection with build server.
2024.11.10 22:48:23 INFO  Shut down connection with build server.
2024.11.10 22:48:23 INFO  Shut down connection with build server.
2024.11.10 22:48:23 INFO  Shut down connection with build server.
2024.11.10 22:48:23 INFO  Shut down connection with build server.
2024.11.10 22:48:23 INFO  Exiting server
2024.11.11 12:56:19 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП' for client Visual Studio Code 1.95.2.
2024.11.11 12:56:20 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.11 12:56:20 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 12:56:20 INFO  Successfully validated 6 migrations (execution time 00:00.035s)
2024.11.11 12:56:20 INFO  Current version of schema "PUBLIC": 6
2024.11.11 12:56:20 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 12:56:21 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 12:56:21 INFO  Attempting to connect to the build server...
2024.11.11 12:56:21 INFO  No running Bloop server found, starting one.
2024.11.11 12:56:21 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.11 12:56:21 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 12:56:21 INFO  Successfully validated 6 migrations (execution time 00:00.013s)
2024.11.11 12:56:21 INFO  Current version of schema "PUBLIC": 6
2024.11.11 12:56:21 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 12:56:21 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.11 12:56:21 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 12:56:21 INFO  Successfully validated 6 migrations (execution time 00:00.023s)
2024.11.11 12:56:21 INFO  Current version of schema "PUBLIC": 6
2024.11.11 12:56:21 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 12:56:21 INFO  Attempting to connect to the build server...
2024.11.11 12:56:21 INFO  No running Bloop server found, starting one.
2024.11.11 12:56:21 INFO  Attempting to connect to the build server...
2024.11.11 12:56:21 INFO  No running Bloop server found, starting one.
2024.11.11 12:56:26 INFO  Starting compilation server
2024.11.11 12:56:26 INFO  Starting compilation server
2024.11.11 12:56:26 INFO  Starting compilation server
2024.11.11 12:56:32 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 12:56:32 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 12:56:32 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 12:56:35 INFO  Attempting to connect to the build server...
2024.11.11 12:56:35 INFO  Attempting to connect to the build server...
2024.11.11 12:56:35 INFO  time: Connected to build server in 14s
2024.11.11 12:56:35 INFO  Found a Bloop server running
2024.11.11 12:56:35 INFO  Found a Bloop server running
2024.11.11 12:56:35 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 12:56:36 INFO  time: Imported build in 0.17s
2024.11.11 12:56:36 INFO  running doctor check
2024.11.11 12:56:36 INFO  java targets: main, main-test
2024.11.11 12:56:36 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 12:56:36 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 12:56:35 INFO  time: Connected to build server in 14s
2024.11.11 12:56:36 INFO  time: Connected to build server in 15s
2024.11.11 12:56:36 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 12:56:35 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 12:56:36 INFO  time: Imported build in 0.21s
2024.11.11 12:56:36 INFO  time: Imported build in 0.21s
2024.11.11 12:56:35 INFO  running doctor check
2024.11.11 12:56:36 INFO  running doctor check
2024.11.11 12:56:36 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.11 12:56:35 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.11 12:56:38 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 12:56:38 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 12:56:38 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.11 12:56:38 INFO  Current version of schema "PUBLIC": 1
2024.11.11 12:56:38 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 12:56:40 INFO  time: indexed workspace in 4.37s
2024.11.11 12:56:40 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala
2024.11.11 12:56:40 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2c.scala
2024.11.11 12:56:41 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 12:56:41 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 12:56:41 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.11 12:56:41 INFO  Current version of schema "PUBLIC": 1
2024.11.11 12:56:41 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 12:56:41 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 12:56:41 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 12:56:41 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.11 12:56:41 INFO  Current version of schema "PUBLIC": 1
2024.11.11 12:56:41 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 12:56:48 INFO  time: indexed workspace in 11s
2024.11.11 12:56:48 INFO  time: indexed workspace in 11s
2024.11.11 12:56:48 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2c.scala
2024.11.11 12:56:48 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala
2024.11.11 12:57:39 INFO  compiling lr2 (1 scala source)
2024.11.11 12:57:44 INFO  time: compiled lr2 in 5.38s
2024.11.11 12:59:21 INFO  compiling lr2 (1 scala source)
2024.11.11 12:59:23 INFO  time: compiled lr2 in 2.14s
2024.11.11 12:59:35 INFO  compiling lr2 (1 scala source)
2024.11.11 12:59:37 INFO  time: compiled lr2 in 1.16s
2024.11.11 12:59:49 INFO  compiling lr2 (1 scala source)
2024.11.11 12:59:49 INFO  time: compiled lr2 in 0.52s
2024.11.11 13:00:08 INFO  compiling lr2 (1 scala source)
2024.11.11 13:00:09 INFO  time: compiled lr2 in 1.41s
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 348
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 352
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 354
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 355
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 357
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 358
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 361
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 362
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 363
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 366
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 367
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 360
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 350
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 368
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 369
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 370
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 371
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 372
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 373
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 374
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 375
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 376
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 377
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 378
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 379
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 380
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 382
нояб. 11, 2024 1:00:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 383
2024.11.11 13:00:15 INFO  compiling lr2 (1 scala source)
2024.11.11 13:00:15 INFO  time: compiled lr2 in 0.89s
2024.11.11 13:01:10 INFO  compiling lr2 (1 scala source)
2024.11.11 13:01:10 INFO  time: compiled lr2 in 0.99s
2024.11.11 13:07:59 INFO  compiling lr2 (1 scala source)
2024.11.11 13:07:59 INFO  time: compiled lr2 in 0.51s
2024.11.11 13:08:13 INFO  compiling lr2 (1 scala source)
2024.11.11 13:08:13 INFO  time: compiled lr2 in 0.36s
2024.11.11 13:08:31 INFO  compiling lr2 (1 scala source)
2024.11.11 13:08:31 INFO  time: compiled lr2 in 0.38s
нояб. 11, 2024 1:08:33 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1005
2024.11.11 13:08:35 INFO  compiling lr2 (1 scala source)
2024.11.11 13:08:35 INFO  time: compiled lr2 in 0.38s
2024.11.11 13:09:39 INFO  compiling lr2 (1 scala source)
2024.11.11 13:09:39 INFO  time: compiled lr2 in 0.45s
2024.11.11 13:09:42 INFO  compiling lr2 (1 scala source)
2024.11.11 13:09:42 INFO  time: compiled lr2 in 0.16s
нояб. 11, 2024 1:09:44 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1120
нояб. 11, 2024 1:09:44 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1129
2024.11.11 13:09:46 INFO  compiling lr2 (1 scala source)
2024.11.11 13:09:46 INFO  time: compiled lr2 in 0.3s
2024.11.11 13:10:13 INFO  compiling lr2 (1 scala source)
2024.11.11 13:10:13 INFO  time: compiled lr2 in 0.33s
2024.11.11 13:10:18 INFO  compiling lr2 (1 scala source)
2024.11.11 13:10:18 INFO  time: compiled lr2 in 0.33s
2024.11.11 13:14:12 INFO  compiling lr2 (1 scala source)
2024.11.11 13:14:12 INFO  time: compiled lr2 in 0.35s
2024.11.11 13:14:19 INFO  compiling lr2 (1 scala source)
2024.11.11 13:14:19 INFO  time: compiled lr2 in 0.38s
2024.11.11 13:16:49 INFO  compiling lr2 (2 scala sources)
2024.11.11 13:16:49 INFO  time: compiled lr2 in 0.34s
нояб. 11, 2024 1:16:57 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1545
2024.11.11 13:16:58 INFO  compiling lr2 (2 scala sources)
2024.11.11 13:16:58 INFO  time: compiled lr2 in 0.37s
2024.11.11 13:17:00 INFO  compiling lr2 (2 scala sources)
2024.11.11 13:17:00 INFO  time: compiled lr2 in 0.3s
2024.11.11 13:17:24 INFO  compiling lr2 (2 scala sources)
2024.11.11 13:17:24 INFO  time: compiled lr2 in 0.92s
2024.11.11 13:17:27 INFO  compiling lr2 (1 scala source)
2024.11.11 13:17:27 INFO  time: compiled lr2 in 0.67s
нояб. 11, 2024 1:17:34 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 1644
2024.11.11 13:17:41 INFO  compiling lr2 (1 scala source)
2024.11.11 13:17:41 INFO  time: compiled lr2 in 0.7s
2024.11.11 13:20:36 INFO  compiling lr2 (1 scala source)
2024.11.11 13:20:36 INFO  time: compiled lr2 in 0.19s
2024.11.11 13:20:39 INFO  time: compiled lr2 in 16ms
2024.11.11 13:21:54 INFO  compiling lr2 (1 scala source)
2024.11.11 13:21:54 INFO  time: compiled lr2 in 0.5s
2024.11.11 13:21:58 INFO  compiling lr2 (1 scala source)
2024.11.11 13:21:58 INFO  time: compiled lr2 in 0.2s
2024.11.11 13:22:15 INFO  compiling lr2 (1 scala source)
2024.11.11 13:22:15 INFO  time: compiled lr2 in 0.51s
2024.11.11 13:38:16 INFO  compiling lr2 (1 scala source)
2024.11.11 13:38:16 INFO  time: compiled lr2 in 0.29s
2024.11.11 13:38:30 INFO  compiling lr2 (1 scala source)
2024.11.11 13:38:30 INFO  time: compiled lr2 in 0.26s
нояб. 11, 2024 1:38:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2282
нояб. 11, 2024 1:38:43 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2285
нояб. 11, 2024 1:38:44 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2302
2024.11.11 13:38:45 INFO  compiling lr2 (1 scala source)
2024.11.11 13:38:45 INFO  time: compiled lr2 in 0.28s
нояб. 11, 2024 1:38:50 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2326
нояб. 11, 2024 1:38:50 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2330
нояб. 11, 2024 1:38:50 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 2331
2024.11.11 13:38:52 INFO  compiling lr2 (1 scala source)
2024.11.11 13:38:52 INFO  time: compiled lr2 in 0.5s
нояб. 11, 2024 1:39:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/Thread.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\n\npackage java.lang;\n\nimport java.lang.ref.Reference;\nimport java.lang.ref.ReferenceQueue;\nimport java.lang.ref.WeakReference;\nimport java.security.AccessController;\nimport java.security.AccessControlContext;\nimport java.security.PrivilegedAction;\nimport java.util.Map;\nimport java.util.HashMap;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.concurrent.ConcurrentMap;\nimport java.util.concurrent.TimeUnit;\nimport java.util.concurrent.locks.LockSupport;\n\nimport jdk.internal.misc.TerminatingThreadLocal;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * A \u003ci\u003ethread\u003c/i\u003e is a thread of execution in a program. The Java\n * Virtual Machine allows an application to have multiple threads of\n * execution running concurrently.\n * \u003cp\u003e\n * Every thread has a priority. Threads with higher priority are\n * executed in preference to threads with lower priority. Each thread\n * may or may not also be marked as a daemon. When code running in\n * some thread creates a new {@code Thread} object, the new\n * thread has its priority initially set equal to the priority of the\n * creating thread, and is a daemon thread if and only if the\n * creating thread is a daemon.\n * \u003cp\u003e\n * When a Java Virtual Machine starts up, there is usually a single\n * non-daemon thread (which typically calls the method named\n * {@code main} of some designated class). The Java Virtual\n * Machine continues to execute threads until either of the following\n * occurs:\n * \u003cul\u003e\n * \u003cli\u003eThe {@code exit} method of class {@code Runtime} has been\n *     called and the security manager has permitted the exit operation\n *     to take place.\n * \u003cli\u003eAll threads that are not daemon threads have died, either by\n *     returning from the call to the {@code run} method or by\n *     throwing an exception that propagates beyond the {@code run}\n *     method.\n * \u003c/ul\u003e\n * \u003cp\u003e\n * There are two ways to create a new thread of execution. One is to\n * declare a class to be a subclass of {@code Thread}. This\n * subclass should override the {@code run} method of class\n * {@code Thread}. An instance of the subclass can then be\n * allocated and started. For example, a thread that computes primes\n * larger than a stated value could be written as follows:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeThread extends Thread {\n *         long minPrime;\n *         PrimeThread(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeThread p \u003d new PrimeThread(143);\n *     p.start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * The other way to create a thread is to declare a class that\n * implements the {@code Runnable} interface. That class then\n * implements the {@code run} method. An instance of the class can\n * then be allocated, passed as an argument when creating\n * {@code Thread}, and started. The same example in this other\n * style looks like the following:\n * \u003chr\u003e\u003cblockquote\u003e\u003cpre\u003e\n *     class PrimeRun implements Runnable {\n *         long minPrime;\n *         PrimeRun(long minPrime) {\n *             this.minPrime \u003d minPrime;\n *         }\n *\n *         public void run() {\n *             // compute primes larger than minPrime\n *             \u0026nbsp;.\u0026nbsp;.\u0026nbsp;.\n *         }\n *     }\n * \u003c/pre\u003e\u003c/blockquote\u003e\u003chr\u003e\n * \u003cp\u003e\n * The following code would then create a thread and start it running:\n * \u003cblockquote\u003e\u003cpre\u003e\n *     PrimeRun p \u003d new PrimeRun(143);\n *     new Thread(p).start();\n * \u003c/pre\u003e\u003c/blockquote\u003e\n * \u003cp\u003e\n * Every thread has a name for identification purposes. More than\n * one thread may have the same name. If a name is not specified when\n * a thread is created, a new name is generated for it.\n * \u003cp\u003e\n * Unless otherwise noted, passing a {@code null} argument to a constructor\n * or method in this class will cause a {@link NullPointerException} to be\n * thrown.\n *\n * @see     Runnable\n * @see     Runtime#exit(int)\n * @see     #run()\n * @see     #stop()\n * @since   1.0\n */\npublic class Thread implements Runnable {\n    /* Make sure registerNatives is the first thing \u003cclinit\u003e does. */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    private volatile String name;\n    private int priority;\n\n    /* Whether or not the thread is a daemon thread. */\n    private boolean daemon \u003d false;\n\n    /* Interrupt state of the thread - read/written directly by JVM */\n    private volatile boolean interrupted;\n\n    /* Fields reserved for exclusive use by the JVM */\n    private boolean stillborn \u003d false;\n    private long eetop;\n\n    /* What will be run. */\n    private Runnable target;\n\n    /* The group of this thread */\n    private ThreadGroup group;\n\n    /* The context ClassLoader for this thread */\n    private ClassLoader contextClassLoader;\n\n    /* The inherited AccessControlContext of this thread */\n    @SuppressWarnings(\"removal\")\n    private AccessControlContext inheritedAccessControlContext;\n\n    /* For autonumbering anonymous threads. */\n    private static int threadInitNumber;\n    private static synchronized int nextThreadNum() {\n        return threadInitNumber++;\n    }\n\n    /* ThreadLocal values pertaining to this thread. This map is maintained\n     * by the ThreadLocal class. */\n    ThreadLocal.ThreadLocalMap threadLocals \u003d null;\n\n    /*\n     * InheritableThreadLocal values pertaining to this thread. This map is\n     * maintained by the InheritableThreadLocal class.\n     */\n    ThreadLocal.ThreadLocalMap inheritableThreadLocals \u003d null;\n\n    /*\n     * The requested stack size for this thread, or 0 if the creator did\n     * not specify a stack size.  It is up to the VM to do whatever it\n     * likes with this number; some VMs will ignore it.\n     */\n    private final long stackSize;\n\n    /*\n     * Thread ID\n     */\n    private final long tid;\n\n    /* For generating thread ID */\n    private static long threadSeqNumber;\n\n    private static synchronized long nextThreadID() {\n        return ++threadSeqNumber;\n    }\n\n    /*\n     * Java thread status for tools, default indicates thread \u0027not yet started\u0027\n     */\n    private volatile int threadStatus;\n\n    /**\n     * The argument supplied to the current call to\n     * java.util.concurrent.locks.LockSupport.park.\n     * Set by (private) java.util.concurrent.locks.LockSupport.setBlocker\n     * Accessed using java.util.concurrent.locks.LockSupport.getBlocker\n     */\n    volatile Object parkBlocker;\n\n    /* The object in which this thread is blocked in an interruptible I/O\n     * operation, if any.  The blocker\u0027s interrupt method should be invoked\n     * after setting this thread\u0027s interrupt status.\n     */\n    private volatile Interruptible blocker;\n    private final Object blockerLock \u003d new Object();\n\n    /* Set the blocker field; invoked via jdk.internal.access.SharedSecrets\n     * from java.nio code\n     */\n    static void blockedOn(Interruptible b) {\n        Thread me \u003d Thread.currentThread();\n        synchronized (me.blockerLock) {\n            me.blocker \u003d b;\n        }\n    }\n\n    /**\n     * The minimum priority that a thread can have.\n     */\n    public static final int MIN_PRIORITY \u003d 1;\n\n    /**\n     * The default priority that is assigned to a thread.\n     */\n    public static final int NORM_PRIORITY \u003d 5;\n\n    /**\n     * The maximum priority that a thread can have.\n     */\n    public static final int MAX_PRIORITY \u003d 10;\n\n    /**\n     * Returns a reference to the currently executing thread object.\n     *\n     * @return  the currently executing thread.\n     */\n    @IntrinsicCandidate\n    public static native Thread currentThread();\n\n    /**\n     * A hint to the scheduler that the current thread is willing to yield\n     * its current use of a processor. The scheduler is free to ignore this\n     * hint.\n     *\n     * \u003cp\u003e Yield is a heuristic attempt to improve relative progression\n     * between threads that would otherwise over-utilise a CPU. Its use\n     * should be combined with detailed profiling and benchmarking to\n     * ensure that it actually has the desired effect.\n     *\n     * \u003cp\u003e It is rarely appropriate to use this method. It may be useful\n     * for debugging or testing purposes, where it may help to reproduce\n     * bugs due to race conditions. It may also be useful when designing\n     * concurrency control constructs such as the ones in the\n     * {@link java.util.concurrent.locks} package.\n     */\n    public static native void yield();\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds, subject to\n     * the precision and accuracy of system timers and schedulers. The thread\n     * does not lose ownership of any monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static native void sleep(long millis) throws InterruptedException;\n\n    /**\n     * Causes the currently executing thread to sleep (temporarily cease\n     * execution) for the specified number of milliseconds plus the specified\n     * number of nanoseconds, subject to the precision and accuracy of system\n     * timers and schedulers. The thread does not lose ownership of any\n     * monitors.\n     *\n     * @param  millis\n     *         the length of time to sleep in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to sleep\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value of\n     *          {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public static void sleep(long millis, int nanos)\n    throws InterruptedException {\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        sleep(millis);\n    }\n\n    /**\n     * Indicates that the caller is momentarily unable to progress, until the\n     * occurrence of one or more actions on the part of other activities. By\n     * invoking this method within each iteration of a spin-wait loop construct,\n     * the calling thread indicates to the runtime that it is busy-waiting.\n     * The runtime may take action to improve the performance of invoking\n     * spin-wait loop constructions.\n     *\n     * @apiNote\n     * As an example consider a method in a class that spins in a loop until\n     * some flag is set outside of that method. A call to the {@code onSpinWait}\n     * method should be placed inside the spin loop.\n     * \u003cpre\u003e{@code\n     *     class EventHandler {\n     *         volatile boolean eventNotificationNotReceived;\n     *         void waitForEventAndHandleIt() {\n     *             while ( eventNotificationNotReceived ) {\n     *                 java.lang.Thread.onSpinWait();\n     *             }\n     *             readAndProcessEvent();\n     *         }\n     *\n     *         void readAndProcessEvent() {\n     *             // Read event from some source and process it\n     *              . . .\n     *         }\n     *     }\n     * }\u003c/pre\u003e\n     * \u003cp\u003e\n     * The code above would remain correct even if the {@code onSpinWait}\n     * method was not called at all. However on some architectures the Java\n     * Virtual Machine may issue the processor instructions to address such\n     * code patterns in a more beneficial way.\n     *\n     * @since 9\n     */\n    @IntrinsicCandidate\n    public static void onSpinWait() {}\n\n    /**\n     * Initializes a Thread.\n     *\n     * @param g the Thread group\n     * @param target the object whose run() method gets called\n     * @param name the name of the new Thread\n     * @param stackSize the desired stack size for the new thread, or\n     *        zero to indicate that this parameter is to be ignored.\n     * @param acc the AccessControlContext to inherit, or\n     *            AccessController.getContext() if null\n     * @param inheritThreadLocals if {@code true}, inherit initial values for\n     *            inheritable thread-locals from the constructing thread\n     */\n    @SuppressWarnings(\"removal\")\n    private Thread(ThreadGroup g, Runnable target, String name,\n                   long stackSize, AccessControlContext acc,\n                   boolean inheritThreadLocals) {\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n\n        Thread parent \u003d currentThread();\n        SecurityManager security \u003d System.getSecurityManager();\n        if (g \u003d\u003d null) {\n            /* Determine if it\u0027s an applet or not */\n\n            /* If there is a security manager, ask the security manager\n               what to do. */\n            if (security !\u003d null) {\n                g \u003d security.getThreadGroup();\n            }\n\n            /* If the security manager doesn\u0027t have a strong opinion\n               on the matter, use the parent thread group. */\n            if (g \u003d\u003d null) {\n                g \u003d parent.getThreadGroup();\n            }\n        }\n\n        /* checkAccess regardless of whether or not threadgroup is\n           explicitly passed in. */\n        g.checkAccess();\n\n        /*\n         * Do we have the required permissions?\n         */\n        if (security !\u003d null) {\n            if (isCCLOverridden(getClass())) {\n                security.checkPermission(\n                        SecurityConstants.SUBCLASS_IMPLEMENTATION_PERMISSION);\n            }\n        }\n\n        g.addUnstarted();\n\n        this.group \u003d g;\n        this.daemon \u003d parent.isDaemon();\n        this.priority \u003d parent.getPriority();\n        if (security \u003d\u003d null || isCCLOverridden(parent.getClass()))\n            this.contextClassLoader \u003d parent.getContextClassLoader();\n        else\n            this.contextClassLoader \u003d parent.contextClassLoader;\n        this.inheritedAccessControlContext \u003d\n                acc !\u003d null ? acc : AccessController.getContext();\n        this.target \u003d target;\n        setPriority(priority);\n        if (inheritThreadLocals \u0026\u0026 parent.inheritableThreadLocals !\u003d null)\n            this.inheritableThreadLocals \u003d\n                ThreadLocal.createInheritedMap(parent.inheritableThreadLocals);\n        /* Stash the specified stack size in case the VM cares */\n        this.stackSize \u003d stackSize;\n\n        /* Set thread ID */\n        this.tid \u003d nextThreadID();\n    }\n\n    /**\n     * Throws CloneNotSupportedException as a Thread can not be meaningfully\n     * cloned. Construct a new Thread instead.\n     *\n     * @throws  CloneNotSupportedException\n     *          always\n     */\n    @Override\n    protected Object clone() throws CloneNotSupportedException {\n        throw new CloneNotSupportedException();\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     */\n    public Thread() {\n        this(null, null, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, gname)}, where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this classes {@code run} method does\n     *         nothing.\n     */\n    public Thread(Runnable target) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Creates a new Thread that inherits the given AccessControlContext\n     * but thread-local variables are not inherited.\n     * This is not a public constructor.\n     */\n    Thread(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n        this(null, target, \"Thread-\" + nextThreadNum(), 0, acc, false);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, target, gname)} ,where {@code gname} is a newly generated\n     * name. Automatically generated names are of the form\n     * {@code \"Thread-\"+}\u003ci\u003en\u003c/i\u003e, where \u003ci\u003en\u003c/i\u003e is an integer.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, Runnable target) {\n        this(group, target, \"Thread-\" + nextThreadNum(), 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, null, name)}.\n     *\n     * @param   name\n     *          the name of the new thread\n     */\n    public Thread(String name) {\n        this(null, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (group, null, name)}.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     */\n    public Thread(ThreadGroup group, String name) {\n        this(group, null, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object. This constructor has the same\n     * effect as {@linkplain #Thread(ThreadGroup,Runnable,String) Thread}\n     * {@code (null, target, name)}.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     */\n    public Thread(Runnable target, String name) {\n        this(null, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}.\n     *\n     * \u003cp\u003eIf there is a security manager, its\n     * {@link SecurityManager#checkAccess(ThreadGroup) checkAccess}\n     * method is invoked with the ThreadGroup as its argument.\n     *\n     * \u003cp\u003eIn addition, its {@code checkPermission} method is invoked with\n     * the {@code RuntimePermission(\"enableContextClassLoaderOverride\")}\n     * permission when invoked directly or indirectly by the constructor\n     * of a subclass which overrides the {@code getContextClassLoader}\n     * or {@code setContextClassLoader} methods.\n     *\n     * \u003cp\u003eThe priority of the newly created thread is set equal to the\n     * priority of the thread creating it, that is, the currently running\n     * thread. The method {@linkplain #setPriority setPriority} may be\n     * used to change the priority to a new value.\n     *\n     * \u003cp\u003eThe newly created thread is initially marked as being a daemon\n     * thread if and only if the thread creating it is currently marked\n     * as a daemon thread. The method {@linkplain #setDaemon setDaemon}\n     * may be used to change whether or not a thread is a daemon.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group or cannot override the context class loader methods.\n     */\n    public Thread(ThreadGroup group, Runnable target, String name) {\n        this(group, target, name, 0);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * and belongs to the thread group referred to by {@code group}, and has\n     * the specified \u003ci\u003estack size\u003c/i\u003e.\n     *\n     * \u003cp\u003eThis constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String)} with the exception of the fact\n     * that it allows the thread stack size to be specified.  The stack size\n     * is the approximate number of bytes of address space that the virtual\n     * machine is to allocate for this thread\u0027s stack.  \u003cb\u003eThe effect of the\n     * {@code stackSize} parameter, if any, is highly platform dependent.\u003c/b\u003e\n     *\n     * \u003cp\u003eOn some platforms, specifying a higher value for the\n     * {@code stackSize} parameter may allow a thread to achieve greater\n     * recursion depth before throwing a {@link StackOverflowError}.\n     * Similarly, specifying a lower value may allow a greater number of\n     * threads to exist concurrently without throwing an {@link\n     * OutOfMemoryError} (or other internal error).  The details of\n     * the relationship between the value of the {@code stackSize} parameter\n     * and the maximum recursion depth and concurrency level are\n     * platform-dependent.  \u003cb\u003eOn some platforms, the value of the\n     * {@code stackSize} parameter may have no effect whatsoever.\u003c/b\u003e\n     *\n     * \u003cp\u003eThe virtual machine is free to treat the {@code stackSize}\n     * parameter as a suggestion.  If the specified value is unreasonably low\n     * for the platform, the virtual machine may instead use some\n     * platform-specific minimum value; if the specified value is unreasonably\n     * high, the virtual machine may instead use some platform-specific\n     * maximum.  Likewise, the virtual machine is free to round the specified\n     * value up or down as it sees fit (or to ignore it completely).\n     *\n     * \u003cp\u003eSpecifying a value of zero for the {@code stackSize} parameter will\n     * cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String)} constructor.\n     *\n     * \u003cp\u003e\u003ci\u003eDue to the platform-dependent nature of the behavior of this\n     * constructor, extreme care should be exercised in its use.\n     * The thread stack size necessary to perform a given computation will\n     * likely vary from one JRE implementation to another.  In light of this\n     * variation, careful tuning of the stack size parameter may be required,\n     * and the tuning may need to be repeated for each JRE implementation on\n     * which an application is to run.\u003c/i\u003e\n     *\n     * \u003cp\u003eImplementation note: Java platform implementers are encouraged to\n     * document their implementation\u0027s behavior with respect to the\n     * {@code stackSize} parameter.\n     *\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 1.4\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize) {\n        this(group, target, name, stackSize, null, true);\n    }\n\n    /**\n     * Allocates a new {@code Thread} object so that it has {@code target}\n     * as its run object, has the specified {@code name} as its name,\n     * belongs to the thread group referred to by {@code group}, has\n     * the specified {@code stackSize}, and inherits initial values for\n     * {@linkplain InheritableThreadLocal inheritable thread-local} variables\n     * if {@code inheritThreadLocals} is {@code true}.\n     *\n     * \u003cp\u003e This constructor is identical to {@link\n     * #Thread(ThreadGroup,Runnable,String,long)} with the added ability to\n     * suppress, or not, the inheriting of initial values for inheritable\n     * thread-local variables from the constructing thread. This allows for\n     * finer grain control over inheritable thread-locals. Care must be taken\n     * when passing a value of {@code false} for {@code inheritThreadLocals},\n     * as it may lead to unexpected behavior if the new thread executes code\n     * that expects a specific thread-local value to be inherited.\n     *\n     * \u003cp\u003e Specifying a value of {@code true} for the {@code inheritThreadLocals}\n     * parameter will cause this constructor to behave exactly like the\n     * {@code Thread(ThreadGroup, Runnable, String, long)} constructor.\n     *\n     * @param  group\n     *         the thread group. If {@code null} and there is a security\n     *         manager, the group is determined by {@linkplain\n     *         SecurityManager#getThreadGroup SecurityManager.getThreadGroup()}.\n     *         If there is not a security manager or {@code\n     *         SecurityManager.getThreadGroup()} returns {@code null}, the group\n     *         is set to the current thread\u0027s thread group.\n     *\n     * @param  target\n     *         the object whose {@code run} method is invoked when this thread\n     *         is started. If {@code null}, this thread\u0027s run method is invoked.\n     *\n     * @param  name\n     *         the name of the new thread\n     *\n     * @param  stackSize\n     *         the desired stack size for the new thread, or zero to indicate\n     *         that this parameter is to be ignored\n     *\n     * @param  inheritThreadLocals\n     *         if {@code true}, inherit initial values for inheritable\n     *         thread-locals from the constructing thread, otherwise no initial\n     *         values are inherited\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot create a thread in the specified\n     *          thread group\n     *\n     * @since 9\n     */\n    public Thread(ThreadGroup group, Runnable target, String name,\n                  long stackSize, boolean inheritThreadLocals) {\n        this(group, target, name, stackSize, null, inheritThreadLocals);\n    }\n\n    /**\n     * Causes this thread to begin execution; the Java Virtual Machine\n     * calls the {@code run} method of this thread.\n     * \u003cp\u003e\n     * The result is that two threads are running concurrently: the\n     * current thread (which returns from the call to the\n     * {@code start} method) and the other thread (which executes its\n     * {@code run} method).\n     * \u003cp\u003e\n     * It is never legal to start a thread more than once.\n     * In particular, a thread may not be restarted once it has completed\n     * execution.\n     *\n     * @throws     IllegalThreadStateException  if the thread was already started.\n     * @see        #run()\n     * @see        #stop()\n     */\n    public synchronized void start() {\n        /**\n         * This method is not invoked for the main method thread or \"system\"\n         * group threads created/set up by the VM. Any new functionality added\n         * to this method in the future may have to also be added to the VM.\n         *\n         * A zero status value corresponds to state \"NEW\".\n         */\n        if (threadStatus !\u003d 0)\n            throw new IllegalThreadStateException();\n\n        /* Notify the group that this thread is about to be started\n         * so that it can be added to the group\u0027s list of threads\n         * and the group\u0027s unstarted count can be decremented. */\n        group.add(this);\n\n        boolean started \u003d false;\n        try {\n            start0();\n            started \u003d true;\n        } finally {\n            try {\n                if (!started) {\n                    group.threadStartFailed(this);\n                }\n            } catch (Throwable ignore) {\n                /* do nothing. If start0 threw a Throwable then\n                  it will be passed up the call stack */\n            }\n        }\n    }\n\n    private native void start0();\n\n    /**\n     * If this thread was constructed using a separate\n     * {@code Runnable} run object, then that\n     * {@code Runnable} object\u0027s {@code run} method is called;\n     * otherwise, this method does nothing and returns.\n     * \u003cp\u003e\n     * Subclasses of {@code Thread} should override this method.\n     *\n     * @see     #start()\n     * @see     #stop()\n     * @see     #Thread(ThreadGroup, Runnable, String)\n     */\n    @Override\n    public void run() {\n        if (target !\u003d null) {\n            target.run();\n        }\n    }\n\n    /**\n     * This method is called by the system to give a Thread\n     * a chance to clean up before it actually exits.\n     */\n    private void exit() {\n        if (threadLocals !\u003d null \u0026\u0026 TerminatingThreadLocal.REGISTRY.isPresent()) {\n            TerminatingThreadLocal.threadTerminated();\n        }\n        if (group !\u003d null) {\n            group.threadTerminated(this);\n            group \u003d null;\n        }\n        /* Aggressively null out all reference fields: see bug 4006245 */\n        target \u003d null;\n        /* Speed the release of some of these resources */\n        threadLocals \u003d null;\n        inheritableThreadLocals \u003d null;\n        inheritedAccessControlContext \u003d null;\n        blocker \u003d null;\n        uncaughtExceptionHandler \u003d null;\n    }\n\n    /**\n     * Forces the thread to stop executing.\n     * \u003cp\u003e\n     * If there is a security manager installed, its {@code checkAccess}\n     * method is called with {@code this}\n     * as its argument. This may result in a\n     * {@code SecurityException} being raised (in the current thread).\n     * \u003cp\u003e\n     * If this thread is different from the current thread (that is, the current\n     * thread is trying to stop a thread other than itself), the\n     * security manager\u0027s {@code checkPermission} method (with a\n     * {@code RuntimePermission(\"stopThread\")} argument) is called in\n     * addition.\n     * Again, this may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * The thread represented by this thread is forced to stop whatever\n     * it is doing abnormally and to throw a newly created\n     * {@code ThreadDeath} object as an exception.\n     * \u003cp\u003e\n     * It is permitted to stop a thread that has not yet been started.\n     * If the thread is eventually started, it immediately terminates.\n     * \u003cp\u003e\n     * An application should not normally try to catch\n     * {@code ThreadDeath} unless it must do some extraordinary\n     * cleanup operation (note that the throwing of\n     * {@code ThreadDeath} causes {@code finally} clauses of\n     * {@code try} statements to be executed before the thread\n     * officially dies).  If a {@code catch} clause catches a\n     * {@code ThreadDeath} object, it is important to rethrow the\n     * object so that the thread actually dies.\n     * \u003cp\u003e\n     * The top-level error handler that reacts to otherwise uncaught\n     * exceptions does not print out a message or otherwise notify the\n     * application if the uncaught exception is an instance of\n     * {@code ThreadDeath}.\n     *\n     * @throws     SecurityException  if the current thread cannot\n     *             modify this thread.\n     * @see        #interrupt()\n     * @see        #checkAccess()\n     * @see        #run()\n     * @see        #start()\n     * @see        ThreadDeath\n     * @see        ThreadGroup#uncaughtException(Thread,Throwable)\n     * @see        SecurityManager#checkAccess(Thread)\n     * @see        SecurityManager#checkPermission\n     * @deprecated This method is inherently unsafe.  Stopping a thread with\n     *       Thread.stop causes it to unlock all of the monitors that it\n     *       has locked (as a natural consequence of the unchecked\n     *       {@code ThreadDeath} exception propagating up the stack).  If\n     *       any of the objects previously protected by these monitors were in\n     *       an inconsistent state, the damaged objects become visible to\n     *       other threads, potentially resulting in arbitrary behavior.  Many\n     *       uses of {@code stop} should be replaced by code that simply\n     *       modifies some variable to indicate that the target thread should\n     *       stop running.  The target thread should check this variable\n     *       regularly, and return from its run method in an orderly fashion\n     *       if the variable indicates that it is to stop running.  If the\n     *       target thread waits for long periods (on a condition variable,\n     *       for example), the {@code interrupt} method should be used to\n     *       interrupt the wait.\n     *       For more information, see\n     *       \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *       are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\")\n    public final void stop() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            checkAccess();\n            if (this !\u003d Thread.currentThread()) {\n                security.checkPermission(SecurityConstants.STOP_THREAD_PERMISSION);\n            }\n        }\n        // A zero status value corresponds to \"NEW\", it can\u0027t change to\n        // not-NEW because we hold the lock.\n        if (threadStatus !\u003d 0) {\n            resume(); // Wake up thread if it was suspended; no-op otherwise\n        }\n\n        // The VM can handle all thread states\n        stop0(new ThreadDeath());\n    }\n\n    /**\n     * Interrupts this thread.\n     *\n     * \u003cp\u003e Unless the current thread is interrupting itself, which is\n     * always permitted, the {@link #checkAccess() checkAccess} method\n     * of this thread is invoked, which may cause a {@link\n     * SecurityException} to be thrown.\n     *\n     * \u003cp\u003e If this thread is blocked in an invocation of the {@link\n     * Object#wait() wait()}, {@link Object#wait(long) wait(long)}, or {@link\n     * Object#wait(long, int) wait(long, int)} methods of the {@link Object}\n     * class, or of the {@link #join()}, {@link #join(long)}, {@link\n     * #join(long, int)}, {@link #sleep(long)}, or {@link #sleep(long, int)}\n     * methods of this class, then its interrupt status will be cleared and it\n     * will receive an {@link InterruptedException}.\n     *\n     * \u003cp\u003e If this thread is blocked in an I/O operation upon an {@link\n     * java.nio.channels.InterruptibleChannel InterruptibleChannel}\n     * then the channel will be closed, the thread\u0027s interrupt\n     * status will be set, and the thread will receive a {@link\n     * java.nio.channels.ClosedByInterruptException}.\n     *\n     * \u003cp\u003e If this thread is blocked in a {@link java.nio.channels.Selector}\n     * then the thread\u0027s interrupt status will be set and it will return\n     * immediately from the selection operation, possibly with a non-zero\n     * value, just as if the selector\u0027s {@link\n     * java.nio.channels.Selector#wakeup wakeup} method were invoked.\n     *\n     * \u003cp\u003e If none of the previous conditions hold then this thread\u0027s interrupt\n     * status will be set. \u003c/p\u003e\n     *\n     * \u003cp\u003e Interrupting a thread that is not alive need not have any effect.\n     *\n     * @implNote In the JDK Reference Implementation, interruption of a thread\n     * that is not alive still records that the interrupt request was made and\n     * will report it via {@link #interrupted} and {@link #isInterrupted()}.\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot modify this thread\n     *\n     * @revised 6.0, 14\n     */\n    public void interrupt() {\n        if (this !\u003d Thread.currentThread()) {\n            checkAccess();\n\n            // thread may be blocked in an I/O operation\n            synchronized (blockerLock) {\n                Interruptible b \u003d blocker;\n                if (b !\u003d null) {\n                    interrupted \u003d true;\n                    interrupt0();  // inform VM of interrupt\n                    b.interrupt(this);\n                    return;\n                }\n            }\n        }\n        interrupted \u003d true;\n        // inform VM of interrupt\n        interrupt0();\n    }\n\n    /**\n     * Tests whether the current thread has been interrupted.  The\n     * \u003ci\u003einterrupted status\u003c/i\u003e of the thread is cleared by this method.  In\n     * other words, if this method were to be called twice in succession, the\n     * second call would return false (unless the current thread were\n     * interrupted again, after the first call had cleared its interrupted\n     * status and before the second call had examined it).\n     *\n     * @return  {@code true} if the current thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see #isInterrupted()\n     * @revised 6.0, 14\n     */\n    public static boolean interrupted() {\n        Thread t \u003d currentThread();\n        boolean interrupted \u003d t.interrupted;\n        // We may have been interrupted the moment after we read the field,\n        // so only clear the field if we saw that it was set and will return\n        // true; otherwise we could lose an interrupt.\n        if (interrupted) {\n            t.interrupted \u003d false;\n            clearInterruptEvent();\n        }\n        return interrupted;\n    }\n\n    /**\n     * Tests whether this thread has been interrupted.  The \u003ci\u003einterrupted\n     * status\u003c/i\u003e of the thread is unaffected by this method.\n     *\n     * @return  {@code true} if this thread has been interrupted;\n     *          {@code false} otherwise.\n     * @see     #interrupted()\n     * @revised 6.0, 14\n     */\n    public boolean isInterrupted() {\n        return interrupted;\n    }\n\n    /**\n     * Tests if this thread is alive. A thread is alive if it has\n     * been started and has not yet died.\n     *\n     * @return  {@code true} if this thread is alive;\n     *          {@code false} otherwise.\n     */\n    public final native boolean isAlive();\n\n    /**\n     * Suspends this thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException }(in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive, it is suspended and makes no further\n     * progress unless and until it is resumed.\n     *\n     * @throws     SecurityException  if the current thread cannot modify\n     *             this thread.\n     * @see #checkAccess\n     * @deprecated   This method has been deprecated, as it is\n     *   inherently deadlock-prone.  If the target thread holds a lock on the\n     *   monitor protecting a critical system resource when it is suspended, no\n     *   thread can access this resource until the target thread is resumed. If\n     *   the thread that would resume the target thread attempts to lock this\n     *   monitor prior to calling {@code resume}, deadlock results.  Such\n     *   deadlocks typically manifest themselves as \"frozen\" processes.\n     *   For more information, see\n     *   \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *   are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void suspend() {\n        checkAccess();\n        suspend0();\n    }\n\n    /**\n     * Resumes a suspended thread.\n     * \u003cp\u003e\n     * First, the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException} (in the current thread).\n     * \u003cp\u003e\n     * If the thread is alive but suspended, it is resumed and is\n     * permitted to make progress in its execution.\n     *\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #checkAccess\n     * @see        #suspend()\n     * @deprecated This method exists solely for use with {@link #suspend},\n     *     which has been deprecated because it is deadlock-prone.\n     *     For more information, see\n     *     \u003ca href\u003d\"{@docRoot}/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html\"\u003eWhy\n     *     are Thread.stop, Thread.suspend and Thread.resume Deprecated?\u003c/a\u003e.\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public final void resume() {\n        checkAccess();\n        resume0();\n    }\n\n    /**\n     * Changes the priority of this thread.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a {@code SecurityException}.\n     * \u003cp\u003e\n     * Otherwise, the priority of this thread is set to the smaller of\n     * the specified {@code newPriority} and the maximum permitted\n     * priority of the thread\u0027s thread group.\n     *\n     * @param newPriority priority to set this thread to\n     * @throws     IllegalArgumentException  If the priority is not in the\n     *               range {@code MIN_PRIORITY} to\n     *               {@code MAX_PRIORITY}.\n     * @throws     SecurityException  if the current thread cannot modify\n     *               this thread.\n     * @see        #getPriority\n     * @see        #checkAccess()\n     * @see        #getThreadGroup()\n     * @see        #MAX_PRIORITY\n     * @see        #MIN_PRIORITY\n     * @see        ThreadGroup#getMaxPriority()\n     */\n    public final void setPriority(int newPriority) {\n        ThreadGroup g;\n        checkAccess();\n        if (newPriority \u003e MAX_PRIORITY || newPriority \u003c MIN_PRIORITY) {\n            throw new IllegalArgumentException();\n        }\n        if((g \u003d getThreadGroup()) !\u003d null) {\n            if (newPriority \u003e g.getMaxPriority()) {\n                newPriority \u003d g.getMaxPriority();\n            }\n            setPriority0(priority \u003d newPriority);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s priority.\n     *\n     * @return  this thread\u0027s priority.\n     * @see     #setPriority\n     */\n    public final int getPriority() {\n        return priority;\n    }\n\n    /**\n     * Changes the name of this thread to be equal to the argument {@code name}.\n     * \u003cp\u003e\n     * First the {@code checkAccess} method of this thread is called\n     * with no arguments. This may result in throwing a\n     * {@code SecurityException}.\n     *\n     * @param      name   the new name for this thread.\n     * @throws     SecurityException  if the current thread cannot modify this\n     *             thread.\n     * @see        #getName\n     * @see        #checkAccess()\n     */\n    public final synchronized void setName(String name) {\n        checkAccess();\n        if (name \u003d\u003d null) {\n            throw new NullPointerException(\"name cannot be null\");\n        }\n\n        this.name \u003d name;\n        if (threadStatus !\u003d 0) {\n            setNativeName(name);\n        }\n    }\n\n    /**\n     * Returns this thread\u0027s name.\n     *\n     * @return  this thread\u0027s name.\n     * @see     #setName(String)\n     */\n    public final String getName() {\n        return name;\n    }\n\n    /**\n     * Returns the thread group to which this thread belongs.\n     * This method returns null if this thread has died\n     * (been stopped).\n     *\n     * @return  this thread\u0027s thread group.\n     */\n    public final ThreadGroup getThreadGroup() {\n        return group;\n    }\n\n    /**\n     * Returns an estimate of the number of active threads in the current\n     * thread\u0027s {@linkplain java.lang.ThreadGroup thread group} and its\n     * subgroups. Recursively iterates over all subgroups in the current\n     * thread\u0027s thread group.\n     *\n     * \u003cp\u003e The value returned is only an estimate because the number of\n     * threads may change dynamically while this method traverses internal\n     * data structures, and might be affected by the presence of certain\n     * system threads. This method is intended primarily for debugging\n     * and monitoring purposes.\n     *\n     * @return  an estimate of the number of active threads in the current\n     *          thread\u0027s thread group and in any other thread group that\n     *          has the current thread\u0027s thread group as an ancestor\n     */\n    public static int activeCount() {\n        return currentThread().getThreadGroup().activeCount();\n    }\n\n    /**\n     * Copies into the specified array every active thread in the current\n     * thread\u0027s thread group and its subgroups. This method simply\n     * invokes the {@link java.lang.ThreadGroup#enumerate(Thread[])}\n     * method of the current thread\u0027s thread group.\n     *\n     * \u003cp\u003e An application might use the {@linkplain #activeCount activeCount}\n     * method to get an estimate of how big the array should be, however\n     * \u003ci\u003eif the array is too short to hold all the threads, the extra threads\n     * are silently ignored.\u003c/i\u003e  If it is critical to obtain every active\n     * thread in the current thread\u0027s thread group and its subgroups, the\n     * invoker should verify that the returned int value is strictly less\n     * than the length of {@code tarray}.\n     *\n     * \u003cp\u003e Due to the inherent race condition in this method, it is recommended\n     * that the method only be used for debugging and monitoring purposes.\n     *\n     * @param  tarray\n     *         an array into which to put the list of threads\n     *\n     * @return  the number of threads put into the array\n     *\n     * @throws  SecurityException\n     *          if {@link java.lang.ThreadGroup#checkAccess} determines that\n     *          the current thread cannot access its thread group\n     */\n    public static int enumerate(Thread tarray[]) {\n        return currentThread().getThreadGroup().enumerate(tarray);\n    }\n\n    /**\n     * Throws {@code UnsupportedOperationException}.\n     *\n     * @return     nothing\n     *\n     * @deprecated This method was originally designed to count the number of\n     *             stack frames but the results were never well-defined and it\n     *             depended on thread-suspension.\n     *             This method is subject to removal in a future version of Java SE.\n     * @see        StackWalker\n     */\n    @Deprecated(since\u003d\"1.2\", forRemoval\u003dtrue)\n    public int countStackFrames() {\n        throw new UnsupportedOperationException();\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds for this thread to\n     * die. A timeout of {@code 0} means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(final long millis)\n    throws InterruptedException {\n        if (millis \u003e 0) {\n            if (isAlive()) {\n                final long startTime \u003d System.nanoTime();\n                long delay \u003d millis;\n                do {\n                    wait(delay);\n                } while (isAlive() \u0026\u0026 (delay \u003d millis -\n                        TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - startTime)) \u003e 0);\n            }\n        } else if (millis \u003d\u003d 0) {\n            while (isAlive()) {\n                wait(0);\n            }\n        } else {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n    }\n\n    /**\n     * Waits at most {@code millis} milliseconds plus\n     * {@code nanos} nanoseconds for this thread to die.\n     * If both arguments are {@code 0}, it means to wait forever.\n     *\n     * \u003cp\u003e This implementation uses a loop of {@code this.wait} calls\n     * conditioned on {@code this.isAlive}. As a thread terminates the\n     * {@code this.notifyAll} method is invoked. It is recommended that\n     * applications not use {@code wait}, {@code notify}, or\n     * {@code notifyAll} on {@code Thread} instances.\n     *\n     * @param  millis\n     *         the time to wait in milliseconds\n     *\n     * @param  nanos\n     *         {@code 0-999999} additional nanoseconds to wait\n     *\n     * @throws  IllegalArgumentException\n     *          if the value of {@code millis} is negative, or the value\n     *          of {@code nanos} is not in the range {@code 0-999999}\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final synchronized void join(long millis, int nanos)\n    throws InterruptedException {\n\n        if (millis \u003c 0) {\n            throw new IllegalArgumentException(\"timeout value is negative\");\n        }\n\n        if (nanos \u003c 0 || nanos \u003e 999999) {\n            throw new IllegalArgumentException(\n                                \"nanosecond timeout value out of range\");\n        }\n\n        if (nanos \u003e 0 \u0026\u0026 millis \u003c Long.MAX_VALUE) {\n            millis++;\n        }\n\n        join(millis);\n    }\n\n    /**\n     * Waits for this thread to die.\n     *\n     * \u003cp\u003e An invocation of this method behaves in exactly the same\n     * way as the invocation\n     *\n     * \u003cblockquote\u003e\n     * {@linkplain #join(long) join}{@code (0)}\n     * \u003c/blockquote\u003e\n     *\n     * @throws  InterruptedException\n     *          if any thread has interrupted the current thread. The\n     *          \u003ci\u003einterrupted status\u003c/i\u003e of the current thread is\n     *          cleared when this exception is thrown.\n     */\n    public final void join() throws InterruptedException {\n        join(0);\n    }\n\n    /**\n     * Prints a stack trace of the current thread to the standard error stream.\n     * This method is used only for debugging.\n     */\n    public static void dumpStack() {\n        new Exception(\"Stack trace\").printStackTrace();\n    }\n\n    /**\n     * Marks this thread as either a {@linkplain #isDaemon daemon} thread\n     * or a user thread. The Java Virtual Machine exits when the only\n     * threads running are all daemon threads.\n     *\n     * \u003cp\u003e This method must be invoked before the thread is started.\n     *\n     * @param  on\n     *         if {@code true}, marks this thread as a daemon thread\n     *\n     * @throws  IllegalThreadStateException\n     *          if this thread is {@linkplain #isAlive alive}\n     *\n     * @throws  SecurityException\n     *          if {@link #checkAccess} determines that the current\n     *          thread cannot modify this thread\n     */\n    public final void setDaemon(boolean on) {\n        checkAccess();\n        if (isAlive()) {\n            throw new IllegalThreadStateException();\n        }\n        daemon \u003d on;\n    }\n\n    /**\n     * Tests if this thread is a daemon thread.\n     *\n     * @return  {@code true} if this thread is a daemon thread;\n     *          {@code false} otherwise.\n     * @see     #setDaemon(boolean)\n     */\n    public final boolean isDaemon() {\n        return daemon;\n    }\n\n    /**\n     * Determines if the currently running thread has permission to\n     * modify this thread.\n     * \u003cp\u003e\n     * If there is a security manager, its {@code checkAccess} method\n     * is called with this thread as its argument. This may result in\n     * throwing a {@code SecurityException}.\n     *\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          access this thread.\n     * @see        SecurityManager#checkAccess(Thread)\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public final void checkAccess() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkAccess(this);\n        }\n    }\n\n    /**\n     * Returns a string representation of this thread, including the\n     * thread\u0027s name, priority, and thread group.\n     *\n     * @return  a string representation of this thread.\n     */\n    public String toString() {\n        ThreadGroup group \u003d getThreadGroup();\n        if (group !\u003d null) {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                           group.getName() + \"]\";\n        } else {\n            return \"Thread[\" + getName() + \",\" + getPriority() + \",\" +\n                            \"\" + \"]\";\n        }\n    }\n\n    /**\n     * Returns the context {@code ClassLoader} for this thread. The context\n     * {@code ClassLoader} is provided by the creator of the thread for use\n     * by code running in this thread when loading classes and resources.\n     * If not {@linkplain #setContextClassLoader set}, the default is the\n     * {@code ClassLoader} context of the parent thread. The context\n     * {@code ClassLoader} of the\n     * primordial thread is typically set to the class loader used to load the\n     * application.\n     *\n     *\n     * @return  the context {@code ClassLoader} for this thread, or {@code null}\n     *          indicating the system class loader (or, failing that, the\n     *          bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if a security manager is present, and the caller\u0027s class loader\n     *          is not {@code null} and is not the same as or an ancestor of the\n     *          context class loader, and the caller does not have the\n     *          {@link RuntimePermission}{@code (\"getClassLoader\")}\n     *\n     * @since 1.2\n     */\n    @CallerSensitive\n    public ClassLoader getContextClassLoader() {\n        if (contextClassLoader \u003d\u003d null)\n            return null;\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            ClassLoader.checkClassLoaderPermission(contextClassLoader,\n                                                   Reflection.getCallerClass());\n        }\n        return contextClassLoader;\n    }\n\n    /**\n     * Sets the context ClassLoader for this Thread. The context\n     * ClassLoader can be set when a thread is created, and allows\n     * the creator of the thread to provide the appropriate class loader,\n     * through {@code getContextClassLoader}, to code running in the thread\n     * when loading classes and resources.\n     *\n     * \u003cp\u003eIf a security manager is present, its {@link\n     * SecurityManager#checkPermission(java.security.Permission) checkPermission}\n     * method is invoked with a {@link RuntimePermission RuntimePermission}{@code\n     * (\"setContextClassLoader\")} permission to see if setting the context\n     * ClassLoader is permitted.\n     *\n     * @param  cl\n     *         the context ClassLoader for this Thread, or null  indicating the\n     *         system class loader (or, failing that, the bootstrap class loader)\n     *\n     * @throws  SecurityException\n     *          if the current thread cannot set the context ClassLoader\n     *\n     * @since 1.2\n     */\n    public void setContextClassLoader(ClassLoader cl) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setContextClassLoader\"));\n        }\n        contextClassLoader \u003d cl;\n    }\n\n    /**\n     * Returns {@code true} if and only if the current thread holds the\n     * monitor lock on the specified object.\n     *\n     * \u003cp\u003eThis method is designed to allow a program to assert that\n     * the current thread already holds a specified lock:\n     * \u003cpre\u003e\n     *     assert Thread.holdsLock(obj);\n     * \u003c/pre\u003e\n     *\n     * @param  obj the object on which to test lock ownership\n     * @throws NullPointerException if obj is {@code null}\n     * @return {@code true} if the current thread holds the monitor lock on\n     *         the specified object.\n     * @since 1.4\n     */\n    public static native boolean holdsLock(Object obj);\n\n    private static final StackTraceElement[] EMPTY_STACK_TRACE\n        \u003d new StackTraceElement[0];\n\n    /**\n     * Returns an array of stack trace elements representing the stack dump\n     * of this thread.  This method will return a zero-length array if\n     * this thread has not started, has started but has not yet been\n     * scheduled to run by the system, or has terminated.\n     * If the returned array is of non-zero length then the first element of\n     * the array represents the top of the stack, which is the most recent\n     * method invocation in the sequence.  The last element of the array\n     * represents the bottom of the stack, which is the least recent method\n     * invocation in the sequence.\n     *\n     * \u003cp\u003eIf there is a security manager, and this thread is not\n     * the current thread, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission\n     * to see if it\u0027s ok to get the stack trace.\n     *\n     * \u003cp\u003eSome virtual machines may, under some circumstances, omit one\n     * or more stack frames from the stack trace.  In the extreme case,\n     * a virtual machine that has no stack trace information concerning\n     * this thread is permitted to return a zero-length array from this\n     * method.\n     *\n     * @return an array of {@code StackTraceElement},\n     * each represents one stack frame.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public StackTraceElement[] getStackTrace() {\n        if (this !\u003d Thread.currentThread()) {\n            // check for getStackTrace permission\n            @SuppressWarnings(\"removal\")\n            SecurityManager security \u003d System.getSecurityManager();\n            if (security !\u003d null) {\n                security.checkPermission(\n                    SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            }\n            // optimization so we do not call into the vm for threads that\n            // have not yet started or have terminated\n            if (!isAlive()) {\n                return EMPTY_STACK_TRACE;\n            }\n            StackTraceElement[][] stackTraceArray \u003d dumpThreads(new Thread[] {this});\n            StackTraceElement[] stackTrace \u003d stackTraceArray[0];\n            // a thread that was alive during the previous isAlive call may have\n            // since terminated, therefore not having a stacktrace.\n            if (stackTrace \u003d\u003d null) {\n                stackTrace \u003d EMPTY_STACK_TRACE;\n            }\n            return stackTrace;\n        } else {\n            return (new Exception()).getStackTrace();\n        }\n    }\n\n    /**\n     * Returns a map of stack traces for all live threads.\n     * The map keys are threads and each map value is an array of\n     * {@code StackTraceElement} that represents the stack dump\n     * of the corresponding {@code Thread}.\n     * The returned stack traces are in the format specified for\n     * the {@link #getStackTrace getStackTrace} method.\n     *\n     * \u003cp\u003eThe threads may be executing while this method is called.\n     * The stack trace of each thread only represents a snapshot and\n     * each stack trace may be obtained at different time.  A zero-length\n     * array will be returned in the map value if the virtual machine has\n     * no stack trace information about a thread.\n     *\n     * \u003cp\u003eIf there is a security manager, then the security manager\u0027s\n     * {@code checkPermission} method is called with a\n     * {@code RuntimePermission(\"getStackTrace\")} permission as well as\n     * {@code RuntimePermission(\"modifyThreadGroup\")} permission\n     * to see if it is ok to get the stack trace of all threads.\n     *\n     * @return a {@code Map} from {@code Thread} to an array of\n     * {@code StackTraceElement} that represents the stack trace of\n     * the corresponding thread.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        getting the stack trace of thread.\n     * @see #getStackTrace\n     * @see SecurityManager#checkPermission\n     * @see RuntimePermission\n     * @see Throwable#getStackTrace\n     *\n     * @since 1.5\n     */\n    public static Map\u003cThread, StackTraceElement[]\u003e getAllStackTraces() {\n        // check for getStackTrace permission\n        @SuppressWarnings(\"removal\")\n        SecurityManager security \u003d System.getSecurityManager();\n        if (security !\u003d null) {\n            security.checkPermission(\n                SecurityConstants.GET_STACK_TRACE_PERMISSION);\n            security.checkPermission(\n                SecurityConstants.MODIFY_THREADGROUP_PERMISSION);\n        }\n\n        // Get a snapshot of the list of all threads\n        Thread[] threads \u003d getThreads();\n        StackTraceElement[][] traces \u003d dumpThreads(threads);\n        Map\u003cThread, StackTraceElement[]\u003e m \u003d new HashMap\u003c\u003e(threads.length);\n        for (int i \u003d 0; i \u003c threads.length; i++) {\n            StackTraceElement[] stackTrace \u003d traces[i];\n            if (stackTrace !\u003d null) {\n                m.put(threads[i], stackTrace);\n            }\n            // else terminated so we don\u0027t put it in the map\n        }\n        return m;\n    }\n\n    /** cache of subclass security audit results */\n    /* Replace with ConcurrentReferenceHashMap when/if it appears in a future\n     * release */\n    private static class Caches {\n        /** cache of subclass security audit results */\n        static final ConcurrentMap\u003cWeakClassKey,Boolean\u003e subclassAudits \u003d\n            new ConcurrentHashMap\u003c\u003e();\n\n        /** queue for WeakReferences to audited subclasses */\n        static final ReferenceQueue\u003cClass\u003c?\u003e\u003e subclassAuditsQueue \u003d\n            new ReferenceQueue\u003c\u003e();\n    }\n\n    /**\n     * Verifies that this (possibly subclass) instance can be constructed\n     * without violating security constraints: the subclass must not override\n     * security-sensitive non-final methods, or else the\n     * \"enableContextClassLoaderOverride\" RuntimePermission is checked.\n     */\n    private static boolean isCCLOverridden(Class\u003c?\u003e cl) {\n        if (cl \u003d\u003d Thread.class)\n            return false;\n\n        processQueue(Caches.subclassAuditsQueue, Caches.subclassAudits);\n        WeakClassKey key \u003d new WeakClassKey(cl, Caches.subclassAuditsQueue);\n        Boolean result \u003d Caches.subclassAudits.get(key);\n        if (result \u003d\u003d null) {\n            result \u003d Boolean.valueOf(auditSubclass(cl));\n            Caches.subclassAudits.putIfAbsent(key, result);\n        }\n\n        return result.booleanValue();\n    }\n\n    /**\n     * Performs reflective checks on given subclass to verify that it doesn\u0027t\n     * override security-sensitive non-final methods.  Returns true if the\n     * subclass overrides any of the methods, false otherwise.\n     */\n    private static boolean auditSubclass(final Class\u003c?\u003e subcl) {\n        @SuppressWarnings(\"removal\")\n        Boolean result \u003d AccessController.doPrivileged(\n            new PrivilegedAction\u003c\u003e() {\n                public Boolean run() {\n                    for (Class\u003c?\u003e cl \u003d subcl;\n                         cl !\u003d Thread.class;\n                         cl \u003d cl.getSuperclass())\n                    {\n                        try {\n                            cl.getDeclaredMethod(\"getContextClassLoader\", new Class\u003c?\u003e[0]);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                        try {\n                            Class\u003c?\u003e[] params \u003d {ClassLoader.class};\n                            cl.getDeclaredMethod(\"setContextClassLoader\", params);\n                            return Boolean.TRUE;\n                        } catch (NoSuchMethodException ex) {\n                        }\n                    }\n                    return Boolean.FALSE;\n                }\n            }\n        );\n        return result.booleanValue();\n    }\n\n    private static native StackTraceElement[][] dumpThreads(Thread[] threads);\n    private static native Thread[] getThreads();\n\n    /**\n     * Returns the identifier of this Thread.  The thread ID is a positive\n     * {@code long} number generated when this thread was created.\n     * The thread ID is unique and remains unchanged during its lifetime.\n     * When a thread is terminated, this thread ID may be reused.\n     *\n     * @return this thread\u0027s ID.\n     * @since 1.5\n     */\n    public long getId() {\n        return tid;\n    }\n\n    /**\n     * A thread state.  A thread can be in one of the following states:\n     * \u003cul\u003e\n     * \u003cli\u003e{@link #NEW}\u003cbr\u003e\n     *     A thread that has not yet started is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #RUNNABLE}\u003cbr\u003e\n     *     A thread executing in the Java virtual machine is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #BLOCKED}\u003cbr\u003e\n     *     A thread that is blocked waiting for a monitor lock\n     *     is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #WAITING}\u003cbr\u003e\n     *     A thread that is waiting indefinitely for another thread to\n     *     perform a particular action is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TIMED_WAITING}\u003cbr\u003e\n     *     A thread that is waiting for another thread to perform an action\n     *     for up to a specified waiting time is in this state.\n     *     \u003c/li\u003e\n     * \u003cli\u003e{@link #TERMINATED}\u003cbr\u003e\n     *     A thread that has exited is in this state.\n     *     \u003c/li\u003e\n     * \u003c/ul\u003e\n     *\n     * \u003cp\u003e\n     * A thread can be in only one state at a given point in time.\n     * These states are virtual machine states which do not reflect\n     * any operating system thread states.\n     *\n     * @since   1.5\n     * @see #getState\n     */\n    public enum State {\n        /**\n         * Thread state for a thread which has not yet started.\n         */\n        NEW,\n\n        /**\n         * Thread state for a runnable thread.  A thread in the runnable\n         * state is executing in the Java virtual machine but it may\n         * be waiting for other resources from the operating system\n         * such as processor.\n         */\n        RUNNABLE,\n\n        /**\n         * Thread state for a thread blocked waiting for a monitor lock.\n         * A thread in the blocked state is waiting for a monitor lock\n         * to enter a synchronized block/method or\n         * reenter a synchronized block/method after calling\n         * {@link Object#wait() Object.wait}.\n         */\n        BLOCKED,\n\n        /**\n         * Thread state for a waiting thread.\n         * A thread is in the waiting state due to calling one of the\n         * following methods:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link Object#wait() Object.wait} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join() Thread.join} with no timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#park() LockSupport.park}\u003c/li\u003e\n         * \u003c/ul\u003e\n         *\n         * \u003cp\u003eA thread in the waiting state is waiting for another thread to\n         * perform a particular action.\n         *\n         * For example, a thread that has called {@code Object.wait()}\n         * on an object is waiting for another thread to call\n         * {@code Object.notify()} or {@code Object.notifyAll()} on\n         * that object. A thread that has called {@code Thread.join()}\n         * is waiting for a specified thread to terminate.\n         */\n        WAITING,\n\n        /**\n         * Thread state for a waiting thread with a specified waiting time.\n         * A thread is in the timed waiting state due to calling one of\n         * the following methods with a specified positive waiting time:\n         * \u003cul\u003e\n         *   \u003cli\u003e{@link #sleep Thread.sleep}\u003c/li\u003e\n         *   \u003cli\u003e{@link Object#wait(long) Object.wait} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link #join(long) Thread.join} with timeout\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkNanos LockSupport.parkNanos}\u003c/li\u003e\n         *   \u003cli\u003e{@link LockSupport#parkUntil LockSupport.parkUntil}\u003c/li\u003e\n         * \u003c/ul\u003e\n         */\n        TIMED_WAITING,\n\n        /**\n         * Thread state for a terminated thread.\n         * The thread has completed execution.\n         */\n        TERMINATED;\n    }\n\n    /**\n     * Returns the state of this thread.\n     * This method is designed for use in monitoring of the system state,\n     * not for synchronization control.\n     *\n     * @return this thread\u0027s state.\n     * @since 1.5\n     */\n    public State getState() {\n        // get current thread state\n        return jdk.internal.misc.VM.toThreadState(threadStatus);\n    }\n\n    // Added in JSR-166\n\n    /**\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * \u003cp\u003eWhen a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler\u0027s\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    @FunctionalInterface\n    public interface UncaughtExceptionHandler {\n        /**\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * \u003cp\u003eAny exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         */\n        void uncaughtException(Thread t, Throwable e);\n    }\n\n    // null unless explicitly set\n    private volatile UncaughtExceptionHandler uncaughtExceptionHandler;\n\n    // null unless explicitly set\n    private static volatile UncaughtExceptionHandler defaultUncaughtExceptionHandler;\n\n    /**\n     * Set the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception, and no other handler has been defined\n     * for that thread.\n     *\n     * \u003cp\u003eUncaught exception handling is controlled first by the thread, then\n     * by the thread\u0027s {@link ThreadGroup} object and finally by the default\n     * uncaught exception handler. If the thread does not have an explicit\n     * uncaught exception handler set, and the thread\u0027s thread group\n     * (including parent thread groups)  does not specialize its\n     * {@code uncaughtException} method, then the default handler\u0027s\n     * {@code uncaughtException} method will be invoked.\n     * \u003cp\u003eBy setting the default uncaught exception handler, an application\n     * can change the way in which uncaught exceptions are handled (such as\n     * logging to a specific device, or file) for those threads that would\n     * already accept whatever \u0026quot;default\u0026quot; behavior the system\n     * provided.\n     *\n     * \u003cp\u003eNote that the default uncaught exception handler should not usually\n     * defer to the thread\u0027s {@code ThreadGroup} object, as that could cause\n     * infinite recursion.\n     *\n     * @param eh the object to use as the default uncaught exception handler.\n     * If {@code null} then there is no default handler.\n     *\n     * @throws SecurityException if a security manager is present and it denies\n     *         {@link RuntimePermission}{@code (\"setDefaultUncaughtExceptionHandler\")}\n     *\n     * @see #setUncaughtExceptionHandler\n     * @see #getUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public static void setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d System.getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(\n                new RuntimePermission(\"setDefaultUncaughtExceptionHandler\")\n                    );\n        }\n\n         defaultUncaughtExceptionHandler \u003d eh;\n     }\n\n    /**\n     * Returns the default handler invoked when a thread abruptly terminates\n     * due to an uncaught exception. If the returned value is {@code null},\n     * there is no default.\n     * @since 1.5\n     * @see #setDefaultUncaughtExceptionHandler\n     * @return the default uncaught exception handler for all threads\n     */\n    public static UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(){\n        return defaultUncaughtExceptionHandler;\n    }\n\n    /**\n     * Returns the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception. If this thread has not had an\n     * uncaught exception handler explicitly set then this thread\u0027s\n     * {@code ThreadGroup} object is returned, unless this thread\n     * has terminated, in which case {@code null} is returned.\n     * @since 1.5\n     * @return the uncaught exception handler for this thread\n     */\n    public UncaughtExceptionHandler getUncaughtExceptionHandler() {\n        return uncaughtExceptionHandler !\u003d null ?\n            uncaughtExceptionHandler : group;\n    }\n\n    /**\n     * Set the handler invoked when this thread abruptly terminates\n     * due to an uncaught exception.\n     * \u003cp\u003eA thread can take full control of how it responds to uncaught\n     * exceptions by having its uncaught exception handler explicitly set.\n     * If no such handler is set then the thread\u0027s {@code ThreadGroup}\n     * object acts as its handler.\n     * @param eh the object to use as this thread\u0027s uncaught exception\n     * handler. If {@code null} then this thread has no explicit handler.\n     * @throws  SecurityException  if the current thread is not allowed to\n     *          modify this thread.\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     */\n    public void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {\n        checkAccess();\n        uncaughtExceptionHandler \u003d eh;\n    }\n\n    /**\n     * Dispatch an uncaught exception to the handler. This method is\n     * intended to be called only by the JVM.\n     */\n    private void dispatchUncaughtException(Throwable e) {\n        getUncaughtExceptionHandler().uncaughtException(this, e);\n    }\n\n    /**\n     * Removes from the specified map any keys that have been enqueued\n     * on the specified reference queue.\n     */\n    static void processQueue(ReferenceQueue\u003cClass\u003c?\u003e\u003e queue,\n                             ConcurrentMap\u003c? extends\n                             WeakReference\u003cClass\u003c?\u003e\u003e, ?\u003e map)\n    {\n        Reference\u003c? extends Class\u003c?\u003e\u003e ref;\n        while((ref \u003d queue.poll()) !\u003d null) {\n            map.remove(ref);\n        }\n    }\n\n    /**\n     *  Weak key for Class objects.\n     **/\n    static class WeakClassKey extends WeakReference\u003cClass\u003c?\u003e\u003e {\n        /**\n         * saved value of the referent\u0027s identity hash code, to maintain\n         * a consistent hash code after the referent has been cleared\n         */\n        private final int hash;\n\n        /**\n         * Create a new WeakClassKey to the given object, registered\n         * with a queue.\n         */\n        WeakClassKey(Class\u003c?\u003e cl, ReferenceQueue\u003cClass\u003c?\u003e\u003e refQueue) {\n            super(cl, refQueue);\n            hash \u003d System.identityHashCode(cl);\n        }\n\n        /**\n         * Returns the identity hash code of the original referent.\n         */\n        @Override\n        public int hashCode() {\n            return hash;\n        }\n\n        /**\n         * Returns true if the given object is this identical\n         * WeakClassKey instance, or, if this object\u0027s referent has not\n         * been cleared, if the given object is another WeakClassKey\n         * instance with the identical non-null referent as this one.\n         */\n        @Override\n        public boolean equals(Object obj) {\n            if (obj \u003d\u003d this)\n                return true;\n\n            if (obj instanceof WeakClassKey) {\n                Class\u003c?\u003e referent \u003d get();\n                return (referent !\u003d null) \u0026\u0026\n                        (((WeakClassKey) obj).refersTo(referent));\n            } else {\n                return false;\n            }\n        }\n    }\n\n\n    // The following three initially uninitialized fields are exclusively\n    // managed by class java.util.concurrent.ThreadLocalRandom. These\n    // fields are used to build the high-performance PRNGs in the\n    // concurrent code, and we can not risk accidental false sharing.\n    // Hence, the fields are isolated with @Contended.\n\n    /** The current seed for a ThreadLocalRandom */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    long threadLocalRandomSeed;\n\n    /** Probe hash value; nonzero if threadLocalRandomSeed initialized */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomProbe;\n\n    /** Secondary seed isolated from public ThreadLocalRandom sequence */\n    @jdk.internal.vm.annotation.Contended(\"tlr\")\n    int threadLocalRandomSecondarySeed;\n\n    /* Some private helper methods */\n    private native void setPriority0(int newPriority);\n    private native void stop0(Object o);\n    private native void suspend0();\n    private native void resume0();\n    private native void interrupt0();\n    private static native void clearInterruptEvent();\n    private native void setNativeName(String name);\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:152)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:774)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:771)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:391)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

нояб. 11, 2024 1:39:16 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/Thread.java"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:152)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:774)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:771)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:410)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/Thread.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.11.11 13:39:16 INFO  compiling lr2 (1 scala source)
2024.11.11 13:39:16 INFO  time: compiled lr2 in 0.21s
2024.11.11 13:39:22 INFO  compiling lr2 (1 scala source)
2024.11.11 13:39:22 INFO  time: compiled lr2 in 0.42s
2024.11.11 13:41:38 INFO  compiling lr2 (1 scala source)
2024.11.11 13:41:38 INFO  time: compiled lr2 in 0.67s
2024.11.11 13:44:31 INFO  compiling lr2 (1 scala source)
2024.11.11 13:44:31 INFO  time: compiled lr2 in 0.74s
2024.11.11 13:44:59 INFO  compiling lr2 (1 scala source)
2024.11.11 13:44:59 INFO  time: compiled lr2 in 0.56s
нояб. 11, 2024 1:45:20 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didOpen",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/System.java",
      "languageId": "java",
      "version": 1,
      "text": "/*\n * Copyright (c) 1994, 2021, Oracle and/or its affiliates. All rights reserved.\n * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n *\n * This code is free software; you can redistribute it and/or modify it\n * under the terms of the GNU General Public License version 2 only, as\n * published by the Free Software Foundation.  Oracle designates this\n * particular file as subject to the \"Classpath\" exception as provided\n * by Oracle in the LICENSE file that accompanied this code.\n *\n * This code is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n * version 2 for more details (a copy is included in the LICENSE file that\n * accompanied this code).\n *\n * You should have received a copy of the GNU General Public License version\n * 2 along with this work; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n *\n * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n * or visit www.oracle.com if you need additional information or have any\n * questions.\n */\npackage java.lang;\n\nimport java.io.BufferedInputStream;\nimport java.io.BufferedOutputStream;\nimport java.io.Console;\nimport java.io.FileDescriptor;\nimport java.io.FileInputStream;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.PrintStream;\nimport java.io.UnsupportedEncodingException;\nimport java.lang.annotation.Annotation;\nimport java.lang.invoke.MethodHandle;\nimport java.lang.invoke.MethodType;\nimport java.lang.invoke.StringConcatFactory;\nimport java.lang.module.ModuleDescriptor;\nimport java.lang.reflect.Constructor;\nimport java.lang.reflect.Executable;\nimport java.lang.reflect.Method;\nimport java.lang.reflect.Modifier;\nimport java.net.URI;\nimport java.net.URL;\nimport java.nio.charset.CharacterCodingException;\nimport java.nio.channels.Channel;\nimport java.nio.channels.spi.SelectorProvider;\nimport java.nio.charset.Charset;\nimport java.security.AccessControlContext;\nimport java.security.AccessController;\nimport java.security.CodeSource;\nimport java.security.PrivilegedAction;\nimport java.security.ProtectionDomain;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Objects;\nimport java.util.Properties;\nimport java.util.PropertyPermission;\nimport java.util.ResourceBundle;\nimport java.util.Set;\nimport java.util.WeakHashMap;\nimport java.util.function.Supplier;\nimport java.util.concurrent.ConcurrentHashMap;\nimport java.util.stream.Stream;\nimport jdk.internal.misc.Unsafe;\nimport jdk.internal.util.StaticProperty;\nimport jdk.internal.module.ModuleBootstrap;\nimport jdk.internal.module.ServicesCatalog;\nimport jdk.internal.reflect.CallerSensitive;\nimport jdk.internal.reflect.Reflection;\nimport jdk.internal.access.JavaLangAccess;\nimport jdk.internal.access.SharedSecrets;\nimport jdk.internal.misc.VM;\nimport jdk.internal.logger.LoggerFinderLoader;\nimport jdk.internal.logger.LazyLoggers;\nimport jdk.internal.logger.LocalizedLoggerWrapper;\nimport jdk.internal.util.SystemProps;\nimport jdk.internal.vm.annotation.IntrinsicCandidate;\nimport jdk.internal.vm.annotation.Stable;\nimport sun.nio.fs.DefaultFileSystemProvider;\nimport sun.reflect.annotation.AnnotationType;\nimport sun.nio.ch.Interruptible;\nimport sun.security.util.SecurityConstants;\n\n/**\n * The {@code System} class contains several useful class fields\n * and methods. It cannot be instantiated.\n *\n * Among the facilities provided by the {@code System} class\n * are standard input, standard output, and error output streams;\n * access to externally defined properties and environment\n * variables; a means of loading files and libraries; and a utility\n * method for quickly copying a portion of an array.\n *\n * @since   1.0\n */\npublic final class System {\n    /* Register the natives via the static initializer.\n     *\n     * The VM will invoke the initPhase1 method to complete the initialization\n     * of this class separate from \u003cclinit\u003e.\n     */\n    private static native void registerNatives();\n    static {\n        registerNatives();\n    }\n\n    /** Don\u0027t let anyone instantiate this class */\n    private System() {\n    }\n\n    /**\n     * The \"standard\" input stream. This stream is already\n     * open and ready to supply input data. Typically this stream\n     * corresponds to keyboard input or another input source specified by\n     * the host environment or user. In case this stream is wrapped\n     * in a {@link java.io.InputStreamReader}, {@link Console#charset()}\n     * should be used for the charset, or consider using\n     * {@link Console#reader()}.\n     *\n     * @see Console#charset()\n     * @see Console#reader()\n     */\n    public static final InputStream in \u003d null;\n\n    /**\n     * The \"standard\" output stream. This stream is already\n     * open and ready to accept output data. Typically this stream\n     * corresponds to display output or another output destination\n     * specified by the host environment or user. The encoding used\n     * in the conversion from characters to bytes is equivalent to\n     * {@link Console#charset()} if the {@code Console} exists,\n     * {@link Charset#defaultCharset()} otherwise.\n     * \u003cp\u003e\n     * For simple stand-alone Java applications, a typical way to write\n     * a line of output data is:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     *     System.out.println(data)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     * \u003cp\u003e\n     * See the {@code println} methods in class {@code PrintStream}.\n     *\n     * @see     java.io.PrintStream#println()\n     * @see     java.io.PrintStream#println(boolean)\n     * @see     java.io.PrintStream#println(char)\n     * @see     java.io.PrintStream#println(char[])\n     * @see     java.io.PrintStream#println(double)\n     * @see     java.io.PrintStream#println(float)\n     * @see     java.io.PrintStream#println(int)\n     * @see     java.io.PrintStream#println(long)\n     * @see     java.io.PrintStream#println(java.lang.Object)\n     * @see     java.io.PrintStream#println(java.lang.String)\n     * @see     Console#charset()\n     * @see     Charset#defaultCharset()\n     */\n    public static final PrintStream out \u003d null;\n\n    /**\n     * The \"standard\" error output stream. This stream is already\n     * open and ready to accept output data.\n     * \u003cp\u003e\n     * Typically this stream corresponds to display output or another\n     * output destination specified by the host environment or user. By\n     * convention, this output stream is used to display error messages\n     * or other information that should come to the immediate attention\n     * of a user even if the principal output stream, the value of the\n     * variable {@code out}, has been redirected to a file or other\n     * destination that is typically not continuously monitored.\n     * The encoding used in the conversion from characters to bytes is\n     * equivalent to {@link Console#charset()} if the {@code Console}\n     * exists, {@link Charset#defaultCharset()} otherwise.\n     *\n     * @see     Console#charset()\n     * @see     Charset#defaultCharset()\n     */\n    public static final PrintStream err \u003d null;\n\n    // indicates if a security manager is possible\n    private static final int NEVER \u003d 1;\n    private static final int MAYBE \u003d 2;\n    private static @Stable int allowSecurityManager;\n\n    // current security manager\n    @SuppressWarnings(\"removal\")\n    private static volatile SecurityManager security;   // read by VM\n\n    // return true if a security manager is allowed\n    private static boolean allowSecurityManager() {\n        return (allowSecurityManager !\u003d NEVER);\n    }\n\n    /**\n     * Reassigns the \"standard\" input stream.\n     *\n     * First, if there is a security manager, its {@code checkPermission}\n     * method is called with a {@code RuntimePermission(\"setIO\")} permission\n     *  to see if it\u0027s ok to reassign the \"standard\" input stream.\n     *\n     * @param in the new standard input stream.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        reassigning of the standard input stream.\n     *\n     * @see SecurityManager#checkPermission\n     * @see java.lang.RuntimePermission\n     *\n     * @since   1.1\n     */\n    public static void setIn(InputStream in) {\n        checkIO();\n        setIn0(in);\n    }\n\n    /**\n     * Reassigns the \"standard\" output stream.\n     *\n     * First, if there is a security manager, its {@code checkPermission}\n     * method is called with a {@code RuntimePermission(\"setIO\")} permission\n     *  to see if it\u0027s ok to reassign the \"standard\" output stream.\n     *\n     * @param out the new standard output stream\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        reassigning of the standard output stream.\n     *\n     * @see SecurityManager#checkPermission\n     * @see java.lang.RuntimePermission\n     *\n     * @since   1.1\n     */\n    public static void setOut(PrintStream out) {\n        checkIO();\n        setOut0(out);\n    }\n\n    /**\n     * Reassigns the \"standard\" error output stream.\n     *\n     * First, if there is a security manager, its {@code checkPermission}\n     * method is called with a {@code RuntimePermission(\"setIO\")} permission\n     *  to see if it\u0027s ok to reassign the \"standard\" error output stream.\n     *\n     * @param err the new standard error output stream.\n     *\n     * @throws SecurityException\n     *        if a security manager exists and its\n     *        {@code checkPermission} method doesn\u0027t allow\n     *        reassigning of the standard error output stream.\n     *\n     * @see SecurityManager#checkPermission\n     * @see java.lang.RuntimePermission\n     *\n     * @since   1.1\n     */\n    public static void setErr(PrintStream err) {\n        checkIO();\n        setErr0(err);\n    }\n\n    private static volatile Console cons;\n\n    /**\n     * Returns the unique {@link java.io.Console Console} object associated\n     * with the current Java virtual machine, if any.\n     *\n     * @return  The system console, if any, otherwise {@code null}.\n     *\n     * @since   1.6\n     */\n     public static Console console() {\n         Console c;\n         if ((c \u003d cons) \u003d\u003d null) {\n             synchronized (System.class) {\n                 if ((c \u003d cons) \u003d\u003d null) {\n                     cons \u003d c \u003d SharedSecrets.getJavaIOAccess().console();\n                 }\n             }\n         }\n         return c;\n     }\n\n    /**\n     * Returns the channel inherited from the entity that created this\n     * Java virtual machine.\n     *\n     * This method returns the channel obtained by invoking the\n     * {@link java.nio.channels.spi.SelectorProvider#inheritedChannel\n     * inheritedChannel} method of the system-wide default\n     * {@link java.nio.channels.spi.SelectorProvider} object.\n     *\n     * \u003cp\u003e In addition to the network-oriented channels described in\n     * {@link java.nio.channels.spi.SelectorProvider#inheritedChannel\n     * inheritedChannel}, this method may return other kinds of\n     * channels in the future.\n     *\n     * @return  The inherited channel, if any, otherwise {@code null}.\n     *\n     * @throws  IOException\n     *          If an I/O error occurs\n     *\n     * @throws  SecurityException\n     *          If a security manager is present and it does not\n     *          permit access to the channel.\n     *\n     * @since 1.5\n     */\n    public static Channel inheritedChannel() throws IOException {\n        return SelectorProvider.provider().inheritedChannel();\n    }\n\n    private static void checkIO() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"setIO\"));\n        }\n    }\n\n    private static native void setIn0(InputStream in);\n    private static native void setOut0(PrintStream out);\n    private static native void setErr0(PrintStream err);\n\n    private static class CallersHolder {\n        // Remember callers of setSecurityManager() here so that warning\n        // is only printed once for each different caller\n        final static Map\u003cClass\u003c?\u003e, Boolean\u003e callers\n            \u003d Collections.synchronizedMap(new WeakHashMap\u003c\u003e());\n    }\n\n    // Remember initial System.err. setSecurityManager() warning goes here\n    private static volatile @Stable PrintStream initialErrStream;\n\n    private static URL codeSource(Class\u003c?\u003e clazz) {\n        PrivilegedAction\u003cProtectionDomain\u003e pa \u003d clazz::getProtectionDomain;\n        @SuppressWarnings(\"removal\")\n        CodeSource cs \u003d AccessController.doPrivileged(pa).getCodeSource();\n        return (cs !\u003d null) ? cs.getLocation() : null;\n    }\n\n    /**\n     * Sets the system-wide security manager.\n     *\n     * If there is a security manager already installed, this method first\n     * calls the security manager\u0027s {@code checkPermission} method\n     * with a {@code RuntimePermission(\"setSecurityManager\")}\n     * permission to ensure it\u0027s ok to replace the existing\n     * security manager.\n     * This may result in throwing a {@code SecurityException}.\n     *\n     * \u003cp\u003e Otherwise, the argument is established as the current\n     * security manager. If the argument is {@code null} and no\n     * security manager has been established, then no action is taken and\n     * the method simply returns.\n     *\n     * @implNote In the JDK implementation, if the Java virtual machine is\n     * started with the system property {@code java.security.manager} set to\n     * the special token \"{@code disallow}\" then the {@code setSecurityManager}\n     * method cannot be used to set a security manager.\n     *\n     * @param  sm the security manager or {@code null}\n     * @throws SecurityException\n     *         if the security manager has already been set and its {@code\n     *         checkPermission} method doesn\u0027t allow it to be replaced\n     * @throws UnsupportedOperationException\n     *         if {@code sm} is non-null and a security manager is not allowed\n     *         to be set dynamically\n     * @see #getSecurityManager\n     * @see SecurityManager#checkPermission\n     * @see java.lang.RuntimePermission\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    @CallerSensitive\n    public static void setSecurityManager(@SuppressWarnings(\"removal\") SecurityManager sm) {\n        if (allowSecurityManager()) {\n            var callerClass \u003d Reflection.getCallerClass();\n            if (CallersHolder.callers.putIfAbsent(callerClass, true) \u003d\u003d null) {\n                URL url \u003d codeSource(callerClass);\n                final String source;\n                if (url \u003d\u003d null) {\n                    source \u003d callerClass.getName();\n                } else {\n                    source \u003d callerClass.getName() + \" (\" + url + \")\";\n                }\n                initialErrStream.printf(\"\"\"\n                        WARNING: A terminally deprecated method in java.lang.System has been called\n                        WARNING: System::setSecurityManager has been called by %s\n                        WARNING: Please consider reporting this to the maintainers of %s\n                        WARNING: System::setSecurityManager will be removed in a future release\n                        \"\"\", source, callerClass.getName());\n            }\n            implSetSecurityManager(sm);\n        } else {\n            // security manager not allowed\n            if (sm !\u003d null) {\n                throw new UnsupportedOperationException(\n                    \"The Security Manager is deprecated and will be removed in a future release\");\n            }\n        }\n    }\n\n    private static void implSetSecurityManager(@SuppressWarnings(\"removal\") SecurityManager sm) {\n        if (security \u003d\u003d null) {\n            // ensure image reader is initialized\n            Object.class.getResource(\"java/lang/ANY\");\n            // ensure the default file system is initialized\n            DefaultFileSystemProvider.theFileSystem();\n        }\n        if (sm !\u003d null) {\n            try {\n                // pre-populates the SecurityManager.packageAccess cache\n                // to avoid recursive permission checking issues with custom\n                // SecurityManager implementations\n                sm.checkPackageAccess(\"java.lang\");\n            } catch (Exception e) {\n                // no-op\n            }\n        }\n        setSecurityManager0(sm);\n    }\n\n    @SuppressWarnings(\"removal\")\n    private static synchronized\n    void setSecurityManager0(final SecurityManager s) {\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            // ask the currently installed security manager if we\n            // can replace it.\n            sm.checkPermission(new RuntimePermission(\"setSecurityManager\"));\n        }\n\n        if ((s !\u003d null) \u0026\u0026 (s.getClass().getClassLoader() !\u003d null)) {\n            // New security manager class is not on bootstrap classpath.\n            // Force policy to get initialized before we install the new\n            // security manager, in order to prevent infinite loops when\n            // trying to initialize the policy (which usually involves\n            // accessing some security and/or system properties, which in turn\n            // calls the installed security manager\u0027s checkPermission method\n            // which will loop infinitely if there is a non-system class\n            // (in this case: the new security manager class) on the stack).\n            AccessController.doPrivileged(new PrivilegedAction\u003c\u003e() {\n                public Object run() {\n                    s.getClass().getProtectionDomain().implies\n                        (SecurityConstants.ALL_PERMISSION);\n                    return null;\n                }\n            });\n        }\n\n        security \u003d s;\n    }\n\n    /**\n     * Gets the system-wide security manager.\n     *\n     * @return  if a security manager has already been established for the\n     *          current application, then that security manager is returned;\n     *          otherwise, {@code null} is returned.\n     * @see     #setSecurityManager\n     * @deprecated This method is only useful in conjunction with\n     *       {@linkplain SecurityManager the Security Manager}, which is\n     *       deprecated and subject to removal in a future release.\n     *       Consequently, this method is also deprecated and subject to\n     *       removal. There is no replacement for the Security Manager or this\n     *       method.\n     */\n    @SuppressWarnings(\"removal\")\n    @Deprecated(since\u003d\"17\", forRemoval\u003dtrue)\n    public static SecurityManager getSecurityManager() {\n        if (allowSecurityManager()) {\n            return security;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the current time in milliseconds.  Note that\n     * while the unit of time of the return value is a millisecond,\n     * the granularity of the value depends on the underlying\n     * operating system and may be larger.  For example, many\n     * operating systems measure time in units of tens of\n     * milliseconds.\n     *\n     * \u003cp\u003e See the description of the class {@code Date} for\n     * a discussion of slight discrepancies that may arise between\n     * \"computer time\" and coordinated universal time (UTC).\n     *\n     * @return  the difference, measured in milliseconds, between\n     *          the current time and midnight, January 1, 1970 UTC.\n     * @see     java.util.Date\n     */\n    @IntrinsicCandidate\n    public static native long currentTimeMillis();\n\n    /**\n     * Returns the current value of the running Java Virtual Machine\u0027s\n     * high-resolution time source, in nanoseconds.\n     *\n     * This method can only be used to measure elapsed time and is\n     * not related to any other notion of system or wall-clock time.\n     * The value returned represents nanoseconds since some fixed but\n     * arbitrary \u003ci\u003eorigin\u003c/i\u003e time (perhaps in the future, so values\n     * may be negative).  The same origin is used by all invocations of\n     * this method in an instance of a Java virtual machine; other\n     * virtual machine instances are likely to use a different origin.\n     *\n     * \u003cp\u003eThis method provides nanosecond precision, but not necessarily\n     * nanosecond resolution (that is, how frequently the value changes)\n     * - no guarantees are made except that the resolution is at least as\n     * good as that of {@link #currentTimeMillis()}.\n     *\n     * \u003cp\u003eDifferences in successive calls that span greater than\n     * approximately 292 years (2\u003csup\u003e63\u003c/sup\u003e nanoseconds) will not\n     * correctly compute elapsed time due to numerical overflow.\n     *\n     * \u003cp\u003eThe values returned by this method become meaningful only when\n     * the difference between two such values, obtained within the same\n     * instance of a Java virtual machine, is computed.\n     *\n     * \u003cp\u003eFor example, to measure how long some code takes to execute:\n     * \u003cpre\u003e {@code\n     * long startTime \u003d System.nanoTime();\n     * // ... the code being measured ...\n     * long elapsedNanos \u003d System.nanoTime() - startTime;}\u003c/pre\u003e\n     *\n     * \u003cp\u003eTo compare elapsed time against a timeout, use \u003cpre\u003e {@code\n     * if (System.nanoTime() - startTime \u003e\u003d timeoutNanos) ...}\u003c/pre\u003e\n     * instead of \u003cpre\u003e {@code\n     * if (System.nanoTime() \u003e\u003d startTime + timeoutNanos) ...}\u003c/pre\u003e\n     * because of the possibility of numerical overflow.\n     *\n     * @return the current value of the running Java Virtual Machine\u0027s\n     *         high-resolution time source, in nanoseconds\n     * @since 1.5\n     */\n    @IntrinsicCandidate\n    public static native long nanoTime();\n\n    /**\n     * Copies an array from the specified source array, beginning at the\n     * specified position, to the specified position of the destination array.\n     * A subsequence of array components are copied from the source\n     * array referenced by {@code src} to the destination array\n     * referenced by {@code dest}. The number of components copied is\n     * equal to the {@code length} argument. The components at\n     * positions {@code srcPos} through\n     * {@code srcPos+length-1} in the source array are copied into\n     * positions {@code destPos} through\n     * {@code destPos+length-1}, respectively, of the destination\n     * array.\n     * \u003cp\u003e\n     * If the {@code src} and {@code dest} arguments refer to the\n     * same array object, then the copying is performed as if the\n     * components at positions {@code srcPos} through\n     * {@code srcPos+length-1} were first copied to a temporary\n     * array with {@code length} components and then the contents of\n     * the temporary array were copied into positions\n     * {@code destPos} through {@code destPos+length-1} of the\n     * destination array.\n     * \u003cp\u003e\n     * If {@code dest} is {@code null}, then a\n     * {@code NullPointerException} is thrown.\n     * \u003cp\u003e\n     * If {@code src} is {@code null}, then a\n     * {@code NullPointerException} is thrown and the destination\n     * array is not modified.\n     * \u003cp\u003e\n     * Otherwise, if any of the following is true, an\n     * {@code ArrayStoreException} is thrown and the destination is\n     * not modified:\n     * \u003cul\u003e\n     * \u003cli\u003eThe {@code src} argument refers to an object that is not an\n     *     array.\n     * \u003cli\u003eThe {@code dest} argument refers to an object that is not an\n     *     array.\n     * \u003cli\u003eThe {@code src} argument and {@code dest} argument refer\n     *     to arrays whose component types are different primitive types.\n     * \u003cli\u003eThe {@code src} argument refers to an array with a primitive\n     *    component type and the {@code dest} argument refers to an array\n     *     with a reference component type.\n     * \u003cli\u003eThe {@code src} argument refers to an array with a reference\n     *    component type and the {@code dest} argument refers to an array\n     *     with a primitive component type.\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * Otherwise, if any of the following is true, an\n     * {@code IndexOutOfBoundsException} is\n     * thrown and the destination is not modified:\n     * \u003cul\u003e\n     * \u003cli\u003eThe {@code srcPos} argument is negative.\n     * \u003cli\u003eThe {@code destPos} argument is negative.\n     * \u003cli\u003eThe {@code length} argument is negative.\n     * \u003cli\u003e{@code srcPos+length} is greater than\n     *     {@code src.length}, the length of the source array.\n     * \u003cli\u003e{@code destPos+length} is greater than\n     *     {@code dest.length}, the length of the destination array.\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * Otherwise, if any actual component of the source array from\n     * position {@code srcPos} through\n     * {@code srcPos+length-1} cannot be converted to the component\n     * type of the destination array by assignment conversion, an\n     * {@code ArrayStoreException} is thrown. In this case, let\n     * \u003cb\u003e\u003ci\u003ek\u003c/i\u003e\u003c/b\u003e be the smallest nonnegative integer less than\n     * length such that {@code src[srcPos+}\u003ci\u003ek\u003c/i\u003e{@code ]}\n     * cannot be converted to the component type of the destination\n     * array; when the exception is thrown, source array components from\n     * positions {@code srcPos} through\n     * {@code srcPos+}\u003ci\u003ek\u003c/i\u003e{@code -1}\n     * will already have been copied to destination array positions\n     * {@code destPos} through\n     * {@code destPos+}\u003ci\u003ek\u003c/I\u003e{@code -1} and no other\n     * positions of the destination array will have been modified.\n     * (Because of the restrictions already itemized, this\n     * paragraph effectively applies only to the situation where both\n     * arrays have component types that are reference types.)\n     *\n     * @param      src      the source array.\n     * @param      srcPos   starting position in the source array.\n     * @param      dest     the destination array.\n     * @param      destPos  starting position in the destination data.\n     * @param      length   the number of array elements to be copied.\n     * @throws     IndexOutOfBoundsException  if copying would cause\n     *             access of data outside array bounds.\n     * @throws     ArrayStoreException  if an element in the {@code src}\n     *             array could not be stored into the {@code dest} array\n     *             because of a type mismatch.\n     * @throws     NullPointerException if either {@code src} or\n     *             {@code dest} is {@code null}.\n     */\n    @IntrinsicCandidate\n    public static native void arraycopy(Object src,  int  srcPos,\n                                        Object dest, int destPos,\n                                        int length);\n\n    /**\n     * Returns the same hash code for the given object as\n     * would be returned by the default method hashCode(),\n     * whether or not the given object\u0027s class overrides\n     * hashCode().\n     * The hash code for the null reference is zero.\n     *\n     * @param x object for which the hashCode is to be calculated\n     * @return  the hashCode\n     * @since   1.1\n     * @see Object#hashCode\n     * @see java.util.Objects#hashCode(Object)\n     */\n    @IntrinsicCandidate\n    public static native int identityHashCode(Object x);\n\n    /**\n     * System properties.\n     *\n     * See {@linkplain #getProperties getProperties} for details.\n     */\n    private static Properties props;\n\n    /**\n     * Determines the current system properties.\n     *\n     * First, if there is a security manager, its\n     * {@code checkPropertiesAccess} method is called with no\n     * arguments. This may result in a security exception.\n     * \u003cp\u003e\n     * The current set of system properties for use by the\n     * {@link #getProperty(String)} method is returned as a\n     * {@code Properties} object. If there is no current set of\n     * system properties, a set of system properties is first created and\n     * initialized. This set of system properties includes a value\n     * for each of the following keys unless the description of the associated\n     * value indicates that the value is optional.\n     * \u003ctable class\u003d\"striped\" style\u003d\"text-align:left\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eShows property keys and associated values\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"col\"\u003eKey\u003c/th\u003e\n     *     \u003cth scope\u003d\"col\"\u003eDescription of Associated Value\u003c/th\u003e\u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.version}\u003c/th\u003e\n     *     \u003ctd\u003eJava Runtime Environment version, which may be interpreted\n     *     as a {@link Runtime.Version}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.version.date}\u003c/th\u003e\n     *     \u003ctd\u003eJava Runtime Environment version date, in ISO-8601 YYYY-MM-DD\n     *     format, which may be interpreted as a {@link\n     *     java.time.LocalDate}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vendor}\u003c/th\u003e\n     *     \u003ctd\u003eJava Runtime Environment vendor\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vendor.url}\u003c/th\u003e\n     *     \u003ctd\u003eJava vendor URL\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vendor.version}\u003c/th\u003e\n     *     \u003ctd\u003eJava vendor version \u003cem\u003e(optional)\u003c/em\u003e \u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.home}\u003c/th\u003e\n     *     \u003ctd\u003eJava installation directory\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vm.specification.version}\u003c/th\u003e\n     *     \u003ctd\u003eJava Virtual Machine specification version, whose value is the\n     *     {@linkplain Runtime.Version#feature feature} element of the\n     *     {@linkplain Runtime#version() runtime version}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vm.specification.vendor}\u003c/th\u003e\n     *     \u003ctd\u003eJava Virtual Machine specification vendor\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vm.specification.name}\u003c/th\u003e\n     *     \u003ctd\u003eJava Virtual Machine specification name\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vm.version}\u003c/th\u003e\n     *     \u003ctd\u003eJava Virtual Machine implementation version which may be\n     *     interpreted as a {@link Runtime.Version}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vm.vendor}\u003c/th\u003e\n     *     \u003ctd\u003eJava Virtual Machine implementation vendor\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.vm.name}\u003c/th\u003e\n     *     \u003ctd\u003eJava Virtual Machine implementation name\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.specification.version}\u003c/th\u003e\n     *     \u003ctd\u003eJava Runtime Environment specification version, whose value is\n     *     the {@linkplain Runtime.Version#feature feature} element of the\n     *     {@linkplain Runtime#version() runtime version}\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.specification.vendor}\u003c/th\u003e\n     *     \u003ctd\u003eJava Runtime Environment specification  vendor\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.specification.name}\u003c/th\u003e\n     *     \u003ctd\u003eJava Runtime Environment specification  name\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.class.version}\u003c/th\u003e\n     *     \u003ctd\u003eJava class format version number\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.class.path}\u003c/th\u003e\n     *     \u003ctd\u003eJava class path  (refer to\n     *        {@link ClassLoader#getSystemClassLoader()} for details)\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.library.path}\u003c/th\u003e\n     *     \u003ctd\u003eList of paths to search when loading libraries\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.io.tmpdir}\u003c/th\u003e\n     *     \u003ctd\u003eDefault temp file path\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty java.compiler}\u003c/th\u003e\n     *     \u003ctd\u003eName of JIT compiler to use\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty os.name}\u003c/th\u003e\n     *     \u003ctd\u003eOperating system name\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty os.arch}\u003c/th\u003e\n     *     \u003ctd\u003eOperating system architecture\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty os.version}\u003c/th\u003e\n     *     \u003ctd\u003eOperating system version\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty file.separator}\u003c/th\u003e\n     *     \u003ctd\u003eFile separator (\"/\" on UNIX)\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty path.separator}\u003c/th\u003e\n     *     \u003ctd\u003ePath separator (\":\" on UNIX)\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty line.separator}\u003c/th\u003e\n     *     \u003ctd\u003eLine separator (\"\\n\" on UNIX)\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty user.name}\u003c/th\u003e\n     *     \u003ctd\u003eUser\u0027s account name\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty user.home}\u003c/th\u003e\n     *     \u003ctd\u003eUser\u0027s home directory\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty user.dir}\u003c/th\u003e\n     *     \u003ctd\u003eUser\u0027s current working directory\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty native.encoding}\u003c/th\u003e\n     *     \u003ctd\u003eCharacter encoding name derived from the host environment and/or\n     *     the user\u0027s settings. Setting this system property has no effect.\u003c/td\u003e\u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\n     * \u003cp\u003e\n     * Multiple paths in a system property value are separated by the path\n     * separator character of the platform.\n     * \u003cp\u003e\n     * Note that even if the security manager does not permit the\n     * {@code getProperties} operation, it may choose to permit the\n     * {@link #getProperty(String)} operation.\n     *\n     * @apiNote\n     * \u003cstrong\u003eChanging a standard system property may have unpredictable results\n     * unless otherwise specified.\u003c/strong\u003e\n     * Property values may be cached during initialization or on first use.\n     * Setting a standard property after initialization using {@link #getProperties()},\n     * {@link #setProperties(Properties)}, {@link #setProperty(String, String)}, or\n     * {@link #clearProperty(String)} may not have the desired effect.\n     *\n     * @implNote\n     * In addition to the standard system properties, the system\n     * properties may include the following keys:\n     * \u003ctable class\u003d\"striped\"\u003e\n     * \u003ccaption style\u003d\"display:none\"\u003eShows property keys and associated values\u003c/caption\u003e\n     * \u003cthead\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"col\"\u003eKey\u003c/th\u003e\n     *     \u003cth scope\u003d\"col\"\u003eDescription of Associated Value\u003c/th\u003e\u003c/tr\u003e\n     * \u003c/thead\u003e\n     * \u003ctbody\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty jdk.module.path}\u003c/th\u003e\n     *     \u003ctd\u003eThe application module path\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty jdk.module.upgrade.path}\u003c/th\u003e\n     *     \u003ctd\u003eThe upgrade module path\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty jdk.module.main}\u003c/th\u003e\n     *     \u003ctd\u003eThe module name of the initial/main module\u003c/td\u003e\u003c/tr\u003e\n     * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@systemProperty jdk.module.main.class}\u003c/th\u003e\n     *     \u003ctd\u003eThe main class name of the initial module\u003c/td\u003e\u003c/tr\u003e\n     * \u003c/tbody\u003e\n     * \u003c/table\u003e\n     *\n     * @return     the system properties\n     * @throws     SecurityException  if a security manager exists and its\n     *             {@code checkPropertiesAccess} method doesn\u0027t allow access\n     *             to the system properties.\n     * @see        #setProperties\n     * @see        java.lang.SecurityException\n     * @see        java.lang.SecurityManager#checkPropertiesAccess()\n     * @see        java.util.Properties\n     */\n    public static Properties getProperties() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPropertiesAccess();\n        }\n\n        return props;\n    }\n\n    /**\n     * Returns the system-dependent line separator string.  It always\n     * returns the same value - the initial value of the {@linkplain\n     * #getProperty(String) system property} {@code line.separator}.\n     *\n     * \u003cp\u003eOn UNIX systems, it returns {@code \"\\n\"}; on Microsoft\n     * Windows systems it returns {@code \"\\r\\n\"}.\n     *\n     * @return the system-dependent line separator string\n     * @since 1.7\n     */\n    public static String lineSeparator() {\n        return lineSeparator;\n    }\n\n    private static String lineSeparator;\n\n    /**\n     * Sets the system properties to the {@code Properties} argument.\n     *\n     * First, if there is a security manager, its\n     * {@code checkPropertiesAccess} method is called with no\n     * arguments. This may result in a security exception.\n     * \u003cp\u003e\n     * The argument becomes the current set of system properties for use\n     * by the {@link #getProperty(String)} method. If the argument is\n     * {@code null}, then the current set of system properties is\n     * forgotten.\n     *\n     * @apiNote\n     * \u003cstrong\u003eChanging a standard system property may have unpredictable results\n     * unless otherwise specified\u003c/strong\u003e.\n     * See {@linkplain #getProperties getProperties} for details.\n     *\n     * @param      props   the new system properties.\n     * @throws     SecurityException  if a security manager exists and its\n     *             {@code checkPropertiesAccess} method doesn\u0027t allow access\n     *             to the system properties.\n     * @see        #getProperties\n     * @see        java.util.Properties\n     * @see        java.lang.SecurityException\n     * @see        java.lang.SecurityManager#checkPropertiesAccess()\n     */\n    public static void setProperties(Properties props) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPropertiesAccess();\n        }\n\n        if (props \u003d\u003d null) {\n            Map\u003cString, String\u003e tempProps \u003d SystemProps.initProperties();\n            VersionProps.init(tempProps);\n            props \u003d createProperties(tempProps);\n        }\n        System.props \u003d props;\n    }\n\n    /**\n     * Gets the system property indicated by the specified key.\n     *\n     * First, if there is a security manager, its\n     * {@code checkPropertyAccess} method is called with the key as\n     * its argument. This may result in a SecurityException.\n     * \u003cp\u003e\n     * If there is no current set of system properties, a set of system\n     * properties is first created and initialized in the same manner as\n     * for the {@code getProperties} method.\n     *\n     * @apiNote\n     * \u003cstrong\u003eChanging a standard system property may have unpredictable results\n     * unless otherwise specified\u003c/strong\u003e.\n     * See {@linkplain #getProperties getProperties} for details.\n     *\n     * @param      key   the name of the system property.\n     * @return     the string value of the system property,\n     *             or {@code null} if there is no property with that key.\n     *\n     * @throws     SecurityException  if a security manager exists and its\n     *             {@code checkPropertyAccess} method doesn\u0027t allow\n     *             access to the specified system property.\n     * @throws     NullPointerException if {@code key} is {@code null}.\n     * @throws     IllegalArgumentException if {@code key} is empty.\n     * @see        #setProperty\n     * @see        java.lang.SecurityException\n     * @see        java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n     * @see        java.lang.System#getProperties()\n     */\n    public static String getProperty(String key) {\n        checkKey(key);\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPropertyAccess(key);\n        }\n\n        return props.getProperty(key);\n    }\n\n    /**\n     * Gets the system property indicated by the specified key.\n     *\n     * First, if there is a security manager, its\n     * {@code checkPropertyAccess} method is called with the\n     * {@code key} as its argument.\n     * \u003cp\u003e\n     * If there is no current set of system properties, a set of system\n     * properties is first created and initialized in the same manner as\n     * for the {@code getProperties} method.\n     *\n     * @param      key   the name of the system property.\n     * @param      def   a default value.\n     * @return     the string value of the system property,\n     *             or the default value if there is no property with that key.\n     *\n     * @throws     SecurityException  if a security manager exists and its\n     *             {@code checkPropertyAccess} method doesn\u0027t allow\n     *             access to the specified system property.\n     * @throws     NullPointerException if {@code key} is {@code null}.\n     * @throws     IllegalArgumentException if {@code key} is empty.\n     * @see        #setProperty\n     * @see        java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n     * @see        java.lang.System#getProperties()\n     */\n    public static String getProperty(String key, String def) {\n        checkKey(key);\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPropertyAccess(key);\n        }\n\n        return props.getProperty(key, def);\n    }\n\n    /**\n     * Sets the system property indicated by the specified key.\n     *\n     * First, if a security manager exists, its\n     * {@code SecurityManager.checkPermission} method\n     * is called with a {@code PropertyPermission(key, \"write\")}\n     * permission. This may result in a SecurityException being thrown.\n     * If no exception is thrown, the specified property is set to the given\n     * value.\n     *\n     * @apiNote\n     * \u003cstrong\u003eChanging a standard system property may have unpredictable results\n     * unless otherwise specified\u003c/strong\u003e.\n     * See {@linkplain #getProperties getProperties} for details.\n     *\n     * @param      key   the name of the system property.\n     * @param      value the value of the system property.\n     * @return     the previous value of the system property,\n     *             or {@code null} if it did not have one.\n     *\n     * @throws     SecurityException  if a security manager exists and its\n     *             {@code checkPermission} method doesn\u0027t allow\n     *             setting of the specified property.\n     * @throws     NullPointerException if {@code key} or\n     *             {@code value} is {@code null}.\n     * @throws     IllegalArgumentException if {@code key} is empty.\n     * @see        #getProperty\n     * @see        java.lang.System#getProperty(java.lang.String)\n     * @see        java.lang.System#getProperty(java.lang.String, java.lang.String)\n     * @see        java.util.PropertyPermission\n     * @see        SecurityManager#checkPermission\n     * @since      1.2\n     */\n    public static String setProperty(String key, String value) {\n        checkKey(key);\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new PropertyPermission(key,\n                SecurityConstants.PROPERTY_WRITE_ACTION));\n        }\n\n        return (String) props.setProperty(key, value);\n    }\n\n    /**\n     * Removes the system property indicated by the specified key.\n     *\n     * First, if a security manager exists, its\n     * {@code SecurityManager.checkPermission} method\n     * is called with a {@code PropertyPermission(key, \"write\")}\n     * permission. This may result in a SecurityException being thrown.\n     * If no exception is thrown, the specified property is removed.\n     *\n     * @apiNote\n     * \u003cstrong\u003eChanging a standard system property may have unpredictable results\n     * unless otherwise specified\u003c/strong\u003e.\n     * See {@linkplain #getProperties getProperties} method for details.\n     *\n     * @param      key   the name of the system property to be removed.\n     * @return     the previous string value of the system property,\n     *             or {@code null} if there was no property with that key.\n     *\n     * @throws     SecurityException  if a security manager exists and its\n     *             {@code checkPropertyAccess} method doesn\u0027t allow\n     *              access to the specified system property.\n     * @throws     NullPointerException if {@code key} is {@code null}.\n     * @throws     IllegalArgumentException if {@code key} is empty.\n     * @see        #getProperty\n     * @see        #setProperty\n     * @see        java.util.Properties\n     * @see        java.lang.SecurityException\n     * @see        java.lang.SecurityManager#checkPropertiesAccess()\n     * @since 1.5\n     */\n    public static String clearProperty(String key) {\n        checkKey(key);\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new PropertyPermission(key, \"write\"));\n        }\n\n        return (String) props.remove(key);\n    }\n\n    private static void checkKey(String key) {\n        if (key \u003d\u003d null) {\n            throw new NullPointerException(\"key can\u0027t be null\");\n        }\n        if (key.isEmpty()) {\n            throw new IllegalArgumentException(\"key can\u0027t be empty\");\n        }\n    }\n\n    /**\n     * Gets the value of the specified environment variable. An\n     * environment variable is a system-dependent external named\n     * value.\n     *\n     * \u003cp\u003eIf a security manager exists, its\n     * {@link SecurityManager#checkPermission checkPermission}\n     * method is called with a\n     * {@link RuntimePermission RuntimePermission(\"getenv.\"+name)}\n     * permission.  This may result in a {@link SecurityException}\n     * being thrown.  If no exception is thrown the value of the\n     * variable {@code name} is returned.\n     *\n     * \u003cp\u003e\u003ca id\u003d\"EnvironmentVSSystemProperties\"\u003e\u003ci\u003eSystem\n     * properties\u003c/i\u003e and \u003ci\u003eenvironment variables\u003c/i\u003e\u003c/a\u003e are both\n     * conceptually mappings between names and values.  Both\n     * mechanisms can be used to pass user-defined information to a\n     * Java process.  Environment variables have a more global effect,\n     * because they are visible to all descendants of the process\n     * which defines them, not just the immediate Java subprocess.\n     * They can have subtly different semantics, such as case\n     * insensitivity, on different operating systems.  For these\n     * reasons, environment variables are more likely to have\n     * unintended side effects.  It is best to use system properties\n     * where possible.  Environment variables should be used when a\n     * global effect is desired, or when an external system interface\n     * requires an environment variable (such as {@code PATH}).\n     *\n     * \u003cp\u003eOn UNIX systems the alphabetic case of {@code name} is\n     * typically significant, while on Microsoft Windows systems it is\n     * typically not.  For example, the expression\n     * {@code System.getenv(\"FOO\").equals(System.getenv(\"foo\"))}\n     * is likely to be true on Microsoft Windows.\n     *\n     * @param  name the name of the environment variable\n     * @return the string value of the variable, or {@code null}\n     *         if the variable is not defined in the system environment\n     * @throws NullPointerException if {@code name} is {@code null}\n     * @throws SecurityException\n     *         if a security manager exists and its\n     *         {@link SecurityManager#checkPermission checkPermission}\n     *         method doesn\u0027t allow access to the environment variable\n     *         {@code name}\n     * @see    #getenv()\n     * @see    ProcessBuilder#environment()\n     */\n    public static String getenv(String name) {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"getenv.\"+name));\n        }\n\n        return ProcessEnvironment.getenv(name);\n    }\n\n\n    /**\n     * Returns an unmodifiable string map view of the current system environment.\n     * The environment is a system-dependent mapping from names to\n     * values which is passed from parent to child processes.\n     *\n     * \u003cp\u003eIf the system does not support environment variables, an\n     * empty map is returned.\n     *\n     * \u003cp\u003eThe returned map will never contain null keys or values.\n     * Attempting to query the presence of a null key or value will\n     * throw a {@link NullPointerException}.  Attempting to query\n     * the presence of a key or value which is not of type\n     * {@link String} will throw a {@link ClassCastException}.\n     *\n     * \u003cp\u003eThe returned map and its collection views may not obey the\n     * general contract of the {@link Object#equals} and\n     * {@link Object#hashCode} methods.\n     *\n     * \u003cp\u003eThe returned map is typically case-sensitive on all platforms.\n     *\n     * \u003cp\u003eIf a security manager exists, its\n     * {@link SecurityManager#checkPermission checkPermission}\n     * method is called with a\n     * {@link RuntimePermission RuntimePermission(\"getenv.*\")} permission.\n     * This may result in a {@link SecurityException} being thrown.\n     *\n     * \u003cp\u003eWhen passing information to a Java subprocess,\n     * \u003ca href\u003d#EnvironmentVSSystemProperties\u003esystem properties\u003c/a\u003e\n     * are generally preferred over environment variables.\n     *\n     * @return the environment as a map of variable names to values\n     * @throws SecurityException\n     *         if a security manager exists and its\n     *         {@link SecurityManager#checkPermission checkPermission}\n     *         method doesn\u0027t allow access to the process environment\n     * @see    #getenv(String)\n     * @see    ProcessBuilder#environment()\n     * @since  1.5\n     */\n    public static java.util.Map\u003cString,String\u003e getenv() {\n        @SuppressWarnings(\"removal\")\n        SecurityManager sm \u003d getSecurityManager();\n        if (sm !\u003d null) {\n            sm.checkPermission(new RuntimePermission(\"getenv.*\"));\n        }\n\n        return ProcessEnvironment.getenv();\n    }\n\n    /**\n     * {@code System.Logger} instances log messages that will be\n     * routed to the underlying logging framework the {@link System.LoggerFinder\n     * LoggerFinder} uses.\n     *\n     * {@code System.Logger} instances are typically obtained from\n     * the {@link java.lang.System System} class, by calling\n     * {@link java.lang.System#getLogger(java.lang.String) System.getLogger(loggerName)}\n     * or {@link java.lang.System#getLogger(java.lang.String, java.util.ResourceBundle)\n     * System.getLogger(loggerName, bundle)}.\n     *\n     * @see java.lang.System#getLogger(java.lang.String)\n     * @see java.lang.System#getLogger(java.lang.String, java.util.ResourceBundle)\n     * @see java.lang.System.LoggerFinder\n     *\n     * @since 9\n     */\n    public interface Logger {\n\n        /**\n         * System {@linkplain Logger loggers} levels.\n         *\n         * A level has a {@linkplain #getName() name} and {@linkplain\n         * #getSeverity() severity}.\n         * Level values are {@link #ALL}, {@link #TRACE}, {@link #DEBUG},\n         * {@link #INFO}, {@link #WARNING}, {@link #ERROR}, {@link #OFF},\n         * by order of increasing severity.\n         * \u003cbr\u003e\n         * {@link #ALL} and {@link #OFF}\n         * are simple markers with severities mapped respectively to\n         * {@link java.lang.Integer#MIN_VALUE Integer.MIN_VALUE} and\n         * {@link java.lang.Integer#MAX_VALUE Integer.MAX_VALUE}.\n         * \u003cp\u003e\n         * \u003cb\u003eSeverity values and Mapping to {@code java.util.logging.Level}.\u003c/b\u003e\n         * \u003cp\u003e\n         * {@linkplain System.Logger.Level System logger levels} are mapped to\n         * {@linkplain java.util.logging.Level  java.util.logging levels}\n         * of corresponding severity.\n         * \u003cbr\u003eThe mapping is as follows:\n         * \u003cbr\u003e\u003cbr\u003e\n         * \u003ctable class\u003d\"striped\"\u003e\n         * \u003ccaption\u003eSystem.Logger Severity Level Mapping\u003c/caption\u003e\n         * \u003cthead\u003e\n         * \u003ctr\u003e\u003cth scope\u003d\"col\"\u003eSystem.Logger Levels\u003c/th\u003e\n         *     \u003cth scope\u003d\"col\"\u003ejava.util.logging Levels\u003c/th\u003e\n         * \u003c/thead\u003e\n         * \u003ctbody\u003e\n         * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@link Logger.Level#ALL ALL}\u003c/th\u003e\n         *     \u003ctd\u003e{@link java.util.logging.Level#ALL ALL}\u003c/td\u003e\n         * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@link Logger.Level#TRACE TRACE}\u003c/th\u003e\n         *     \u003ctd\u003e{@link java.util.logging.Level#FINER FINER}\u003c/td\u003e\n         * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@link Logger.Level#DEBUG DEBUG}\u003c/th\u003e\n         *     \u003ctd\u003e{@link java.util.logging.Level#FINE FINE}\u003c/td\u003e\n         * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@link Logger.Level#INFO INFO}\u003c/th\u003e\n         *     \u003ctd\u003e{@link java.util.logging.Level#INFO INFO}\u003c/td\u003e\n         * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@link Logger.Level#WARNING WARNING}\u003c/th\u003e\n         *     \u003ctd\u003e{@link java.util.logging.Level#WARNING WARNING}\u003c/td\u003e\n         * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@link Logger.Level#ERROR ERROR}\u003c/th\u003e\n         *     \u003ctd\u003e{@link java.util.logging.Level#SEVERE SEVERE}\u003c/td\u003e\n         * \u003ctr\u003e\u003cth scope\u003d\"row\"\u003e{@link Logger.Level#OFF OFF}\u003c/th\u003e\n         *     \u003ctd\u003e{@link java.util.logging.Level#OFF OFF}\u003c/td\u003e\n         * \u003c/tbody\u003e\n         * \u003c/table\u003e\n         *\n         * @since 9\n         *\n         * @see java.lang.System.LoggerFinder\n         * @see java.lang.System.Logger\n         */\n        public enum Level {\n\n            // for convenience, we\u0027re reusing java.util.logging.Level int values\n            // the mapping logic in sun.util.logging.PlatformLogger depends\n            // on this.\n            /**\n             * A marker to indicate that all levels are enabled.\n             * This level {@linkplain #getSeverity() severity} is\n             * {@link Integer#MIN_VALUE}.\n             */\n            ALL(Integer.MIN_VALUE),  // typically mapped to/from j.u.l.Level.ALL\n            /**\n             * {@code TRACE} level: usually used to log diagnostic information.\n             * This level {@linkplain #getSeverity() severity} is\n             * {@code 400}.\n             */\n            TRACE(400),   // typically mapped to/from j.u.l.Level.FINER\n            /**\n             * {@code DEBUG} level: usually used to log debug information traces.\n             * This level {@linkplain #getSeverity() severity} is\n             * {@code 500}.\n             */\n            DEBUG(500),   // typically mapped to/from j.u.l.Level.FINEST/FINE/CONFIG\n            /**\n             * {@code INFO} level: usually used to log information messages.\n             * This level {@linkplain #getSeverity() severity} is\n             * {@code 800}.\n             */\n            INFO(800),    // typically mapped to/from j.u.l.Level.INFO\n            /**\n             * {@code WARNING} level: usually used to log warning messages.\n             * This level {@linkplain #getSeverity() severity} is\n             * {@code 900}.\n             */\n            WARNING(900), // typically mapped to/from j.u.l.Level.WARNING\n            /**\n             * {@code ERROR} level: usually used to log error messages.\n             * This level {@linkplain #getSeverity() severity} is\n             * {@code 1000}.\n             */\n            ERROR(1000),  // typically mapped to/from j.u.l.Level.SEVERE\n            /**\n             * A marker to indicate that all levels are disabled.\n             * This level {@linkplain #getSeverity() severity} is\n             * {@link Integer#MAX_VALUE}.\n             */\n            OFF(Integer.MAX_VALUE);  // typically mapped to/from j.u.l.Level.OFF\n\n            private final int severity;\n\n            private Level(int severity) {\n                this.severity \u003d severity;\n            }\n\n            /**\n             * Returns the name of this level.\n             * @return this level {@linkplain #name()}.\n             */\n            public final String getName() {\n                return name();\n            }\n\n            /**\n             * Returns the severity of this level.\n             * A higher severity means a more severe condition.\n             * @return this level severity.\n             */\n            public final int getSeverity() {\n                return severity;\n            }\n        }\n\n        /**\n         * Returns the name of this logger.\n         *\n         * @return the logger name.\n         */\n        public String getName();\n\n        /**\n         * Checks if a message of the given level would be logged by\n         * this logger.\n         *\n         * @param level the log message level.\n         * @return {@code true} if the given log message level is currently\n         *         being logged.\n         *\n         * @throws NullPointerException if {@code level} is {@code null}.\n         */\n        public boolean isLoggable(Level level);\n\n        /**\n         * Logs a message.\n         *\n         * @implSpec The default implementation for this method calls\n         * {@code this.log(level, (ResourceBundle)null, msg, (Object[])null);}\n         *\n         * @param level the log message level.\n         * @param msg the string message (or a key in the message catalog, if\n         * this logger is a {@link\n         * LoggerFinder#getLocalizedLogger(java.lang.String,\n         * java.util.ResourceBundle, java.lang.Module) localized logger});\n         * can be {@code null}.\n         *\n         * @throws NullPointerException if {@code level} is {@code null}.\n         */\n        public default void log(Level level, String msg) {\n            log(level, (ResourceBundle) null, msg, (Object[]) null);\n        }\n\n        /**\n         * Logs a lazily supplied message.\n         *\n         * If the logger is currently enabled for the given log message level\n         * then a message is logged that is the result produced by the\n         * given supplier function.  Otherwise, the supplier is not operated on.\n         *\n         * @implSpec When logging is enabled for the given level, the default\n         * implementation for this method calls\n         * {@code this.log(level, (ResourceBundle)null, msgSupplier.get(), (Object[])null);}\n         *\n         * @param level the log message level.\n         * @param msgSupplier a supplier function that produces a message.\n         *\n         * @throws NullPointerException if {@code level} is {@code null},\n         *         or {@code msgSupplier} is {@code null}.\n         */\n        public default void log(Level level, Supplier\u003cString\u003e msgSupplier) {\n            Objects.requireNonNull(msgSupplier);\n            if (isLoggable(Objects.requireNonNull(level))) {\n                log(level, (ResourceBundle) null, msgSupplier.get(), (Object[]) null);\n            }\n        }\n\n        /**\n         * Logs a message produced from the given object.\n         *\n         * If the logger is currently enabled for the given log message level then\n         * a message is logged that, by default, is the result produced from\n         * calling  toString on the given object.\n         * Otherwise, the object is not operated on.\n         *\n         * @implSpec When logging is enabled for the given level, the default\n         * implementation for this method calls\n         * {@code this.log(level, (ResourceBundle)null, obj.toString(), (Object[])null);}\n         *\n         * @param level the log message level.\n         * @param obj the object to log.\n         *\n         * @throws NullPointerException if {@code level} is {@code null}, or\n         *         {@code obj} is {@code null}.\n         */\n        public default void log(Level level, Object obj) {\n            Objects.requireNonNull(obj);\n            if (isLoggable(Objects.requireNonNull(level))) {\n                this.log(level, (ResourceBundle) null, obj.toString(), (Object[]) null);\n            }\n        }\n\n        /**\n         * Logs a message associated with a given throwable.\n         *\n         * @implSpec The default implementation for this method calls\n         * {@code this.log(level, (ResourceBundle)null, msg, thrown);}\n         *\n         * @param level the log message level.\n         * @param msg the string message (or a key in the message catalog, if\n         * this logger is a {@link\n         * LoggerFinder#getLocalizedLogger(java.lang.String,\n         * java.util.ResourceBundle, java.lang.Module) localized logger});\n         * can be {@code null}.\n         * @param thrown a {@code Throwable} associated with the log message;\n         *        can be {@code null}.\n         *\n         * @throws NullPointerException if {@code level} is {@code null}.\n         */\n        public default void log(Level level, String msg, Throwable thrown) {\n            this.log(level, null, msg, thrown);\n        }\n\n        /**\n         * Logs a lazily supplied message associated with a given throwable.\n         *\n         * If the logger is currently enabled for the given log message level\n         * then a message is logged that is the result produced by the\n         * given supplier function.  Otherwise, the supplier is not operated on.\n         *\n         * @implSpec When logging is enabled for the given level, the default\n         * implementation for this method calls\n         * {@code this.log(level, (ResourceBundle)null, msgSupplier.get(), thrown);}\n         *\n         * @param level one of the log message level identifiers.\n         * @param msgSupplier a supplier function that produces a message.\n         * @param thrown a {@code Throwable} associated with log message;\n         *               can be {@code null}.\n         *\n         * @throws NullPointerException if {@code level} is {@code null}, or\n         *                               {@code msgSupplier} is {@code null}.\n         */\n        public default void log(Level level, Supplier\u003cString\u003e msgSupplier,\n                Throwable thrown) {\n            Objects.requireNonNull(msgSupplier);\n            if (isLoggable(Objects.requireNonNull(level))) {\n                this.log(level, null, msgSupplier.get(), thrown);\n            }\n        }\n\n        /**\n         * Logs a message with an optional list of parameters.\n         *\n         * @implSpec The default implementation for this method calls\n         * {@code this.log(level, (ResourceBundle)null, format, params);}\n         *\n         * @param level one of the log message level identifiers.\n         * @param format the string message format in {@link\n         * java.text.MessageFormat} format, (or a key in the message\n         * catalog, if this logger is a {@link\n         * LoggerFinder#getLocalizedLogger(java.lang.String,\n         * java.util.ResourceBundle, java.lang.Module) localized logger});\n         * can be {@code null}.\n         * @param params an optional list of parameters to the message (may be\n         * none).\n         *\n         * @throws NullPointerException if {@code level} is {@code null}.\n         */\n        public default void log(Level level, String format, Object... params) {\n            this.log(level, null, format, params);\n        }\n\n        /**\n         * Logs a localized message associated with a given throwable.\n         *\n         * If the given resource bundle is non-{@code null},  the {@code msg}\n         * string is localized using the given resource bundle.\n         * Otherwise the {@code msg} string is not localized.\n         *\n         * @param level the log message level.\n         * @param bundle a resource bundle to localize {@code msg}; can be\n         * {@code null}.\n         * @param msg the string message (or a key in the message catalog,\n         *            if {@code bundle} is not {@code null}); can be {@code null}.\n         * @param thrown a {@code Throwable} associated with the log message;\n         *        can be {@code null}.\n         *\n         * @throws NullPointerException if {@code level} is {@code null}.\n         */\n        public void log(Level level, ResourceBundle bundle, String msg,\n                Throwable thrown);\n\n        /**\n         * Logs a message with resource bundle and an optional list of\n         * parameters.\n         *\n         * If the given resource bundle is non-{@code null},  the {@code format}\n         * string is localized using the given resource bundle.\n         * Otherwise the {@code format} string is not localized.\n         *\n         * @param level the log message level.\n         * @param bundle a resource bundle to localize {@code format}; can be\n         * {@code null}.\n         * @param format the string message format in {@link\n         * java.text.MessageFormat} format, (or a key in the message\n         * catalog if {@code bundle} is not {@code null}); can be {@code null}.\n         * @param params an optional list of parameters to the message (may be\n         * none).\n         *\n         * @throws NullPointerException if {@code level} is {@code null}.\n         */\n        public void log(Level level, ResourceBundle bundle, String format,\n                Object... params);\n    }\n\n    /**\n     * The {@code LoggerFinder} service is responsible for creating, managing,\n     * and configuring loggers to the underlying framework it uses.\n     *\n     * A logger finder is a concrete implementation of this class that has a\n     * zero-argument constructor and implements the abstract methods defined\n     * by this class.\n     * The loggers returned from a logger finder are capable of routing log\n     * messages to the logging backend this provider supports.\n     * A given invocation of the Java Runtime maintains a single\n     * system-wide LoggerFinder instance that is loaded as follows:\n     * \u003cul\u003e\n     *    \u003cli\u003eFirst it finds any custom {@code LoggerFinder} provider\n     *        using the {@link java.util.ServiceLoader} facility with the\n     *        {@linkplain ClassLoader#getSystemClassLoader() system class\n     *        loader}.\u003c/li\u003e\n     *    \u003cli\u003eIf no {@code LoggerFinder} provider is found, the system default\n     *        {@code LoggerFinder} implementation will be used.\u003c/li\u003e\n     * \u003c/ul\u003e\n     * \u003cp\u003e\n     * An application can replace the logging backend\n     * \u003ci\u003eeven when the java.logging module is present\u003c/i\u003e, by simply providing\n     * and declaring an implementation of the {@link LoggerFinder} service.\n     * \u003cp\u003e\n     * \u003cb\u003eDefault Implementation\u003c/b\u003e\n     * \u003cp\u003e\n     * The system default {@code LoggerFinder} implementation uses\n     * {@code java.util.logging} as the backend framework when the\n     * {@code java.logging} module is present.\n     * It returns a {@linkplain System.Logger logger} instance\n     * that will route log messages to a {@link java.util.logging.Logger\n     * java.util.logging.Logger}. Otherwise, if {@code java.logging} is not\n     * present, the default implementation will return a simple logger\n     * instance that will route log messages of {@code INFO} level and above to\n     * the console ({@code System.err}).\n     * \u003cp\u003e\n     * \u003cb\u003eLogging Configuration\u003c/b\u003e\n     * \u003cp\u003e\n     * {@linkplain Logger Logger} instances obtained from the\n     * {@code LoggerFinder} factory methods are not directly configurable by\n     * the application. Configuration is the responsibility of the underlying\n     * logging backend, and usually requires using APIs specific to that backend.\n     * \u003cp\u003eFor the default {@code LoggerFinder} implementation\n     * using {@code java.util.logging} as its backend, refer to\n     * {@link java.util.logging java.util.logging} for logging configuration.\n     * For the default {@code LoggerFinder} implementation returning simple loggers\n     * when the {@code java.logging} module is absent, the configuration\n     * is implementation dependent.\n     * \u003cp\u003e\n     * Usually an application that uses a logging framework will log messages\n     * through a logger facade defined (or supported) by that framework.\n     * Applications that wish to use an external framework should log\n     * through the facade associated with that framework.\n     * \u003cp\u003e\n     * A system class that needs to log messages will typically obtain\n     * a {@link System.Logger} instance to route messages to the logging\n     * framework selected by the application.\n     * \u003cp\u003e\n     * Libraries and classes that only need loggers to produce log messages\n     * should not attempt to configure loggers by themselves, as that\n     * would make them dependent from a specific implementation of the\n     * {@code LoggerFinder} service.\n     * \u003cp\u003e\n     * In addition, when a security manager is present, loggers provided to\n     * system classes should not be directly configurable through the logging\n     * backend without requiring permissions.\n     * \u003cbr\u003e\n     * It is the responsibility of the provider of\n     * the concrete {@code LoggerFinder} implementation to ensure that\n     * these loggers are not configured by untrusted code without proper\n     * permission checks, as configuration performed on such loggers usually\n     * affects all applications in the same Java Runtime.\n     * \u003cp\u003e\n     * \u003cb\u003eMessage Levels and Mapping to backend levels\u003c/b\u003e\n     * \u003cp\u003e\n     * A logger finder is responsible for mapping from a {@code\n     * System.Logger.Level} to a level supported by the logging backend it uses.\n     * \u003cbr\u003eThe default LoggerFinder using {@code java.util.logging} as the backend\n     * maps {@code System.Logger} levels to\n     * {@linkplain java.util.logging.Level java.util.logging} levels\n     * of corresponding severity - as described in {@link Logger.Level\n     * Logger.Level}.\n     *\n     * @see java.lang.System\n     * @see java.lang.System.Logger\n     *\n     * @since 9\n     */\n    public static abstract class LoggerFinder {\n        /**\n         * The {@code RuntimePermission(\"loggerFinder\")} is\n         * necessary to subclass and instantiate the {@code LoggerFinder} class,\n         * as well as to obtain loggers from an instance of that class.\n         */\n        static final RuntimePermission LOGGERFINDER_PERMISSION \u003d\n                new RuntimePermission(\"loggerFinder\");\n\n        /**\n         * Creates a new instance of {@code LoggerFinder}.\n         *\n         * @implNote It is recommended that a {@code LoggerFinder} service\n         *   implementation does not perform any heavy initialization in its\n         *   constructor, in order to avoid possible risks of deadlock or class\n         *   loading cycles during the instantiation of the service provider.\n         *\n         * @throws SecurityException if a security manager is present and its\n         *         {@code checkPermission} method doesn\u0027t allow the\n         *         {@code RuntimePermission(\"loggerFinder\")}.\n         */\n        protected LoggerFinder() {\n            this(checkPermission());\n        }\n\n        private LoggerFinder(Void unused) {\n            // nothing to do.\n        }\n\n        private static Void checkPermission() {\n            @SuppressWarnings(\"removal\")\n            final SecurityManager sm \u003d System.getSecurityManager();\n            if (sm !\u003d null) {\n                sm.checkPermission(LOGGERFINDER_PERMISSION);\n            }\n            return null;\n        }\n\n        /**\n         * Returns an instance of {@link Logger Logger}\n         * for the given {@code module}.\n         *\n         * @param name the name of the logger.\n         * @param module the module for which the logger is being requested.\n         *\n         * @return a {@link Logger logger} suitable for use within the given\n         *         module.\n         * @throws NullPointerException if {@code name} is {@code null} or\n         *        {@code module} is {@code null}.\n         * @throws SecurityException if a security manager is present and its\n         *         {@code checkPermission} method doesn\u0027t allow the\n         *         {@code RuntimePermission(\"loggerFinder\")}.\n         */\n        public abstract Logger getLogger(String name, Module module);\n\n        /**\n         * Returns a localizable instance of {@link Logger Logger}\n         * for the given {@code module}.\n         * The returned logger will use the provided resource bundle for\n         * message localization.\n         *\n         * @implSpec By default, this method calls {@link\n         * #getLogger(java.lang.String, java.lang.Module)\n         * this.getLogger(name, module)} to obtain a logger, then wraps that\n         * logger in a {@link Logger} instance where all methods that do not\n         * take a {@link ResourceBundle} as parameter are redirected to one\n         * which does - passing the given {@code bundle} for\n         * localization. So for instance, a call to {@link\n         * Logger#log(Logger.Level, String) Logger.log(Level.INFO, msg)}\n         * will end up as a call to {@link\n         * Logger#log(Logger.Level, ResourceBundle, String, Object...)\n         * Logger.log(Level.INFO, bundle, msg, (Object[])null)} on the wrapped\n         * logger instance.\n         * Note however that by default, string messages returned by {@link\n         * java.util.function.Supplier Supplier\u0026lt;String\u0026gt;} will not be\n         * localized, as it is assumed that such strings are messages which are\n         * already constructed, rather than keys in a resource bundle.\n         * \u003cp\u003e\n         * An implementation of {@code LoggerFinder} may override this method,\n         * for example, when the underlying logging backend provides its own\n         * mechanism for localizing log messages, then such a\n         * {@code LoggerFinder} would be free to return a logger\n         * that makes direct use of the mechanism provided by the backend.\n         *\n         * @param name    the name of the logger.\n         * @param bundle  a resource bundle; can be {@code null}.\n         * @param module  the module for which the logger is being requested.\n         * @return an instance of {@link Logger Logger}  which will use the\n         * provided resource bundle for message localization.\n         *\n         * @throws NullPointerException if {@code name} is {@code null} or\n         *         {@code module} is {@code null}.\n         * @throws SecurityException if a security manager is present and its\n         *         {@code checkPermission} method doesn\u0027t allow the\n         *         {@code RuntimePermission(\"loggerFinder\")}.\n         */\n        public Logger getLocalizedLogger(String name, ResourceBundle bundle,\n                                         Module module) {\n            return new LocalizedLoggerWrapper\u003c\u003e(getLogger(name, module), bundle);\n        }\n\n        /**\n         * Returns the {@code LoggerFinder} instance. There is one\n         * single system-wide {@code LoggerFinder} instance in\n         * the Java Runtime.  See the class specification of how the\n         * {@link LoggerFinder LoggerFinder} implementation is located and\n         * loaded.\n         *\n         * @return the {@link LoggerFinder LoggerFinder} instance.\n         * @throws SecurityException if a security manager is present and its\n         *         {@code checkPermission} method doesn\u0027t allow the\n         *         {@code RuntimePermission(\"loggerFinder\")}.\n         */\n        public static LoggerFinder getLoggerFinder() {\n            @SuppressWarnings(\"removal\")\n            final SecurityManager sm \u003d System.getSecurityManager();\n            if (sm !\u003d null) {\n                sm.checkPermission(LOGGERFINDER_PERMISSION);\n            }\n            return accessProvider();\n        }\n\n\n        private static volatile LoggerFinder service;\n        @SuppressWarnings(\"removal\")\n        static LoggerFinder accessProvider() {\n            // We do not need to synchronize: LoggerFinderLoader will\n            // always return the same instance, so if we don\u0027t have it,\n            // just fetch it again.\n            if (service \u003d\u003d null) {\n                PrivilegedAction\u003cLoggerFinder\u003e pa \u003d\n                        () -\u003e LoggerFinderLoader.getLoggerFinder();\n                service \u003d AccessController.doPrivileged(pa, null,\n                        LOGGERFINDER_PERMISSION);\n            }\n            return service;\n        }\n\n    }\n\n\n    /**\n     * Returns an instance of {@link Logger Logger} for the caller\u0027s\n     * use.\n     *\n     * @implSpec\n     * Instances returned by this method route messages to loggers\n     * obtained by calling {@link LoggerFinder#getLogger(java.lang.String,\n     * java.lang.Module) LoggerFinder.getLogger(name, module)}, where\n     * {@code module} is the caller\u0027s module.\n     * In cases where {@code System.getLogger} is called from a context where\n     * there is no caller frame on the stack (e.g when called directly\n     * from a JNI attached thread), {@code IllegalCallerException} is thrown.\n     * To obtain a logger in such a context, use an auxiliary class that will\n     * implicitly be identified as the caller, or use the system {@link\n     * LoggerFinder#getLoggerFinder() LoggerFinder} to obtain a logger instead.\n     * Note that doing the latter may eagerly initialize the underlying\n     * logging system.\n     *\n     * @apiNote\n     * This method may defer calling the {@link\n     * LoggerFinder#getLogger(java.lang.String, java.lang.Module)\n     * LoggerFinder.getLogger} method to create an actual logger supplied by\n     * the logging backend, for instance, to allow loggers to be obtained during\n     * the system initialization time.\n     *\n     * @param name the name of the logger.\n     * @return an instance of {@link Logger} that can be used by the calling\n     *         class.\n     * @throws NullPointerException if {@code name} is {@code null}.\n     * @throws IllegalCallerException if there is no Java caller frame on the\n     *         stack.\n     *\n     * @since 9\n     */\n    @CallerSensitive\n    public static Logger getLogger(String name) {\n        Objects.requireNonNull(name);\n        final Class\u003c?\u003e caller \u003d Reflection.getCallerClass();\n        if (caller \u003d\u003d null) {\n            throw new IllegalCallerException(\"no caller frame\");\n        }\n        return LazyLoggers.getLogger(name, caller.getModule());\n    }\n\n    /**\n     * Returns a localizable instance of {@link Logger\n     * Logger} for the caller\u0027s use.\n     * The returned logger will use the provided resource bundle for message\n     * localization.\n     *\n     * @implSpec\n     * The returned logger will perform message localization as specified\n     * by {@link LoggerFinder#getLocalizedLogger(java.lang.String,\n     * java.util.ResourceBundle, java.lang.Module)\n     * LoggerFinder.getLocalizedLogger(name, bundle, module)}, where\n     * {@code module} is the caller\u0027s module.\n     * In cases where {@code System.getLogger} is called from a context where\n     * there is no caller frame on the stack (e.g when called directly\n     * from a JNI attached thread), {@code IllegalCallerException} is thrown.\n     * To obtain a logger in such a context, use an auxiliary class that\n     * will implicitly be identified as the caller, or use the system {@link\n     * LoggerFinder#getLoggerFinder() LoggerFinder} to obtain a logger instead.\n     * Note that doing the latter may eagerly initialize the underlying\n     * logging system.\n     *\n     * @apiNote\n     * This method is intended to be used after the system is fully initialized.\n     * This method may trigger the immediate loading and initialization\n     * of the {@link LoggerFinder} service, which may cause issues if the\n     * Java Runtime is not ready to initialize the concrete service\n     * implementation yet.\n     * System classes which may be loaded early in the boot sequence and\n     * need to log localized messages should create a logger using\n     * {@link #getLogger(java.lang.String)} and then use the log methods that\n     * take a resource bundle as parameter.\n     *\n     * @param name    the name of the logger.\n     * @param bundle  a resource bundle.\n     * @return an instance of {@link Logger} which will use the provided\n     * resource bundle for message localization.\n     * @throws NullPointerException if {@code name} is {@code null} or\n     *         {@code bundle} is {@code null}.\n     * @throws IllegalCallerException if there is no Java caller frame on the\n     *         stack.\n     *\n     * @since 9\n     */\n    @SuppressWarnings(\"removal\")\n    @CallerSensitive\n    public static Logger getLogger(String name, ResourceBundle bundle) {\n        final ResourceBundle rb \u003d Objects.requireNonNull(bundle);\n        Objects.requireNonNull(name);\n        final Class\u003c?\u003e caller \u003d Reflection.getCallerClass();\n        if (caller \u003d\u003d null) {\n            throw new IllegalCallerException(\"no caller frame\");\n        }\n        final SecurityManager sm \u003d System.getSecurityManager();\n        // We don\u0027t use LazyLoggers if a resource bundle is specified.\n        // Bootstrap sensitive classes in the JDK do not use resource bundles\n        // when logging. This could be revisited later, if it needs to.\n        if (sm !\u003d null) {\n            final PrivilegedAction\u003cLogger\u003e pa \u003d\n                    () -\u003e LoggerFinder.accessProvider()\n                            .getLocalizedLogger(name, rb, caller.getModule());\n            return AccessController.doPrivileged(pa, null,\n                                         LoggerFinder.LOGGERFINDER_PERMISSION);\n        }\n        return LoggerFinder.accessProvider()\n                .getLocalizedLogger(name, rb, caller.getModule());\n    }\n\n    /**\n     * Terminates the currently running Java Virtual Machine. The\n     * argument serves as a status code; by convention, a nonzero status\n     * code indicates abnormal termination.\n     * \u003cp\u003e\n     * This method calls the {@code exit} method in class\n     * {@code Runtime}. This method never returns normally.\n     * \u003cp\u003e\n     * The call {@code System.exit(n)} is effectively equivalent to\n     * the call:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * Runtime.getRuntime().exit(n)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      status   exit status.\n     * @throws  SecurityException\n     *        if a security manager exists and its {@code checkExit}\n     *        method doesn\u0027t allow exit with the specified status.\n     * @see        java.lang.Runtime#exit(int)\n     */\n    public static void exit(int status) {\n        Runtime.getRuntime().exit(status);\n    }\n\n    /**\n     * Runs the garbage collector in the Java Virtual Machine.\n     * \u003cp\u003e\n     * Calling the {@code gc} method suggests that the Java Virtual Machine\n     * expend effort toward recycling unused objects in order to\n     * make the memory they currently occupy available for reuse\n     * by the Java Virtual Machine.\n     * When control returns from the method call, the Java Virtual Machine\n     * has made a best effort to reclaim space from all unused objects.\n     * There is no guarantee that this effort will recycle any particular\n     * number of unused objects, reclaim any particular amount of space, or\n     * complete at any particular time, if at all, before the method returns or ever.\n     * There is also no guarantee that this effort will determine\n     * the change of reachability in any particular number of objects,\n     * or that any particular number of {@link java.lang.ref.Reference Reference}\n     * objects will be cleared and enqueued.\n     *\n     * \u003cp\u003e\n     * The call {@code System.gc()} is effectively equivalent to the\n     * call:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * Runtime.getRuntime().gc()\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @see     java.lang.Runtime#gc()\n     */\n    public static void gc() {\n        Runtime.getRuntime().gc();\n    }\n\n    /**\n     * Runs the finalization methods of any objects pending finalization.\n     *\n     * Calling this method suggests that the Java Virtual Machine expend\n     * effort toward running the {@code finalize} methods of objects\n     * that have been found to be discarded but whose {@code finalize}\n     * methods have not yet been run. When control returns from the\n     * method call, the Java Virtual Machine has made a best effort to\n     * complete all outstanding finalizations.\n     * \u003cp\u003e\n     * The call {@code System.runFinalization()} is effectively\n     * equivalent to the call:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * Runtime.getRuntime().runFinalization()\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @see     java.lang.Runtime#runFinalization()\n     */\n    public static void runFinalization() {\n        Runtime.getRuntime().runFinalization();\n    }\n\n    /**\n     * Loads the native library specified by the filename argument.  The filename\n     * argument must be an absolute path name.\n     *\n     * If the filename argument, when stripped of any platform-specific library\n     * prefix, path, and file extension, indicates a library whose name is,\n     * for example, L, and a native library called L is statically linked\n     * with the VM, then the JNI_OnLoad_L function exported by the library\n     * is invoked rather than attempting to load a dynamic library.\n     * A filename matching the argument does not have to exist in the\n     * file system.\n     * See the \u003ca href\u003d\"{@docRoot}/../specs/jni/index.html\"\u003e JNI Specification\u003c/a\u003e\n     * for more details.\n     *\n     * Otherwise, the filename argument is mapped to a native library image in\n     * an implementation-dependent manner.\n     *\n     * \u003cp\u003e\n     * The call {@code System.load(name)} is effectively equivalent\n     * to the call:\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * Runtime.getRuntime().load(name)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      filename   the file to load.\n     * @throws     SecurityException  if a security manager exists and its\n     *             {@code checkLink} method doesn\u0027t allow\n     *             loading of the specified dynamic library\n     * @throws     UnsatisfiedLinkError  if either the filename is not an\n     *             absolute path name, the native library is not statically\n     *             linked with the VM, or the library cannot be mapped to\n     *             a native library image by the host system.\n     * @throws     NullPointerException if {@code filename} is {@code null}\n     * @see        java.lang.Runtime#load(java.lang.String)\n     * @see        java.lang.SecurityManager#checkLink(java.lang.String)\n     */\n    @CallerSensitive\n    public static void load(String filename) {\n        Runtime.getRuntime().load0(Reflection.getCallerClass(), filename);\n    }\n\n    /**\n     * Loads the native library specified by the {@code libname}\n     * argument.  The {@code libname} argument must not contain any platform\n     * specific prefix, file extension or path. If a native library\n     * called {@code libname} is statically linked with the VM, then the\n     * JNI_OnLoad_{@code libname} function exported by the library is invoked.\n     * See the \u003ca href\u003d\"{@docRoot}/../specs/jni/index.html\"\u003e JNI Specification\u003c/a\u003e\n     * for more details.\n     *\n     * Otherwise, the libname argument is loaded from a system library\n     * location and mapped to a native library image in an\n     * implementation-dependent manner.\n     * \u003cp\u003e\n     * The call {@code System.loadLibrary(name)} is effectively\n     * equivalent to the call\n     * \u003cblockquote\u003e\u003cpre\u003e\n     * Runtime.getRuntime().loadLibrary(name)\n     * \u003c/pre\u003e\u003c/blockquote\u003e\n     *\n     * @param      libname   the name of the library.\n     * @throws     SecurityException  if a security manager exists and its\n     *             {@code checkLink} method doesn\u0027t allow\n     *             loading of the specified dynamic library\n     * @throws     UnsatisfiedLinkError if either the libname argument\n     *             contains a file path, the native library is not statically\n     *             linked with the VM,  or the library cannot be mapped to a\n     *             native library image by the host system.\n     * @throws     NullPointerException if {@code libname} is {@code null}\n     * @see        java.lang.Runtime#loadLibrary(java.lang.String)\n     * @see        java.lang.SecurityManager#checkLink(java.lang.String)\n     */\n    @CallerSensitive\n    public static void loadLibrary(String libname) {\n        Runtime.getRuntime().loadLibrary0(Reflection.getCallerClass(), libname);\n    }\n\n    /**\n     * Maps a library name into a platform-specific string representing\n     * a native library.\n     *\n     * @param      libname the name of the library.\n     * @return     a platform-dependent native library name.\n     * @throws     NullPointerException if {@code libname} is {@code null}\n     * @see        java.lang.System#loadLibrary(java.lang.String)\n     * @see        java.lang.ClassLoader#findLibrary(java.lang.String)\n     * @since      1.2\n     */\n    public static native String mapLibraryName(String libname);\n\n    /**\n     * Create PrintStream for stdout/err based on encoding.\n     */\n    private static PrintStream newPrintStream(FileOutputStream fos, String enc) {\n       if (enc !\u003d null) {\n            try {\n                return new PrintStream(new BufferedOutputStream(fos, 128), true, enc);\n            } catch (UnsupportedEncodingException uee) {}\n        }\n        return new PrintStream(new BufferedOutputStream(fos, 128), true);\n    }\n\n    /**\n     * Logs an exception/error at initialization time to stdout or stderr.\n     *\n     * @param printToStderr to print to stderr rather than stdout\n     * @param printStackTrace to print the stack trace\n     * @param msg the message to print before the exception, can be {@code null}\n     * @param e the exception or error\n     */\n    private static void logInitException(boolean printToStderr,\n                                         boolean printStackTrace,\n                                         String msg,\n                                         Throwable e) {\n        if (VM.initLevel() \u003c 1) {\n            throw new InternalError(\"system classes not initialized\");\n        }\n        PrintStream log \u003d (printToStderr) ? err : out;\n        if (msg !\u003d null) {\n            log.println(msg);\n        }\n        if (printStackTrace) {\n            e.printStackTrace(log);\n        } else {\n            log.println(e);\n            for (Throwable suppressed : e.getSuppressed()) {\n                log.println(\"Suppressed: \" + suppressed);\n            }\n            Throwable cause \u003d e.getCause();\n            if (cause !\u003d null) {\n                log.println(\"Caused by: \" + cause);\n            }\n        }\n    }\n\n    /**\n     * Create the Properties object from a map - masking out system properties\n     * that are not intended for public access.\n     */\n    private static Properties createProperties(Map\u003cString, String\u003e initialProps) {\n        Properties properties \u003d new Properties(initialProps.size());\n        for (var entry : initialProps.entrySet()) {\n            String prop \u003d entry.getKey();\n            switch (prop) {\n                // Do not add private system properties to the Properties\n                case \"sun.nio.MaxDirectMemorySize\":\n                case \"sun.nio.PageAlignDirectMemory\":\n                    // used by java.lang.Integer.IntegerCache\n                case \"java.lang.Integer.IntegerCache.high\":\n                    // used by sun.launcher.LauncherHelper\n                case \"sun.java.launcher.diag\":\n                    // used by jdk.internal.loader.ClassLoaders\n                case \"jdk.boot.class.path.append\":\n                    break;\n                default:\n                    properties.put(prop, entry.getValue());\n            }\n        }\n        return properties;\n    }\n\n    /**\n     * Initialize the system class.  Called after thread initialization.\n     */\n    private static void initPhase1() {\n\n        // register the shared secrets - do this first, since SystemProps.initProperties\n        // might initialize CharsetDecoders that rely on it\n        setJavaLangAccess();\n\n        // VM might invoke JNU_NewStringPlatform() to set those encoding\n        // sensitive properties (user.home, user.name, boot.class.path, etc.)\n        // during \"props\" initialization.\n        // The charset is initialized in System.c and does not depend on the Properties.\n        Map\u003cString, String\u003e tempProps \u003d SystemProps.initProperties();\n        VersionProps.init(tempProps);\n\n        // There are certain system configurations that may be controlled by\n        // VM options such as the maximum amount of direct memory and\n        // Integer cache size used to support the object identity semantics\n        // of autoboxing.  Typically, the library will obtain these values\n        // from the properties set by the VM.  If the properties are for\n        // internal implementation use only, these properties should be\n        // masked from the system properties.\n        //\n        // Save a private copy of the system properties object that\n        // can only be accessed by the internal implementation.\n        VM.saveProperties(tempProps);\n        props \u003d createProperties(tempProps);\n\n        StaticProperty.javaHome();          // Load StaticProperty to cache the property values\n\n        lineSeparator \u003d props.getProperty(\"line.separator\");\n\n        FileInputStream fdIn \u003d new FileInputStream(FileDescriptor.in);\n        FileOutputStream fdOut \u003d new FileOutputStream(FileDescriptor.out);\n        FileOutputStream fdErr \u003d new FileOutputStream(FileDescriptor.err);\n        setIn0(new BufferedInputStream(fdIn));\n        // sun.stdout/err.encoding are set when the VM is associated with the terminal,\n        // thus they are equivalent to Console.charset(), otherwise the encoding\n        // defaults to Charset.defaultCharset()\n        setOut0(newPrintStream(fdOut, props.getProperty(\"sun.stdout.encoding\")));\n        setErr0(newPrintStream(fdErr, props.getProperty(\"sun.stderr.encoding\")));\n\n        // Setup Java signal handlers for HUP, TERM, and INT (where available).\n        Terminator.setup();\n\n        // Initialize any miscellaneous operating system settings that need to be\n        // set for the class libraries. Currently this is no-op everywhere except\n        // for Windows where the process-wide error mode is set before the java.io\n        // classes are used.\n        VM.initializeOSEnvironment();\n\n        // The main thread is not added to its thread group in the same\n        // way as other threads; we must do it ourselves here.\n        Thread current \u003d Thread.currentThread();\n        current.getThreadGroup().add(current);\n\n\n        // Subsystems that are invoked during initialization can invoke\n        // VM.isBooted() in order to avoid doing things that should\n        // wait until the VM is fully initialized. The initialization level\n        // is incremented from 0 to 1 here to indicate the first phase of\n        // initialization has completed.\n        // IMPORTANT: Ensure that this remains the last initialization action!\n        VM.initLevel(1);\n    }\n\n    // @see #initPhase2()\n    static ModuleLayer bootLayer;\n\n    /*\n     * Invoked by VM.  Phase 2 module system initialization.\n     * Only classes in java.base can be loaded in this phase.\n     *\n     * @param printToStderr print exceptions to stderr rather than stdout\n     * @param printStackTrace print stack trace when exception occurs\n     *\n     * @return JNI_OK for success, JNI_ERR for failure\n     */\n    private static int initPhase2(boolean printToStderr, boolean printStackTrace) {\n\n        try {\n            bootLayer \u003d ModuleBootstrap.boot();\n        } catch (Exception | Error e) {\n            logInitException(printToStderr, printStackTrace,\n                             \"Error occurred during initialization of boot layer\", e);\n            return -1; // JNI_ERR\n        }\n\n        // module system initialized\n        VM.initLevel(2);\n\n        return 0; // JNI_OK\n    }\n\n    /*\n     * Invoked by VM.  Phase 3 is the final system initialization:\n     * 1. eagerly initialize bootstrap method factories that might interact\n     *    negatively with custom security managers and custom class loaders\n     * 2. set security manager\n     * 3. set system class loader\n     * 4. set TCCL\n     *\n     * This method must be called after the module system initialization.\n     * The security manager and system class loader may be a custom class from\n     * the application classpath or modulepath.\n     */\n    @SuppressWarnings(\"removal\")\n    private static void initPhase3() {\n\n        // Initialize the StringConcatFactory eagerly to avoid potential\n        // bootstrap circularity issues that could be caused by a custom\n        // SecurityManager\n        Unsafe.getUnsafe().ensureClassInitialized(StringConcatFactory.class);\n\n        String smProp \u003d System.getProperty(\"java.security.manager\");\n        boolean needWarning \u003d false;\n        if (smProp !\u003d null) {\n            switch (smProp) {\n                case \"disallow\":\n                    allowSecurityManager \u003d NEVER;\n                    break;\n                case \"allow\":\n                    allowSecurityManager \u003d MAYBE;\n                    break;\n                case \"\":\n                case \"default\":\n                    implSetSecurityManager(new SecurityManager());\n                    allowSecurityManager \u003d MAYBE;\n                    needWarning \u003d true;\n                    break;\n                default:\n                    try {\n                        ClassLoader cl \u003d ClassLoader.getBuiltinAppClassLoader();\n                        Class\u003c?\u003e c \u003d Class.forName(smProp, false, cl);\n                        Constructor\u003c?\u003e ctor \u003d c.getConstructor();\n                        // Must be a public subclass of SecurityManager with\n                        // a public no-arg constructor\n                        if (!SecurityManager.class.isAssignableFrom(c) ||\n                            !Modifier.isPublic(c.getModifiers()) ||\n                            !Modifier.isPublic(ctor.getModifiers())) {\n                            throw new Error(\"Could not create SecurityManager: \"\n                                             + ctor.toString());\n                        }\n                        // custom security manager may be in non-exported package\n                        ctor.setAccessible(true);\n                        SecurityManager sm \u003d (SecurityManager) ctor.newInstance();\n                        implSetSecurityManager(sm);\n                        needWarning \u003d true;\n                    } catch (Exception e) {\n                        throw new InternalError(\"Could not create SecurityManager\", e);\n                    }\n                    allowSecurityManager \u003d MAYBE;\n            }\n        } else {\n            allowSecurityManager \u003d MAYBE;\n        }\n\n        if (needWarning) {\n            System.err.println(\"\"\"\n                    WARNING: A command line option has enabled the Security Manager\n                    WARNING: The Security Manager is deprecated and will be removed in a future release\"\"\");\n        }\n\n        initialErrStream \u003d System.err;\n\n        // initializing the system class loader\n        VM.initLevel(3);\n\n        // system class loader initialized\n        ClassLoader scl \u003d ClassLoader.initSystemClassLoader();\n\n        // set TCCL\n        Thread.currentThread().setContextClassLoader(scl);\n\n        // system is fully initialized\n        VM.initLevel(4);\n    }\n\n    private static void setJavaLangAccess() {\n        // Allow privileged classes outside of java.lang\n        SharedSecrets.setJavaLangAccess(new JavaLangAccess() {\n            public List\u003cMethod\u003e getDeclaredPublicMethods(Class\u003c?\u003e klass, String name, Class\u003c?\u003e... parameterTypes) {\n                return klass.getDeclaredPublicMethods(name, parameterTypes);\n            }\n            public jdk.internal.reflect.ConstantPool getConstantPool(Class\u003c?\u003e klass) {\n                return klass.getConstantPool();\n            }\n            public boolean casAnnotationType(Class\u003c?\u003e klass, AnnotationType oldType, AnnotationType newType) {\n                return klass.casAnnotationType(oldType, newType);\n            }\n            public AnnotationType getAnnotationType(Class\u003c?\u003e klass) {\n                return klass.getAnnotationType();\n            }\n            public Map\u003cClass\u003c? extends Annotation\u003e, Annotation\u003e getDeclaredAnnotationMap(Class\u003c?\u003e klass) {\n                return klass.getDeclaredAnnotationMap();\n            }\n            public byte[] getRawClassAnnotations(Class\u003c?\u003e klass) {\n                return klass.getRawAnnotations();\n            }\n            public byte[] getRawClassTypeAnnotations(Class\u003c?\u003e klass) {\n                return klass.getRawTypeAnnotations();\n            }\n            public byte[] getRawExecutableTypeAnnotations(Executable executable) {\n                return Class.getExecutableTypeAnnotationBytes(executable);\n            }\n            public \u003cE extends Enum\u003cE\u003e\u003e\n            E[] getEnumConstantsShared(Class\u003cE\u003e klass) {\n                return klass.getEnumConstantsShared();\n            }\n            public void blockedOn(Interruptible b) {\n                Thread.blockedOn(b);\n            }\n            public void registerShutdownHook(int slot, boolean registerShutdownInProgress, Runnable hook) {\n                Shutdown.add(slot, registerShutdownInProgress, hook);\n            }\n            public Thread newThreadWithAcc(Runnable target, @SuppressWarnings(\"removal\") AccessControlContext acc) {\n                return new Thread(target, acc);\n            }\n            @SuppressWarnings(\"deprecation\")\n            public void invokeFinalize(Object o) throws Throwable {\n                o.finalize();\n            }\n            public ConcurrentHashMap\u003c?, ?\u003e createOrGetClassLoaderValueMap(ClassLoader cl) {\n                return cl.createOrGetClassLoaderValueMap();\n            }\n            public Class\u003c?\u003e defineClass(ClassLoader loader, String name, byte[] b, ProtectionDomain pd, String source) {\n                return ClassLoader.defineClass1(loader, name, b, 0, b.length, pd, source);\n            }\n            public Class\u003c?\u003e defineClass(ClassLoader loader, Class\u003c?\u003e lookup, String name, byte[] b, ProtectionDomain pd,\n                                        boolean initialize, int flags, Object classData) {\n                return ClassLoader.defineClass0(loader, lookup, name, b, 0, b.length, pd, initialize, flags, classData);\n            }\n            public Class\u003c?\u003e findBootstrapClassOrNull(String name) {\n                return ClassLoader.findBootstrapClassOrNull(name);\n            }\n            public Package definePackage(ClassLoader cl, String name, Module module) {\n                return cl.definePackage(name, module);\n            }\n            public String fastUUID(long lsb, long msb) {\n                return Long.fastUUID(lsb, msb);\n            }\n            @SuppressWarnings(\"removal\")\n            public void addNonExportedPackages(ModuleLayer layer) {\n                SecurityManager.addNonExportedPackages(layer);\n            }\n            @SuppressWarnings(\"removal\")\n            public void invalidatePackageAccessCache() {\n                SecurityManager.invalidatePackageAccessCache();\n            }\n            public Module defineModule(ClassLoader loader,\n                                       ModuleDescriptor descriptor,\n                                       URI uri) {\n                return new Module(null, loader, descriptor, uri);\n            }\n            public Module defineUnnamedModule(ClassLoader loader) {\n                return new Module(loader);\n            }\n            public void addReads(Module m1, Module m2) {\n                m1.implAddReads(m2);\n            }\n            public void addReadsAllUnnamed(Module m) {\n                m.implAddReadsAllUnnamed();\n            }\n            public void addExports(Module m, String pn) {\n                m.implAddExports(pn);\n            }\n            public void addExports(Module m, String pn, Module other) {\n                m.implAddExports(pn, other);\n            }\n            public void addExportsToAllUnnamed(Module m, String pn) {\n                m.implAddExportsToAllUnnamed(pn);\n            }\n            public void addOpens(Module m, String pn, Module other) {\n                m.implAddOpens(pn, other);\n            }\n            public void addOpensToAllUnnamed(Module m, String pn) {\n                m.implAddOpensToAllUnnamed(pn);\n            }\n            public void addOpensToAllUnnamed(Module m, Set\u003cString\u003e concealedPackages, Set\u003cString\u003e exportedPackages) {\n                m.implAddOpensToAllUnnamed(concealedPackages, exportedPackages);\n            }\n            public void addUses(Module m, Class\u003c?\u003e service) {\n                m.implAddUses(service);\n            }\n            public boolean isReflectivelyExported(Module m, String pn, Module other) {\n                return m.isReflectivelyExported(pn, other);\n            }\n            public boolean isReflectivelyOpened(Module m, String pn, Module other) {\n                return m.isReflectivelyOpened(pn, other);\n            }\n            public Module addEnableNativeAccess(Module m) {\n                return m.implAddEnableNativeAccess();\n            }\n            public void addEnableNativeAccessAllUnnamed() {\n                Module.implAddEnableNativeAccessAllUnnamed();\n            }\n            public boolean isEnableNativeAccess(Module m) {\n                return m.implIsEnableNativeAccess();\n            }\n            public ServicesCatalog getServicesCatalog(ModuleLayer layer) {\n                return layer.getServicesCatalog();\n            }\n            public void bindToLoader(ModuleLayer layer, ClassLoader loader) {\n                layer.bindToLoader(loader);\n            }\n            public Stream\u003cModuleLayer\u003e layers(ModuleLayer layer) {\n                return layer.layers();\n            }\n            public Stream\u003cModuleLayer\u003e layers(ClassLoader loader) {\n                return ModuleLayer.layers(loader);\n            }\n\n            public String newStringNoRepl(byte[] bytes, Charset cs) throws CharacterCodingException  {\n                return String.newStringNoRepl(bytes, cs);\n            }\n\n            public byte[] getBytesNoRepl(String s, Charset cs) throws CharacterCodingException {\n                return String.getBytesNoRepl(s, cs);\n            }\n\n            public String newStringUTF8NoRepl(byte[] bytes, int off, int len) {\n                return String.newStringUTF8NoRepl(bytes, off, len);\n            }\n\n            public byte[] getBytesUTF8NoRepl(String s) {\n                return String.getBytesUTF8NoRepl(s);\n            }\n\n            public void inflateBytesToChars(byte[] src, int srcOff, char[] dst, int dstOff, int len) {\n                StringLatin1.inflate(src, srcOff, dst, dstOff, len);\n            }\n\n            public int decodeASCII(byte[] src, int srcOff, char[] dst, int dstOff, int len) {\n                return String.decodeASCII(src, srcOff, dst, dstOff, len);\n            }\n\n            public void setCause(Throwable t, Throwable cause) {\n                t.setCause(cause);\n            }\n\n            public ProtectionDomain protectionDomain(Class\u003c?\u003e c) {\n                return c.protectionDomain();\n            }\n\n            public MethodHandle stringConcatHelper(String name, MethodType methodType) {\n                return StringConcatHelper.lookupStatic(name, methodType);\n            }\n\n            public long stringConcatInitialCoder() {\n                return StringConcatHelper.initialCoder();\n            }\n\n            public long stringConcatMix(long lengthCoder, String constant) {\n                return StringConcatHelper.mix(lengthCoder, constant);\n            }\n\n            public String join(String prefix, String suffix, String delimiter, String[] elements, int size) {\n                return String.join(prefix, suffix, delimiter, elements, size);\n            }\n\n            public Object classData(Class\u003c?\u003e c) {\n                return c.getClassData();\n            }\n\n            @Override\n            public long findNative(ClassLoader loader, String entry) {\n                return ClassLoader.findNative(loader, entry);\n            }\n\n            @Override\n            public void exit(int statusCode) {\n                Shutdown.exit(statusCode);\n            }\n        });\n    }\n}\n"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/System.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:152)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:774)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:771)
	at scala.meta.internal.metals.WorkspaceLspService.didOpen(WorkspaceLspService.scala:391)
	at scala.meta.metals.lsp.DelegatingScalaService.didOpen(DelegatingScalaService.scala:39)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/System.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

нояб. 11, 2024 1:45:20 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleNotification
WARNING: Notification threw an exception: {
  "jsonrpc": "2.0",
  "method": "textDocument/didClose",
  "params": {
    "textDocument": {
      "uri": "jar:file%3A///C%3A/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%25252B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17%2B35/lib/src.zip%21/java.base/java/lang/System.java"
    }
  }
}
java.lang.IllegalArgumentException: Illegal character in opaque part at index 185: jar:file:///C:/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/System.java
	at java.base/java.net.URI.create(URI.java:906)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:177)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.$anonfun$toAbsolutePath$3(MtagsEnrichments.scala:174)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.withTryDecode$1(MtagsEnrichments.scala:152)
	at scala.meta.internal.mtags.MtagsEnrichments$XtensionStringMtags.toAbsolutePath(MtagsEnrichments.scala:174)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:774)
	at scala.meta.internal.metals.MetalsEnrichments$XtensionString.toAbsolutePath(MetalsEnrichments.scala:771)
	at scala.meta.internal.metals.WorkspaceLspService.didClose(WorkspaceLspService.scala:410)
	at scala.meta.metals.lsp.DelegatingScalaService.didClose(DelegatingScalaService.scala:53)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.lambda$recursiveFindRpcMethods$0(GenericEndpoint.java:65)
	at org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint.notify(GenericEndpoint.java:160)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.handleNotification(RemoteEndpoint.java:231)
	at org.eclipse.lsp4j.jsonrpc.RemoteEndpoint.consume(RemoteEndpoint.java:198)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.handleMessage(StreamMessageProducer.java:185)
	at org.eclipse.lsp4j.jsonrpc.json.StreamMessageProducer.listen(StreamMessageProducer.java:97)
	at org.eclipse.lsp4j.jsonrpc.json.ConcurrentMessageProcessor.run(ConcurrentMessageProcessor.java:114)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.net.URISyntaxException: Illegal character in opaque part at index 185: jar:file:///C:/Users/danch/AppData/Local/Coursier/cache/arc/https/github.com/adoptium/temurin17-binaries/releases/download/jdk-17%2B35/OpenJDK17-jdk_x64_windows_hotspot_17_35.zip/jdk-17 35/lib/src.zip!/java.base/java/lang/System.java
	at java.base/java.net.URI$Parser.fail(URI.java:2974)
	at java.base/java.net.URI$Parser.checkChars(URI.java:3145)
	at java.base/java.net.URI$Parser.parse(URI.java:3181)
	at java.base/java.net.URI.<init>(URI.java:623)
	at java.base/java.net.URI.create(URI.java:904)
	... 24 more

2024.11.11 13:45:23 INFO  compiling lr2 (1 scala source)
2024.11.11 13:45:23 INFO  time: compiled lr2 in 0.51s
2024.11.11 13:45:47 INFO  compiling lr2 (1 scala source)
2024.11.11 13:45:47 INFO  time: compiled lr2 in 0.46s
2024.11.11 13:49:17 INFO  compiling lr2 (1 scala source)
2024.11.11 13:49:17 INFO  time: compiled lr2 in 0.63s
2024.11.11 13:49:28 INFO  compiling lr2 (1 scala source)
2024.11.11 13:49:28 INFO  time: compiled lr2 in 0.39s
2024.11.11 13:49:42 INFO  compiling lr2 (1 scala source)
2024.11.11 13:49:42 INFO  time: compiled lr2 in 0.46s
нояб. 11, 2024 1:49:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3018
нояб. 11, 2024 1:49:54 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3020
2024.11.11 13:49:56 INFO  compiling lr2 (1 scala source)
2024.11.11 13:49:56 INFO  time: compiled lr2 in 0.61s
2024.11.11 13:50:00 INFO  time: compiled lr2 in 20ms
нояб. 11, 2024 1:50:13 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3099
2024.11.11 13:50:15 INFO  compiling lr2 (1 scala source)
2024.11.11 13:50:15 INFO  time: compiled lr2 in 0.47s
2024.11.11 13:50:28 INFO  compiling lr2 (1 scala source)
2024.11.11 13:50:28 INFO  time: compiled lr2 in 0.47s
2024.11.11 13:50:38 INFO  compiling lr2 (1 scala source)
2024.11.11 13:50:38 INFO  time: compiled lr2 in 0.43s
2024.11.11 13:50:43 INFO  compiling lr2 (1 scala source)
2024.11.11 13:50:43 INFO  time: compiled lr2 in 0.59s
2024.11.11 13:50:52 INFO  compiling lr2 (1 scala source)
2024.11.11 13:50:52 INFO  time: compiled lr2 in 0.41s
2024.11.11 13:56:58 INFO  compiling lr2 (1 scala source)
2024.11.11 13:56:58 INFO  time: compiled lr2 in 0.53s
нояб. 11, 2024 1:57:17 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3387
нояб. 11, 2024 1:57:25 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3437
2024.11.11 13:57:26 INFO  compiling lr2 (1 scala source)
2024.11.11 13:57:26 INFO  time: compiled lr2 in 0.34s
2024.11.11 13:57:44 INFO  time: compiled lr2 in 8ms
2024.11.11 13:58:27 INFO  compiling lr2 (1 scala source)
2024.11.11 13:58:27 INFO  time: compiled lr2 in 0.59s
нояб. 11, 2024 1:58:45 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3719
нояб. 11, 2024 1:58:45 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3720
нояб. 11, 2024 1:58:45 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3722
2024.11.11 13:58:53 INFO  compiling lr2 (1 scala source)
2024.11.11 13:58:53 INFO  time: compiled lr2 in 0.56s
2024.11.11 13:58:58 INFO  compiling lr2 (1 scala source)
2024.11.11 13:58:58 INFO  time: compiled lr2 in 0.56s
2024.11.11 13:59:03 INFO  compiling lr2 (1 scala source)
2024.11.11 13:59:03 INFO  time: compiled lr2 in 0.64s
2024.11.11 14:04:47 INFO  compiling lr2 (1 scala source)
2024.11.11 14:04:47 INFO  time: compiled lr2 in 70ms
2024.11.11 14:04:48 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
2024.11.11 14:04:48 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
2024.11.11 14:04:49 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
нояб. 11, 2024 2:08:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 3977
2024.11.11 14:08:35 INFO  compiling lr2 (1 scala source)
2024.11.11 14:08:35 INFO  time: compiled lr2 in 0.75s
2024.11.11 14:08:41 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
2024.11.11 14:11:01 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
2024.11.11 14:13:19 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
2024.11.11 14:25:25 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
2024.11.11 14:31:52 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
2024.11.11 15:23:39 INFO  Shutting down server
2024.11.11 15:23:39 INFO  shutting down Metals
2024.11.11 15:23:39 INFO  Shut down connection with build server.
2024.11.11 15:23:39 INFO  Shut down connection with build server.
2024.11.11 15:23:39 INFO  Shut down connection with build server.
2024.11.11 15:23:39 INFO  Shut down connection with build server.
2024.11.11 15:23:39 INFO  Shut down connection with build server.
2024.11.11 15:23:39 INFO  Exiting server
2024.11.11 17:48:57 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП' for client Visual Studio Code 1.95.2.
2024.11.11 17:48:58 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.11 17:48:58 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 17:48:58 INFO  Successfully validated 6 migrations (execution time 00:00.050s)
2024.11.11 17:48:58 INFO  Current version of schema "PUBLIC": 6
2024.11.11 17:48:58 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 17:48:58 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 17:49:00 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 17:49:01 INFO  Attempting to connect to the build server...
2024.11.11 17:49:01 INFO  Found a Bloop server running
2024.11.11 17:49:01 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.11 17:49:01 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 17:49:01 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.11 17:49:01 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 17:49:01 INFO  Successfully validated 6 migrations (execution time 00:00.008s)
2024.11.11 17:49:01 INFO  Current version of schema "PUBLIC": 6
2024.11.11 17:49:01 INFO  Successfully validated 6 migrations (execution time 00:00.008s)
2024.11.11 17:49:01 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 17:49:01 INFO  Current version of schema "PUBLIC": 6
2024.11.11 17:49:01 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 17:49:01 INFO  Attempting to connect to the build server...
2024.11.11 17:49:01 INFO  Attempting to connect to the build server...
2024.11.11 17:49:01 INFO  Found a Bloop server running
2024.11.11 17:49:01 INFO  Found a Bloop server running
2024.11.11 17:49:02 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 17:49:02 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 17:49:02 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 17:49:02 INFO  Attempting to connect to the build server...
2024.11.11 17:49:02 INFO  Attempting to connect to the build server...
2024.11.11 17:49:02 INFO  Found a Bloop server running
2024.11.11 17:49:02 INFO  Found a Bloop server running
2024.11.11 17:49:02 INFO  time: Connected to build server in 1.15s
2024.11.11 17:49:02 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 17:49:03 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 17:49:03 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 17:49:03 INFO  time: Connected to build server in 3s
2024.11.11 17:49:03 INFO  time: Connected to build server in 2.7s
2024.11.11 17:49:03 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 17:49:03 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 17:49:05 INFO  time: Imported build in 2.79s
2024.11.11 17:49:05 INFO  time: Imported build in 0.36s
2024.11.11 17:49:05 INFO  time: Imported build in 0.37s
2024.11.11 17:49:06 INFO  running doctor check
2024.11.11 17:49:06 INFO  running doctor check
2024.11.11 17:49:06 INFO  running doctor check
2024.11.11 17:49:06 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.11 17:49:06 INFO  java targets: main, main-test
2024.11.11 17:49:06 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.11 17:49:11 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 17:49:11 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 17:49:11 INFO  Successfully validated 1 migration (execution time 00:00.008s)
2024.11.11 17:49:11 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 17:49:11 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 17:49:11 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 17:49:11 INFO  Current version of schema "PUBLIC": 1
2024.11.11 17:49:11 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 17:49:11 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 17:49:11 INFO  Successfully validated 1 migration (execution time 00:00.003s)
2024.11.11 17:49:11 INFO  Successfully validated 1 migration (execution time 00:00.003s)
2024.11.11 17:49:11 INFO  Current version of schema "PUBLIC": 1
2024.11.11 17:49:11 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 17:49:11 INFO  Current version of schema "PUBLIC": 1
2024.11.11 17:49:11 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 17:49:11 INFO  time: indexed workspace in 5.66s
2024.11.11 17:49:11 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2c.scala
2024.11.11 17:49:11 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task3.scala
2024.11.11 17:49:11 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala
2024.11.11 17:49:12 INFO  time: indexed workspace in 6.68s
2024.11.11 17:49:12 INFO  time: indexed workspace in 6.79s
2024.11.11 17:49:12 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala
2024.11.11 17:49:12 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task3.scala
2024.11.11 17:49:12 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2c.scala
2024.11.11 17:49:37 WARN  Could not find semantic tokens for: file:///D:/Политех/5%20семестр/ФиЛП%20(Функциональное%20и%20логическое%20программирование)/LR2/lr2/src/main/scala/task3.scala
2024.11.11 18:05:28 INFO  compiling lr2 (1 scala source)
2024.11.11 18:05:28 INFO  time: compiled lr2 in 0.75s
2024.11.11 18:09:40 INFO  compiling lr2 (1 scala source)
2024.11.11 18:09:40 INFO  time: compiled lr2 in 0.33s
2024.11.11 18:10:08 INFO  compiling lr2 (1 scala source)
2024.11.11 18:10:08 INFO  time: compiled lr2 in 0.34s
2024.11.11 18:10:20 INFO  compiling lr2 (1 scala source)
2024.11.11 18:10:20 INFO  time: compiled lr2 in 0.31s
2024.11.11 18:12:44 INFO  compiling lr2 (1 scala source)
2024.11.11 18:12:44 INFO  time: compiled lr2 in 0.4s
2024.11.11 18:14:13 INFO  compiling lr2 (1 scala source)
2024.11.11 18:14:13 INFO  time: compiled lr2 in 0.2s
2024.11.11 18:15:16 INFO  compiling lr2 (1 scala source)
2024.11.11 18:15:16 INFO  time: compiled lr2 in 0.45s
2024.11.11 18:20:32 INFO  compiling lr2 (1 scala source)
2024.11.11 18:20:32 INFO  time: compiled lr2 in 0.42s
нояб. 11, 2024 6:22:02 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 677
2024.11.11 18:22:03 INFO  compiling lr2 (1 scala source)
2024.11.11 18:22:03 INFO  time: compiled lr2 in 0.38s
2024.11.11 18:22:13 INFO  compiling lr2 (1 scala source)
2024.11.11 18:22:13 INFO  time: compiled lr2 in 0.38s
2024.11.11 18:22:18 INFO  compiling lr2 (1 scala source)
2024.11.11 18:22:18 INFO  time: compiled lr2 in 0.34s
нояб. 11, 2024 6:22:28 PM scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\.reports\metals-full\2024-11-11\r_compiler-error_(lr1-test)_18-22-28-921.md
нояб. 11, 2024 6:22:28 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 756
нояб. 11, 2024 6:22:28 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 760
2024.11.11 18:22:29 INFO  compiling lr2 (1 scala source)
2024.11.11 18:22:29 INFO  time: compiled lr2 in 0.37s
2024.11.11 18:31:22 INFO  compiling lr2 (1 scala source)
2024.11.11 18:31:22 INFO  time: compiled lr2 in 0.21s
2024.11.11 18:31:31 INFO  time: compiled lr2 in 18ms
нояб. 11, 2024 6:40:14 PM scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\.reports\metals-full\2024-11-11\r_compiler-error_(lr2)_18-40-14-294.md
нояб. 11, 2024 6:40:14 PM scala.meta.internal.pc.CompilerAccess handleError
SEVERE: A severe compiler error occurred, full details of the error can be found in the error report D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\.reports\metals-full\2024-11-11\r_compiler-error_(lr2)_18-40-14-533.md
2024.11.11 18:40:18 INFO  compiling lr2 (1 scala source)
2024.11.11 18:40:18 INFO  time: compiled lr2 in 0.17s
2024.11.11 18:40:36 INFO  compiling lr2 (1 scala source)
2024.11.11 18:40:36 INFO  time: compiled lr2 in 0.33s
2024.11.11 18:40:47 INFO  compiling lr2 (1 scala source)
2024.11.11 18:40:47 INFO  time: compiled lr2 in 0.35s
нояб. 11, 2024 6:51:55 PM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2024.11.11 18:55:01 INFO  Shutting down server
2024.11.11 18:55:01 INFO  shutting down Metals
2024.11.11 18:55:01 INFO  Shut down connection with build server.
2024.11.11 18:55:01 INFO  Shut down connection with build server.
2024.11.11 18:55:01 INFO  Shut down connection with build server.
2024.11.11 18:55:01 INFO  Shut down connection with build server.
2024.11.11 18:55:01 INFO  Shut down connection with build server.
2024.11.11 18:55:01 INFO  Exiting server
2024.11.11 18:55:14 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП' for client Visual Studio Code 1.95.2.
2024.11.11 18:55:14 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.11 18:55:14 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:55:14 INFO  Successfully validated 6 migrations (execution time 00:00.039s)
2024.11.11 18:55:14 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:55:14 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:55:15 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 18:55:16 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 18:55:16 INFO  Attempting to connect to the build server...
2024.11.11 18:55:16 INFO  Found a Bloop server running
2024.11.11 18:55:16 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.11 18:55:16 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:55:16 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.11 18:55:16 INFO  Successfully validated 6 migrations (execution time 00:00.007s)
2024.11.11 18:55:16 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:55:16 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:55:16 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:55:16 INFO  Successfully validated 6 migrations (execution time 00:00.007s)
2024.11.11 18:55:16 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:55:16 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:55:16 INFO  Attempting to connect to the build server...
2024.11.11 18:55:16 INFO  Found a Bloop server running
2024.11.11 18:55:16 INFO  Attempting to connect to the build server...
2024.11.11 18:55:16 INFO  Found a Bloop server running
2024.11.11 18:55:17 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:55:17 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:55:17 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:55:19 INFO  Attempting to connect to the build server...
2024.11.11 18:55:19 INFO  Attempting to connect to the build server...
2024.11.11 18:55:19 INFO  time: Connected to build server in 2.84s
2024.11.11 18:55:19 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:55:19 INFO  Found a Bloop server running
2024.11.11 18:55:19 INFO  Found a Bloop server running
2024.11.11 18:55:19 INFO  time: Imported build in 0.19s
2024.11.11 18:55:19 INFO  running doctor check
2024.11.11 18:55:19 INFO  java targets: main, main-test
2024.11.11 18:55:20 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:55:20 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:55:20 INFO  time: Connected to build server in 4.57s
2024.11.11 18:55:20 INFO  time: Connected to build server in 4.27s
2024.11.11 18:55:20 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:55:20 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:55:21 INFO  time: Imported build in 0.11s
2024.11.11 18:55:20 INFO  time: Imported build in 0.13s
2024.11.11 18:55:20 INFO  running doctor check
2024.11.11 18:55:20 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.11 18:55:20 INFO  running doctor check
2024.11.11 18:55:20 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.11 18:55:26 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:55:26 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:55:26 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:55:26 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:55:26 INFO  Successfully validated 1 migration (execution time 00:00.010s)
2024.11.11 18:55:26 INFO  Successfully validated 1 migration (execution time 00:00.010s)
2024.11.11 18:55:26 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:55:26 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:55:26 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:55:26 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:55:26 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:55:26 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:55:26 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.11 18:55:26 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:55:26 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:55:26 INFO  time: indexed workspace in 6.77s
2024.11.11 18:55:26 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.11 18:55:27 INFO  time: indexed workspace in 6.86s
2024.11.11 18:55:27 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.11 18:55:28 INFO  time: indexed workspace in 6.87s
2024.11.11 18:57:36 INFO  logging to files D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals.log,D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals.log,C:\Users\danch\Documents\ФиЛП\.metals\metals.log
нояб. 11, 2024 6:57:37 PM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2024.11.11 18:59:11 INFO  logging to files D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals.log,D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals.log,C:\Users\danch\Documents\ФиЛП\.metals\metals.log
2024.11.11 18:59:11 INFO  Shutting down server
2024.11.11 18:59:11 INFO  shutting down Metals
2024.11.11 18:59:11 INFO  Shut down connection with build server.
2024.11.11 18:59:11 INFO  Shut down connection with build server.
2024.11.11 18:59:11 INFO  Shut down connection with build server.
2024.11.11 18:59:11 INFO  Shut down connection with build server.
2024.11.11 18:59:11 INFO  Shut down connection with build server.
2024.11.11 18:59:11 INFO  Exiting server
2024.11.11 18:59:17 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1' for client Visual Studio Code 1.95.2.
2024.11.11 18:59:17 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:19 INFO  Attempting to connect to the build server...
2024.11.11 18:59:19 INFO  Found a Bloop server running
2024.11.11 18:59:19 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:19 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:19 INFO  Attempting to connect to the build server...
2024.11.11 18:59:19 INFO  Found a Bloop server running
2024.11.11 18:59:19 INFO  Attempting to connect to the build server...
2024.11.11 18:59:19 INFO  Found a Bloop server running
2024.11.11 18:59:19 INFO  Shutting down server
2024.11.11 18:59:19 INFO  shutting down Metals
2024.11.11 18:59:19 INFO  logging to files D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals.log,C:\Users\danch\Documents\ФиЛП\.metals\metals.log,D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals.log
2024.11.11 18:59:19 INFO  Exiting server
2024.11.11 18:59:26 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП' for client Visual Studio Code 1.95.2.
2024.11.11 18:59:26 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.11 18:59:26 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:26 INFO  Successfully validated 6 migrations (execution time 00:00.038s)
2024.11.11 18:59:26 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:59:26 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:27 INFO  Attempting to connect to the build server...
2024.11.11 18:59:27 INFO  Found a Bloop server running
2024.11.11 18:59:27 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.11 18:59:27 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:27 INFO  Successfully validated 6 migrations (execution time 00:00.010s)
2024.11.11 18:59:27 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:59:27 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:27 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.11 18:59:27 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:27 INFO  Successfully validated 6 migrations (execution time 00:00.008s)
2024.11.11 18:59:27 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:59:27 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:27 INFO  Attempting to connect to the build server...
2024.11.11 18:59:27 INFO  Found a Bloop server running
2024.11.11 18:59:27 INFO  Attempting to connect to the build server...
2024.11.11 18:59:27 INFO  Found a Bloop server running
2024.11.11 18:59:28 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:27 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 18:59:28 INFO  Attempting to connect to the build server...
2024.11.11 18:59:28 INFO  Found a Bloop server running
2024.11.11 18:59:28 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:28 INFO  Attempting to connect to the build server...
2024.11.11 18:59:28 INFO  Found a Bloop server running
2024.11.11 18:59:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:28 INFO  time: Connected to build server in 0.82s
2024.11.11 18:59:28 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:59:28 INFO  time: Imported build in 0.12s
2024.11.11 18:59:28 INFO  running doctor check
2024.11.11 18:59:28 INFO  java targets: main, main-test
2024.11.11 18:59:29 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:29 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:29 INFO  time: Connected to build server in 2.21s
2024.11.11 18:59:29 INFO  time: Connected to build server in 1.91s
2024.11.11 18:59:29 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:59:29 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:59:29 INFO  time: Imported build in 0.17s
2024.11.11 18:59:29 INFO  time: Imported build in 0.18s
2024.11.11 18:59:29 INFO  running doctor check
2024.11.11 18:59:29 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.11 18:59:31 INFO  running doctor check
2024.11.11 18:59:31 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.11 18:59:37 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:59:37 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:59:37 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:59:37 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:37 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:37 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:37 INFO  Successfully validated 1 migration (execution time 00:00.004s)
2024.11.11 18:59:37 INFO  Successfully validated 1 migration (execution time 00:00.005s)
2024.11.11 18:59:37 INFO  Successfully validated 1 migration (execution time 00:00.005s)
2024.11.11 18:59:37 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:59:37 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:37 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:59:37 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:37 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:59:37 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:37 INFO  time: indexed workspace in 8.23s
2024.11.11 18:59:37 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.11 18:59:38 INFO  time: indexed workspace in 7.46s
2024.11.11 18:59:38 INFO  time: indexed workspace in 8.47s
2024.11.11 18:59:38 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.11 18:59:51 INFO  Shut down connection with build server.
2024.11.11 18:59:51 INFO  Shut down connection with build server.
2024.11.11 18:59:51 INFO  Shut down connection with build server.
2024.11.11 18:59:51 INFO  Shut down connection with build server.
2024.11.11 18:59:51 INFO  Shut down connection with build server.
2024.11.11 18:59:51 INFO  logging to files D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals.log,D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals.log,C:\Users\danch\Documents\ФиЛП\.metals\metals.log
2024.11.11 18:59:51 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.11 18:59:51 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.11 18:59:51 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:51 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:51 INFO  Successfully validated 6 migrations (execution time 00:00.005s)
2024.11.11 18:59:51 INFO  Successfully validated 6 migrations (execution time 00:00.005s)
2024.11.11 18:59:51 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:59:51 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:59:51 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:51 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:51 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.11 18:59:51 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:51 INFO  Successfully validated 6 migrations (execution time 00:00.004s)
2024.11.11 18:59:51 INFO  Current version of schema "PUBLIC": 6
2024.11.11 18:59:51 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:51 INFO  Attempting to connect to the build server...
2024.11.11 18:59:52 INFO  Attempting to connect to the build server...
2024.11.11 18:59:51 INFO  Found a Bloop server running
2024.11.11 18:59:52 INFO  Found a Bloop server running
2024.11.11 18:59:52 INFO  Attempting to connect to the build server...
2024.11.11 18:59:52 INFO  Found a Bloop server running
2024.11.11 18:59:51 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:52 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:51 INFO  Attempting to connect to the build server...
2024.11.11 18:59:52 INFO  Attempting to connect to the build server...
2024.11.11 18:59:52 INFO  Found a Bloop server running
2024.11.11 18:59:51 INFO  Found a Bloop server running
2024.11.11 18:59:52 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:52 INFO  time: Connected to build server in 0.55s
2024.11.11 18:59:52 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:59:52 INFO  running doctor check
2024.11.11 18:59:52 INFO  java targets: main, main-test
2024.11.11 18:59:53 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:53 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 18:59:53 INFO  time: Connected to build server in 1.15s
2024.11.11 18:59:53 INFO  time: Connected to build server in 1.15s
2024.11.11 18:59:53 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:59:53 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 18:59:53 INFO  running doctor check
2024.11.11 18:59:53 INFO  running doctor check
2024.11.11 18:59:53 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.11 18:59:53 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.11 18:59:56 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:59:56 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:56 INFO  Successfully validated 1 migration (execution time 00:00.004s)
2024.11.11 18:59:56 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:59:56 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:56 INFO  time: indexed workspace in 3.98s
2024.11.11 18:59:56 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.11 18:59:57 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:59:57 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:57 INFO  Successfully validated 1 migration (execution time 00:00.001s)
2024.11.11 18:59:57 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:59:57 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:57 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 18:59:57 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 18:59:57 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.11 18:59:57 INFO  Current version of schema "PUBLIC": 1
2024.11.11 18:59:57 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 18:59:57 INFO  time: indexed workspace in 4.77s
2024.11.11 18:59:58 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.11 18:59:57 INFO  time: indexed workspace in 4.84s
нояб. 11, 2024 7:00:20 PM org.eclipse.lsp4j.jsonrpc.services.GenericEndpoint notify
INFO: Unsupported notification method: $/setTrace
2024.11.11 19:06:06 INFO  Shutting down server
2024.11.11 19:06:06 INFO  shutting down Metals
2024.11.11 19:06:06 INFO  Shut down connection with build server.
2024.11.11 19:06:06 INFO  Shut down connection with build server.
2024.11.11 19:06:06 INFO  Shut down connection with build server.
2024.11.11 19:06:06 INFO  Shut down connection with build server.
2024.11.11 19:06:06 INFO  Shut down connection with build server.
2024.11.11 19:06:06 INFO  Exiting server
2024.11.11 19:51:32 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП' for client Visual Studio Code 1.95.2.
2024.11.11 19:51:32 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.11 19:51:32 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 19:51:33 INFO  Successfully validated 6 migrations (execution time 00:00.041s)
2024.11.11 19:51:33 INFO  Current version of schema "PUBLIC": 6
2024.11.11 19:51:33 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 19:51:33 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task1.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 19:51:34 INFO  Attempting to connect to the build server...
2024.11.11 19:51:34 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.11 19:51:34 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 19:51:34 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.11 19:51:34 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 19:51:34 INFO  Successfully validated 6 migrations (execution time 00:00.013s)
2024.11.11 19:51:34 INFO  Current version of schema "PUBLIC": 6
2024.11.11 19:51:34 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 19:51:34 INFO  Successfully validated 6 migrations (execution time 00:00.014s)
2024.11.11 19:51:34 INFO  Current version of schema "PUBLIC": 6
2024.11.11 19:51:34 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 19:51:34 INFO  Found a Bloop server running
2024.11.11 19:51:34 INFO  Attempting to connect to the build server...
2024.11.11 19:51:34 INFO  Found a Bloop server running
2024.11.11 19:51:34 INFO  Attempting to connect to the build server...
2024.11.11 19:51:34 INFO  Found a Bloop server running
2024.11.11 19:51:35 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 19:51:35 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 19:51:35 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 19:51:35 INFO  time: Connected to build server in 1.07s
2024.11.11 19:51:35 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 19:51:35 INFO  Attempting to connect to the build server...
2024.11.11 19:51:35 INFO  Attempting to connect to the build server...
2024.11.11 19:51:35 INFO  Found a Bloop server running
2024.11.11 19:51:35 INFO  Found a Bloop server running
2024.11.11 19:51:35 INFO  time: Imported build in 0.12s
2024.11.11 19:51:35 INFO  running doctor check
2024.11.11 19:51:35 INFO  java targets: main, main-test
2024.11.11 19:51:36 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 19:51:36 INFO  time: Connected to build server in 2.04s
2024.11.11 19:51:36 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 19:51:36 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 19:51:36 INFO  time: Connected to build server in 2.46s
2024.11.11 19:51:36 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 19:51:36 INFO  time: Imported build in 0.24s
2024.11.11 19:51:36 INFO  time: Imported build in 0.22s
2024.11.11 19:51:36 INFO  running doctor check
2024.11.11 19:51:36 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.11 19:51:37 INFO  running doctor check
2024.11.11 19:51:37 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.11 19:51:42 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 19:51:42 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 19:51:42 INFO  Successfully validated 1 migration (execution time 00:00.007s)
2024.11.11 19:51:42 INFO  Current version of schema "PUBLIC": 1
2024.11.11 19:51:42 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 19:51:42 INFO  time: indexed workspace in 8s
2024.11.11 19:51:43 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala
2024.11.11 19:51:42 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task1.scala
2024.11.11 19:51:44 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 19:51:44 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 19:51:44 INFO  Successfully validated 1 migration (execution time 00:00.002s)
2024.11.11 19:51:44 INFO  Current version of schema "PUBLIC": 1
2024.11.11 19:51:44 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 19:51:44 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 19:51:44 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 19:51:44 INFO  Successfully validated 1 migration (execution time 00:00.003s)
2024.11.11 19:51:44 INFO  Current version of schema "PUBLIC": 1
2024.11.11 19:51:44 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 19:51:54 INFO  time: indexed workspace in 16s
2024.11.11 19:51:54 INFO  time: indexed workspace in 17s
2024.11.11 19:51:54 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task1.scala
2024.11.11 19:51:54 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task2a.scala
2024.11.11 20:39:11 INFO  Shutting down server
2024.11.11 20:39:11 INFO  shutting down Metals
2024.11.11 20:39:11 INFO  Shut down connection with build server.
2024.11.11 20:39:11 INFO  Shut down connection with build server.
2024.11.11 20:39:11 INFO  Shut down connection with build server.
2024.11.11 20:39:11 INFO  Shut down connection with build server.
2024.11.11 20:39:11 INFO  Shut down connection with build server.
2024.11.11 20:39:11 INFO  Exiting server
2024.11.11 20:39:22 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП' for client Visual Studio Code 1.95.2.
2024.11.11 20:39:22 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.11 20:39:22 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:39:22 INFO  Successfully validated 6 migrations (execution time 00:00.037s)
2024.11.11 20:39:22 INFO  Current version of schema "PUBLIC": 6
2024.11.11 20:39:22 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:39:23 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task1.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 20:39:23 INFO  Attempting to connect to the build server...
2024.11.11 20:39:23 INFO  Found a Bloop server running
2024.11.11 20:39:24 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.11 20:39:24 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:39:24 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.11 20:39:24 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:39:24 INFO  Successfully validated 6 migrations (execution time 00:00.021s)
2024.11.11 20:39:24 INFO  Current version of schema "PUBLIC": 6
2024.11.11 20:39:24 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:39:24 INFO  Successfully validated 6 migrations (execution time 00:00.022s)
2024.11.11 20:39:24 INFO  Current version of schema "PUBLIC": 6
2024.11.11 20:39:24 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:39:24 INFO  Attempting to connect to the build server...
2024.11.11 20:39:24 INFO  Found a Bloop server running
2024.11.11 20:39:24 INFO  Attempting to connect to the build server...
2024.11.11 20:39:24 INFO  Found a Bloop server running
2024.11.11 20:39:25 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:39:25 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:39:25 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:39:25 INFO  Attempting to connect to the build server...
2024.11.11 20:39:25 INFO  Attempting to connect to the build server...
2024.11.11 20:39:25 INFO  Found a Bloop server running
2024.11.11 20:39:25 INFO  Found a Bloop server running
2024.11.11 20:39:25 INFO  time: Connected to build server in 1.01s
2024.11.11 20:39:25 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 20:39:25 INFO  time: Imported build in 0.17s
2024.11.11 20:39:25 INFO  running doctor check
2024.11.11 20:39:25 INFO  java targets: main, main-test
2024.11.11 20:39:25 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:39:25 INFO  time: Connected to build server in 2.31s
2024.11.11 20:39:25 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 20:39:26 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:39:26 INFO  time: Connected to build server in 2.04s
2024.11.11 20:39:26 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 20:39:26 INFO  running doctor check
2024.11.11 20:39:26 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.11 20:39:26 INFO  running doctor check
2024.11.11 20:39:26 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.11 20:39:31 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 20:39:31 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:39:31 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 20:39:31 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 20:39:31 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:39:31 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:39:31 INFO  Successfully validated 1 migration (execution time 00:00.010s)
2024.11.11 20:39:31 INFO  Successfully validated 1 migration (execution time 00:00.005s)
2024.11.11 20:39:31 INFO  Successfully validated 1 migration (execution time 00:00.004s)
2024.11.11 20:39:31 INFO  Current version of schema "PUBLIC": 1
2024.11.11 20:39:31 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:39:31 INFO  Current version of schema "PUBLIC": 1
2024.11.11 20:39:31 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:39:31 INFO  Current version of schema "PUBLIC": 1
2024.11.11 20:39:31 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:39:31 INFO  time: indexed workspace in 5.97s
2024.11.11 20:39:31 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task1.scala
2024.11.11 20:39:33 INFO  time: indexed workspace in 6.8s
2024.11.11 20:39:33 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\src\main\scala\task1.scala
2024.11.11 20:39:33 INFO  time: indexed workspace in 6.93s
нояб. 11, 2024 8:41:32 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 98
нояб. 11, 2024 8:41:36 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 105
нояб. 11, 2024 8:41:36 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 104
нояб. 11, 2024 8:41:36 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 108
нояб. 11, 2024 8:41:36 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 114
нояб. 11, 2024 8:41:36 PM org.eclipse.lsp4j.jsonrpc.RemoteEndpoint handleCancellation
WARNING: Unmatched cancel notification for request id 107
2024.11.11 20:45:43 INFO  Shutting down server
2024.11.11 20:45:43 INFO  shutting down Metals
2024.11.11 20:45:43 INFO  Shut down connection with build server.
2024.11.11 20:45:43 INFO  Shut down connection with build server.
2024.11.11 20:45:43 INFO  Shut down connection with build server.
2024.11.11 20:45:43 INFO  Shut down connection with build server.
2024.11.11 20:45:43 INFO  Shut down connection with build server.
2024.11.11 20:45:43 INFO  Exiting server
2024.11.11 20:47:25 INFO  Started: Metals version 1.4.0 in folders 'D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1, D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2, C:\Users\danch\Documents\ФиЛП' for client Visual Studio Code 1.95.2.
2024.11.11 20:47:26 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\metals (H2 2.3)
2024.11.11 20:47:26 INFO  Database: jdbc:h2:file:D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\metals (H2 2.3)
2024.11.11 20:47:26 INFO  Database: jdbc:h2:file:C:\Users\danch\Documents\ФиЛП\.metals\metals (H2 2.3)
2024.11.11 20:47:26 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:47:26 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:47:26 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:47:26 INFO  Successfully validated 6 migrations (execution time 00:00.040s)
2024.11.11 20:47:26 INFO  Successfully validated 6 migrations (execution time 00:00.040s)
2024.11.11 20:47:26 INFO  Successfully validated 6 migrations (execution time 00:00.040s)
2024.11.11 20:47:26 INFO  Current version of schema "PUBLIC": 6
2024.11.11 20:47:26 INFO  Current version of schema "PUBLIC": 6
2024.11.11 20:47:26 INFO  Current version of schema "PUBLIC": 6
2024.11.11 20:47:26 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:47:26 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:47:26 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:47:26 INFO  Attempting to connect to the build server...
2024.11.11 20:47:26 INFO  Attempting to connect to the build server...
2024.11.11 20:47:26 INFO  Attempting to connect to the build server...
2024.11.11 20:47:26 INFO  no build target found for D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala. Using presentation compiler with project's scala-library version: 3.3.4
2024.11.11 20:47:26 INFO  Found a Bloop server running
2024.11.11 20:47:26 INFO  Found a Bloop server running
2024.11.11 20:47:26 INFO  Found a Bloop server running
2024.11.11 20:47:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:47:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at C:\Users\danch\Documents\ФиЛП\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:47:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:47:27 INFO  Attempting to connect to the build server...
2024.11.11 20:47:27 INFO  Attempting to connect to the build server...
2024.11.11 20:47:27 INFO  Found a Bloop server running
2024.11.11 20:47:27 INFO  Found a Bloop server running
2024.11.11 20:47:27 INFO  time: Connected to build server in 1.19s
2024.11.11 20:47:27 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 20:47:27 INFO  time: Imported build in 0.12s
2024.11.11 20:47:27 INFO  running doctor check
2024.11.11 20:47:27 INFO  java targets: main, main-test
2024.11.11 20:47:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR2\lr2\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:47:28 INFO  time: Connected to build server in 1.94s
2024.11.11 20:47:28 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 20:47:27 INFO  tracing is disabled for protocol BSP, to enable tracing of incoming and outgoing JSON messages create an empty file at D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\project\.metals\bsp.trace.json or C:\Users\danch\AppData\Local\scalameta\metals\cache\bsp.trace.json
2024.11.11 20:47:27 INFO  running doctor check
2024.11.11 20:47:27 INFO  java targets: lr2, lr2-build, lr2-test
2024.11.11 20:47:28 INFO  time: Connected to build server in 2.12s
2024.11.11 20:47:28 INFO  Connected to Build server: Bloop v2.0.3
2024.11.11 20:47:28 INFO  running doctor check
2024.11.11 20:47:28 INFO  java targets: lr1-build, lr1-test, lr1
2024.11.11 20:47:34 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 20:47:34 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:47:34 INFO  Successfully validated 1 migration (execution time 00:00.003s)
2024.11.11 20:47:34 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 20:47:34 INFO  Database: jdbc:h2:file:C:\Users\danch\AppData\Roaming\metals\data\metals (H2 2.3)
2024.11.11 20:47:34 INFO  Current version of schema "PUBLIC": 1
2024.11.11 20:47:34 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:47:34 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:47:34 WARN  Flyway upgrade recommended: H2 2.3.232 is newer than this version of Flyway and support has not been tested. The latest supported version of H2 is 2.2.224.
2024.11.11 20:47:34 INFO  Successfully validated 1 migration (execution time 00:00.004s)
2024.11.11 20:47:34 INFO  Successfully validated 1 migration (execution time 00:00.003s)
2024.11.11 20:47:34 INFO  Current version of schema "PUBLIC": 1
2024.11.11 20:47:34 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:47:34 INFO  Current version of schema "PUBLIC": 1
2024.11.11 20:47:34 INFO  Schema "PUBLIC" is up to date. No migration necessary.
2024.11.11 20:47:34 INFO  time: indexed workspace in 6.92s
2024.11.11 20:47:34 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.11 20:47:36 INFO  time: indexed workspace in 7.37s
2024.11.11 20:47:36 INFO  time: indexed workspace in 7.59s
2024.11.11 20:47:36 WARN  no build target for: D:\Политех\5 семестр\ФиЛП (Функциональное и логическое программирование)\LR1\lr1\src\main\scala\Main.scala
2024.11.11 20:47:50 INFO  Shutting down server
2024.11.11 20:47:50 INFO  shutting down Metals
2024.11.11 20:47:50 INFO  Shut down connection with build server.
2024.11.11 20:47:50 INFO  Shut down connection with build server.
2024.11.11 20:47:50 INFO  Shut down connection with build server.
2024.11.11 20:47:50 INFO  Shut down connection with build server.
2024.11.11 20:47:50 INFO  Shut down connection with build server.
2024.11.11 20:47:50 INFO  Exiting server
